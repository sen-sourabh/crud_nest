var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Access.html",[0,0.831,1,2.307]],["body/classes/Access.html",[1,2.135,2,0.804,3,0.157,4,0.122,5,3.039,6,0.252,7,1.125,8,3.804,9,4.751,10,1.531,11,0.787,12,1.531,13,1.531,14,3.804,15,3.804,16,1.912,17,3.472,18,0.636,19,0.017,20,0.876,21,1.239,22,1.763,23,3.472,24,4.853,25,1.401,26,1.944,27,2.72,28,3.923,29,3.352,30,2.293,31,3.674,32,2.091,33,2.886,34,3.206,35,2.483,36,2.72,37,2.72,38,2.72,39,1.595,40,3.522,41,3.023,42,2.63,43,1.095,44,1.531,45,1.601,46,1.253,47,1.765,48,1.616,49,1.531,50,1.253,51,3.697,52,2.72,53,1.752,54,0.918,55,3.472,56,0.564,57,1.999,58,1.531,59,1.531,60,1.531,61,1.531,62,1.465,63,1.465,64,1.402,65,1.253,66,1.253,67,1.253,68,1.253,69,1.681,70,1.284,71,1.595,72,1.375,73,2.72,74,0.011,75,0.011]],["title/controllers/AccessController.html",[76,2.032,77,2.94]],["body/controllers/AccessController.html",[1,4.445,3,0.19,4,0.147,6,0.304,11,0.8,17,2.991,18,0.557,19,0.017,20,0.946,21,1.153,25,0.886,56,0.715,70,1.106,74,0.012,75,0.012,77,3.278,78,1.509,79,4.244,80,2.139,81,1.662,82,2.732,83,4.823,84,5.59,85,5.59,86,6.251,87,4.244,88,3.94,89,3.278,90,2.139,91,5.59,92,3.278,93,2.571,94,2.28,95,3.388,96,4.317,97,4.244,98,2.762,99,2.572,100,2.572,101,3.278,102,1.943,103,3.17,104,4.244,105,3.661,106,4.317,107,3.548,108,4.244,109,4.317,110,4.823,111,4.244,112,4.244,113,4.823,114,3.661,115,3.278,116,4.244]],["title/injectables/AccessMiddleware.html",[117,1.638,118,3.284]],["body/injectables/AccessMiddleware.html",[3,0.239,4,0.185,6,0.383,11,0.829,18,0.577,19,0.016,56,0.741,74,0.014,75,0.014,81,1.925,82,2.412,94,1.664,102,2.012,118,4.619,119,2.193,120,5.354,121,4.563,122,2.859,123,5.354,124,4.218,125,4.619,126,5.375,127,6.474,128,5.586,129,5,130,5.586]],["title/modules/AccessModule.html",[131,1.237,132,2.477]],["body/modules/AccessModule.html",[3,0.248,4,0.192,19,0.015,74,0.014,75,0.014,77,4.285,78,1.974,131,1.803,132,4.866,133,2.388,134,2.388,135,2.797,136,2.797,137,2.647,138,3.334,139,2.797,140,4.787,141,4.787,142,5.157,143,3.334,144,2.797,145,2.647,146,5.549]],["title/injectables/AccessService.html",[117,1.638,142,2.683]],["body/injectables/AccessService.html",[1,2.935,3,0.216,4,0.168,6,0.347,11,0.894,18,0.622,19,0.017,20,0.994,56,0.799,70,1.587,74,0.013,75,0.013,81,1.81,82,2.808,88,4.29,90,3.068,94,2.17,102,2.17,103,3.332,119,1.984,122,2.586,142,3.414,147,4.844,148,6.656,149,6.087,150,5.251,151,4.844,152,4.29,153,4.844,154,4.844,155,4.844,156,4.179]],["title/modules/AppModule.html",[131,1.237,157,2.683]],["body/modules/AppModule.html",[3,0.213,4,0.165,19,0.017,74,0.013,75,0.013,131,1.552,132,4.521,133,2.055,134,2.055,135,2.407,136,2.407,137,2.278,138,3.04,139,2.407,143,3.04,144,2.407,145,2.278,157,5.562,158,4.12,159,4.12,160,4.12,161,4.521,162,4.521,163,4.521,164,4.521,165,4.521,166,4.21,167,4.521,168,4.775,169,4.12]],["title/controllers/AuthController.html",[76,2.032,170,2.94]],["body/controllers/AuthController.html",[3,0.167,4,0.129,6,0.267,11,0.807,18,0.562,19,0.017,21,1.095,25,1.381,48,1.46,55,3.615,56,0.722,74,0.011,75,0.011,78,1.328,80,1.882,81,1.525,82,2.654,93,2.571,94,2.123,95,3.108,98,4.105,99,4.006,100,4.006,102,1.96,103,1.782,107,3.58,109,2.884,170,2.884,171,3.734,172,3.221,173,4.425,174,5.129,175,5.858,176,4.425,177,3.734,178,4.445,179,3.734,180,5.129,181,4.871,182,7.23,183,3.961,184,3.734,185,3.734,186,2.855,187,5.129,188,3.128,189,3.325,190,3.734,191,3.734,192,3.221,193,3.734,194,5.858,195,3.221,196,3.221,197,2.884,198,3.734,199,3.338,200,3.734,201,3.009,202,3.734,203,3.325,204,3.734,205,3.734,206,3.221,207,2.119,208,3.734,209,3.734,210,3.734,211,3.734,212,3.734,213,3.734]],["title/modules/AuthModule.html",[131,1.237,161,2.477]],["body/modules/AuthModule.html",[3,0.241,4,0.187,19,0.016,74,0.014,75,0.014,78,1.917,131,1.751,133,2.319,134,2.319,135,2.716,136,2.716,137,2.571,138,3.276,139,2.716,143,3.276,144,2.716,145,2.571,161,4.961,166,4.391,169,4.649,170,4.162,214,4.649,215,4.649,216,5.388,217,4.717,218,5.388]],["title/injectables/AuthService.html",[117,1.638,217,2.477]],["body/injectables/AuthService.html",[3,0.201,4,0.156,6,0.323,11,0.923,18,0.642,19,0.017,20,0.828,25,1.344,56,0.825,70,1.175,74,0.013,75,0.013,81,1.729,82,2.819,94,2.187,102,2.24,103,2.773,119,1.846,122,2.406,124,4.12,173,5.015,176,5.015,178,4.792,188,2.406,189,3.652,199,3.783,217,2.933,219,4.506,220,5.015,221,5.813,222,5.813,223,4.506,224,6.435,225,4.506,226,4.506,227,4.506,228,4.506,229,4.506]],["title/classes/Category.html",[0,0.831,230,1.638]],["body/classes/Category.html",[2,0.788,3,0.154,4,0.12,6,0.247,7,1.109,10,1.509,11,0.78,12,1.509,13,1.509,16,1.894,18,0.664,19,0.017,20,0.995,21,1.249,22,1.903,25,1.273,26,1.961,28,3.893,29,3.179,32,1.65,33,2.089,41,3.007,42,2.592,43,1.072,44,1.509,45,1.577,46,1.227,47,1.509,48,1.381,49,1.509,50,1.227,51,3.16,53,1.227,54,1.265,56,0.697,58,1.509,59,1.509,60,1.509,61,1.509,62,1.444,63,1.444,64,1.381,65,1.227,66,1.227,67,1.227,68,1.227,69,2.316,70,1.589,71,2.198,72,1.895,73,3.749,74,0.011,75,0.011,93,2.168,230,3.098,231,2.976,232,2.755,233,2.908,234,3.404,235,3.16,236,1.988,237,2.245,238,2.432,239,2.432,240,2.942,241,2.942,242,2.091,243,2.976,244,2.091,245,1.739,246,1.958,247,3.16]],["title/controllers/CategoryController.html",[76,2.032,248,2.94]],["body/controllers/CategoryController.html",[3,0.174,4,0.135,6,0.279,11,0.859,18,0.598,19,0.017,20,0.985,21,1.165,54,1.377,56,0.768,70,1.377,74,0.011,75,0.011,78,1.387,80,1.965,81,1.571,82,2.748,90,1.965,92,3.011,93,2.517,94,2.237,95,3.201,96,4.08,98,3.438,99,2.363,100,2.363,101,3.011,102,2.086,103,3.202,106,3.011,107,3.645,115,3.011,230,2.977,248,3.011,249,3.899,250,5.282,251,5.282,252,5.282,253,4.557,254,5.282,255,3.899,256,3.723,257,3.899,258,5.991,259,3.899,260,3.899,261,3.364,262,5.282,263,3.899,264,3.364,265,3.011,266,5.991,267,2.748,268,3.364,269,3.723,270,3.899,271,3.364,272,3.899,273,3.364,274,3.899,275,2.363,276,2.363,277,3.899,278,3.723,279,3.364,280,2.213,281,3.364,282,3.899]],["title/modules/CategoryModule.html",[131,1.237,162,2.477]],["body/modules/CategoryModule.html",[3,0.248,4,0.192,19,0.015,74,0.014,75,0.014,78,1.974,131,1.803,133,2.388,134,2.388,135,2.797,136,2.797,137,2.647,138,3.334,139,2.797,143,3.334,144,2.797,145,2.647,162,4.866,248,4.285,283,4.787,284,4.787,285,5.157,286,5.549]],["title/injectables/CategoryService.html",[117,1.638,285,2.683]],["body/injectables/CategoryService.html",[3,0.2,4,0.155,6,0.32,11,0.921,18,0.641,19,0.017,20,1.024,54,1.507,56,0.823,70,1.507,74,0.013,75,0.013,81,1.72,82,2.816,90,2.915,94,2.182,102,2.235,103,3.349,119,1.831,122,2.387,152,4.076,230,2.758,253,4.989,256,4.076,267,3.15,268,3.856,269,4.076,275,2.709,276,2.709,278,4.076,280,3.282,285,3.15,287,4.47,288,4.989,289,4.47,290,4.47,291,4.47,292,3.856,293,3.856,294,3.15]],["title/classes/CreateAccessDto.html",[0,0.831,88,2.683]],["body/classes/CreateAccessDto.html",[2,0.81,3,0.158,4,0.123,6,0.254,7,1.13,8,3.821,9,4.764,10,1.538,11,0.79,12,1.538,13,1.538,14,3.821,15,3.821,16,1.917,17,3.487,18,0.637,19,0.017,20,1.018,21,1.24,22,1.767,23,3.487,24,4.861,25,1.404,26,1.947,27,2.738,29,1.691,31,3.682,32,2.096,33,2.129,34,3.22,35,2.498,36,2.738,37,2.738,38,2.738,39,1.605,41,2.129,43,1.102,44,1.538,45,1.608,46,1.261,47,1.771,48,1.622,49,1.538,50,1.261,52,2.738,53,1.76,54,0.924,55,3.487,56,0.566,57,2.012,58,1.538,59,1.538,60,1.538,61,1.538,62,1.471,63,1.471,64,1.408,65,1.261,66,1.261,67,1.261,68,1.261,69,1.691,70,1.29,71,1.605,72,1.384,74,0.011,75,0.011,88,2.498,295,3.545,296,2.594,297,3.058,298,4.402]],["title/classes/CreateCategoryDto.html",[0,0.831,256,2.683]],["body/classes/CreateCategoryDto.html",[2,0.79,3,0.154,4,0.12,6,0.247,7,1.11,10,1.748,11,0.941,12,1.748,13,1.748,16,1.896,18,0.642,19,0.017,20,1.012,21,1.25,22,1.904,25,1.392,26,1.962,32,1.652,43,1.074,44,1.074,45,1.123,46,1.23,47,1.511,48,1.383,49,1.074,50,1.23,53,1.23,54,0.901,56,0.698,58,1.074,59,1.511,60,1.511,61,1.511,62,1.446,63,1.446,64,1.383,65,1.23,66,1.23,67,1.23,68,1.23,69,2.32,70,1.59,71,2.201,72,1.898,74,0.011,75,0.011,93,2.17,230,2.947,232,2.759,233,2.91,234,3.407,235,3.164,236,1.991,237,2.25,238,2.437,239,2.437,241,2.095,242,2.095,244,2.095,245,1.742,246,1.962,247,3.164,256,2.437,296,2.605,299,3.457,300,2.437,301,3.191,302,2.67,303,2.596]],["title/classes/CreateInventoryDto.html",[0,0.831,304,2.683]],["body/classes/CreateInventoryDto.html",[2,0.475,3,0.093,4,0.072,6,0.149,7,0.757,10,1.285,11,0.965,12,1.285,13,1.285,16,1.708,18,0.653,19,0.017,20,1.022,21,1.271,22,1.977,25,1.148,26,1.995,29,0.992,30,1.353,31,1.18,32,1.127,33,0.894,39,1.872,41,2.031,43,0.646,44,0.646,45,0.675,46,0.739,47,1.467,48,1.177,49,0.646,50,1.179,53,1.179,54,0.542,56,0.54,58,0.646,59,1.03,60,1.03,61,1.03,62,0.986,63,0.986,64,0.943,65,0.739,66,0.739,67,0.739,68,0.739,69,1.582,70,1.433,71,1.501,72,1.294,74,0.007,75,0.007,80,1.048,93,1.679,186,1.501,230,1.78,232,1.882,233,2.334,234,2.86,236,1.358,241,2.009,242,2.009,244,2.009,245,1.671,246,1.18,296,2.628,301,3.733,302,2.56,303,2.52,304,1.465,305,2.078,306,1.465,307,3.568,308,2.86,309,4.072,310,4.072,311,2.86,312,2.86,313,2.86,314,2.86,315,3.568,316,3.568,317,2.86,318,4.449,319,3.568,320,3.568,321,4.072,322,4.072,323,4.998,324,3.568,325,3.568,326,3.568,327,3.568,328,1.793,329,1.793,330,1.793,331,1.793,332,1.793,333,1.605,334,1.793,335,1.793,336,3.568,337,2.86,338,1.465,339,1.605,340,3.194,341,1.793,342,1.793,343,1.793,344,1.793,345,1.605,346,1.793,347,2.857,348,1.793,349,1.793,350,2.86,351,1.793,352,1.793,353,2.337,354,1.793,355,1.793,356,2.86,357,2.86,358,3.982,359,1.793,360,1.793,361,1.793,362,1.793,363,2.86,364,1.793]],["title/classes/CreateUserDto.html",[0,0.831,365,2.683]],["body/classes/CreateUserDto.html",[2,0.748,3,0.146,4,0.113,6,0.234,7,1.069,10,1.696,11,0.839,12,1.696,13,1.696,16,1.851,18,0.649,19,0.017,20,1.053,21,1.25,22,1.836,25,1.487,26,1.962,32,2.024,33,1.409,39,2.118,41,1.409,42,2.498,43,1.454,44,1.018,45,1.064,46,1.165,47,1.454,48,1.331,49,1.018,50,1.165,53,1.165,54,0.854,56,0.535,58,1.018,59,1.454,60,1.454,61,1.454,62,1.391,63,1.391,64,1.331,65,1.165,66,1.165,67,1.165,68,1.165,74,0.01,75,0.01,186,2.965,201,2.841,203,1.859,207,3.379,233,1.483,236,1.341,240,1.985,296,2.605,303,2.498,347,2.604,365,2.308,366,3.275,367,2.132,368,3.308,369,3.308,370,3.876,371,3.553,372,3.308,373,3.275,374,1.859,375,3.275,376,1.985,377,3.275,378,2.308,379,2.655,380,3.045,381,2.308,382,2.132,383,3.045,384,3.275,385,3.275,386,2.825,387,1.749,388,2.132,389,2.132,390,1.859]],["title/classes/FilterCategroyDto.html",[0,0.831,269,2.683]],["body/classes/FilterCategroyDto.html",[2,0.872,3,0.171,4,0.132,6,0.273,7,1.19,10,1.842,11,0.978,12,1.842,13,1.842,16,1.979,18,0.638,19,0.017,20,0.906,21,1.243,22,1.873,25,1.436,32,1.77,43,1.187,44,1.187,47,1.619,48,1.482,49,1.187,54,0.995,56,0.728,58,1.187,59,1.619,60,1.619,61,1.619,62,1.549,63,1.549,64,1.087,69,2.485,70,1.793,72,2.314,74,0.011,75,0.011,230,1.643,232,2.956,235,3.39,236,2.133,237,2.486,247,3.39,269,2.692,296,2.597,300,2.692,301,3.903,303,2.781,391,3.295,392,3.671,393,6.367,394,2.949,395,4.023,396,2.949]],["title/classes/FilterInventoryDto.html",[0,0.831,397,2.683]],["body/classes/FilterInventoryDto.html",[2,0.964,3,0.189,4,0.146,6,0.302,7,1.272,10,1.938,11,0.972,12,1.938,13,1.938,16,2.061,18,0.631,19,0.017,20,0.944,21,1.229,22,1.806,25,1.385,32,1.894,43,1.312,44,1.312,47,1.732,48,1.586,49,1.312,54,1.101,56,0.759,58,1.312,59,1.732,60,1.732,61,1.732,62,1.657,63,1.657,64,1.202,70,1.728,72,1.648,74,0.012,75,0.012,296,2.581,301,3.763,303,2.975,306,2.976,394,3.261,395,4.303,396,3.261,397,2.976,398,3.643,399,5.572]],["title/classes/FilterUserDto.html",[0,0.831,400,2.683]],["body/classes/FilterUserDto.html",[2,0.791,3,0.155,4,0.12,6,0.248,7,1.112,10,1.513,11,0.981,12,1.513,13,1.513,16,1.898,18,0.655,19,0.017,20,0.95,21,1.25,22,1.962,25,1.393,29,1.653,39,1.568,41,1.491,43,1.077,44,1.513,45,1.126,47,1.513,48,1.385,49,1.513,54,1.269,56,0.699,58,1.513,59,1.513,60,1.513,61,1.513,62,1.448,63,1.448,64,0.986,70,1.269,72,1.352,74,0.011,75,0.011,186,2.764,201,2.913,296,2.605,298,3.76,301,3.889,347,2.323,367,2.255,368,2.95,369,2.95,370,3.974,372,2.95,374,2.763,376,2.95,379,2.763,380,3.169,382,2.255,387,1.85,390,1.966,392,3.431,394,2.675,395,3.76,396,2.675,400,2.442,401,2.989,402,6.106,403,3.464,404,3.464,405,3.464]],["title/classes/Geo.html",[0,0.831,406,3.284]],["body/classes/Geo.html",[2,1.381,3,0.27,4,0.21,19,0.015,74,0.015,75,0.015,406,5.218,407,6.049]],["title/controllers/GeosController.html",[76,2.032,408,2.94]],["body/controllers/GeosController.html",[3,0.239,4,0.185,6,0.382,11,0.683,18,0.476,19,0.016,21,0.926,56,0.611,74,0.014,75,0.014,78,1.898,80,2.69,81,1.922,82,2.407,93,1.898,94,1.659,102,1.659,107,3.029,188,2.849,189,3.029,408,4.122,409,5.337,410,5.337,411,5.575,412,4.604,413,4.206,414,5.337,415,5.337,416,5.575,417,4.604,418,4.604,419,5.337,420,5.337,421,4.604,422,5.337,423,5.337]],["title/modules/GeosModule.html",[131,1.237,163,2.477]],["body/modules/GeosModule.html",[3,0.248,4,0.192,19,0.015,74,0.014,75,0.014,78,1.974,131,1.803,133,2.388,134,2.388,135,2.797,136,2.797,137,2.647,138,3.334,139,2.797,143,3.334,144,2.797,145,2.647,163,4.866,408,4.285,424,4.787,425,4.787,426,5.157,427,5.549]],["title/injectables/GeosService.html",[117,1.638,426,2.683]],["body/injectables/GeosService.html",[3,0.255,4,0.197,6,0.408,11,0.73,18,0.508,19,0.016,20,0.811,56,0.652,74,0.015,75,0.015,81,1.998,94,1.771,102,1.771,119,2.335,188,3.043,411,5.798,412,4.917,413,4.374,426,4.017,428,5.699]],["title/classes/GetCategoryDto.html",[0,0.831,429,2.94]],["body/classes/GetCategoryDto.html",[2,0.748,3,0.146,4,0.113,6,0.234,7,1.069,10,1.696,11,0.981,12,1.696,13,1.696,16,1.851,18,0.642,19,0.017,20,1.053,21,1.25,22,1.911,25,1.368,26,1.962,32,1.59,43,1.018,44,1.018,45,1.064,46,1.165,47,1.851,48,1.331,49,1.018,50,1.165,53,1.165,54,0.854,56,0.681,58,1.018,59,1.454,60,1.454,61,1.454,62,1.391,63,1.391,64,1.331,65,1.165,66,1.165,67,1.165,68,1.165,69,2.232,70,1.707,71,2.471,72,2.131,74,0.01,75,0.01,93,2.118,230,2.967,232,2.655,233,2.851,234,3.308,235,3.045,236,1.916,237,2.132,238,2.308,239,2.308,241,1.985,242,1.985,244,1.985,245,1.651,246,1.859,247,3.045,296,2.605,300,2.308,391,2.825,392,3.297,429,2.529,430,3.275]],["title/classes/GetInventoryDto.html",[0,0.831,431,3.284]],["body/classes/GetInventoryDto.html",[2,0.934,3,0.183,4,0.142,6,0.293,7,1.246,10,1.907,11,0.967,12,1.907,13,1.907,16,2.035,18,0.625,19,0.017,20,1.036,21,1.218,22,1.783,25,1.367,26,1.911,32,1.854,43,1.271,44,1.271,45,1.329,46,1.454,47,2.035,48,1.552,49,1.271,50,1.454,53,1.454,54,1.066,56,0.749,58,1.271,59,1.695,60,1.695,61,1.695,62,1.622,63,1.622,64,1.552,65,1.454,66,1.454,67,1.454,68,1.454,70,1.707,71,1.851,72,1.596,74,0.012,75,0.012,230,2.347,246,2.321,296,2.568,306,2.882,398,3.527,431,3.527]],["title/classes/GetUserDto.html",[0,0.831,432,3.284]],["body/classes/GetUserDto.html",[2,0.748,3,0.146,4,0.113,6,0.234,7,1.069,10,1.454,11,0.981,12,1.454,13,1.454,16,1.851,18,0.654,19,0.017,20,1.053,21,1.25,22,1.962,25,1.505,26,1.962,28,1.985,29,1.563,33,2.349,39,1.483,41,2.013,42,2.498,43,1.454,44,1.454,45,1.52,46,1.165,47,1.454,48,1.331,49,1.454,50,1.165,53,1.165,54,1.22,56,0.681,57,1.859,58,1.454,59,1.454,60,1.454,61,1.454,62,1.391,63,1.391,64,1.331,65,1.165,66,1.165,67,1.165,68,1.165,70,1.22,71,1.483,72,1.279,74,0.01,75,0.01,186,2.851,201,2.841,203,1.859,233,1.483,236,1.341,245,2.358,296,1.59,347,2.604,367,2.132,368,2.835,369,2.835,370,3.876,371,3.045,372,2.835,374,2.655,376,2.835,379,2.655,380,3.045,381,2.308,382,2.132,383,2.132,387,1.749,388,2.132,389,2.132,390,1.859,392,3.297,401,2.825,432,2.825,433,3.275,434,2.308,435,2.308]],["title/classes/Inventory.html",[0,0.831,323,2.683]],["body/classes/Inventory.html",[2,0.475,3,0.093,4,0.072,6,0.149,7,0.757,10,1.03,11,0.604,12,1.03,13,1.03,16,1.708,18,0.681,19,0.017,20,1.047,21,1.271,22,1.977,25,0.986,26,1.995,28,3.33,29,3.083,30,1.353,31,1.18,32,1.127,33,2.481,39,1.872,41,3.152,42,1.77,43,0.646,44,1.03,45,1.077,46,0.739,47,1.467,48,1.177,49,1.03,50,1.179,51,2.158,53,1.179,54,0.864,56,0.54,58,1.03,59,1.03,60,1.03,61,1.03,62,0.986,63,0.986,64,0.943,65,0.739,66,0.739,67,0.739,68,0.739,69,1.582,70,1.433,71,1.501,72,1.294,73,2.56,74,0.007,75,0.007,80,1.048,93,1.679,186,1.501,230,1.427,232,1.882,233,2.334,234,2.86,236,1.358,240,3.985,241,2.86,242,2.009,243,2.86,244,2.009,245,1.671,307,3.568,308,2.86,309,4.072,310,4.072,311,2.86,312,2.86,313,2.86,314,2.86,315,3.568,316,3.568,317,2.86,318,4.449,319,3.568,320,3.568,321,4.072,322,4.072,323,5.117,324,3.568,325,3.568,326,3.568,327,3.568,328,1.793,329,1.793,330,1.793,331,1.793,332,1.793,333,1.605,334,1.793,335,1.793,336,3.568,337,2.86,338,1.465,339,1.605,340,3.194,341,1.793,342,1.793,343,1.793,344,1.793,345,1.605,346,1.793,347,3.083,348,1.793,349,1.793,350,2.86,351,1.793,352,1.793,353,2.337,354,1.793,355,1.793,356,2.86,357,2.86,358,3.645,359,1.793,360,1.793,361,1.793,362,1.793,363,2.86,364,1.793,379,1.18,436,1.793,437,3.315,438,2.078,439,3.315,440,2.56,441,2.078,442,2.078]],["title/controllers/InventoryController.html",[76,2.032,443,2.94]],["body/controllers/InventoryController.html",[3,0.21,4,0.163,6,0.337,11,0.885,18,0.616,19,0.017,20,0.984,21,1.199,56,0.791,70,1.558,74,0.013,75,0.013,78,1.675,80,2.373,81,1.778,89,3.636,90,3.013,93,1.675,94,2.148,102,2.148,107,2.672,275,2.853,280,3.393,294,3.318,304,4.63,323,4.63,397,4.214,443,3.636,444,4.708,445,5.158,446,4.617,447,4.062,448,4.708,449,4.062,450,4.708,451,4.708,452,4.062,453,4.708,454,4.871,455,4.708]],["title/modules/InventoryModule.html",[131,1.237,164,2.477]],["body/modules/InventoryModule.html",[3,0.248,4,0.192,19,0.015,74,0.014,75,0.014,78,1.974,131,1.803,133,2.388,134,2.388,135,2.797,136,2.797,137,2.647,138,3.334,139,2.797,143,3.334,144,2.797,145,2.647,164,4.866,443,4.285,456,4.787,457,4.787,458,5.157,459,5.549]],["title/injectables/InventoryService.html",[117,1.638,458,2.683]],["body/injectables/InventoryService.html",[3,0.213,4,0.165,6,0.342,11,0.917,18,0.638,19,0.017,20,0.859,56,0.82,70,1.572,74,0.013,75,0.013,81,1.794,82,2.247,90,3.04,94,2.159,102,2.227,119,1.956,122,2.549,152,4.251,189,2.71,275,2.894,280,3.424,294,3.365,304,4.66,347,3.314,397,4.251,445,5.204,446,4.659,447,4.12,449,4.12,452,4.12,454,4.896,458,3.365,460,4.775,461,4.775,462,4.775]],["title/injectables/JwtStrategy.html",[117,1.638,463,3.284]],["body/injectables/JwtStrategy.html",[3,0.244,4,0.189,6,0.391,11,0.839,18,0.584,19,0.016,56,0.749,74,0.014,75,0.014,81,1.948,82,2.44,94,1.696,102,2.036,119,2.236,122,2.914,189,3.098,203,3.717,217,4.568,463,4.709,464,5.458,465,5.458,466,4.709,467,5.458,468,5.458,469,5.458,470,5.458]],["title/injectables/LoggerMiddleware.html",[117,1.638,471,3.284]],["body/injectables/LoggerMiddleware.html",[3,0.248,4,0.192,6,0.397,11,0.71,18,0.494,19,0.016,56,0.635,74,0.014,75,0.014,81,1.967,94,1.725,102,1.725,119,2.273,121,4.662,125,4.787,126,5.458,128,6.313,129,5.109,130,5.707,471,4.787,472,5.549,473,4.285]],["title/controllers/MessengerController.html",[76,2.032,474,2.94]],["body/controllers/MessengerController.html",[3,0.236,4,0.183,6,0.378,11,0.677,18,0.471,19,0.016,21,0.917,56,0.605,74,0.014,75,0.014,78,1.88,80,2.665,81,1.911,82,2.393,93,2.285,94,1.643,98,3.441,99,3.204,100,3.204,102,1.643,107,3,126,4.083,188,3.43,189,3,197,4.083,201,2.522,271,4.561,474,4.083,475,5.286,476,5.286,477,5.543,478,5.286,479,4.528,480,5.286,481,5.286,482,5.286,483,4.561,484,5.286,485,5.286]],["title/modules/MessengerModule.html",[131,1.237,165,2.477]],["body/modules/MessengerModule.html",[3,0.248,4,0.192,19,0.015,74,0.014,75,0.014,78,1.974,131,1.803,133,2.388,134,2.388,135,2.797,136,2.797,137,2.647,138,3.334,139,2.797,143,3.334,144,2.797,145,2.647,165,4.866,167,4.763,474,4.285,486,5.549,487,5.549,488,5.549]],["title/injectables/MessengerService.html",[117,1.638,167,2.477]],["body/injectables/MessengerService.html",[3,0.23,4,0.179,6,0.369,11,0.876,18,0.61,19,0.016,20,0.901,56,0.783,74,0.014,75,0.014,81,1.882,82,2.659,94,1.967,102,2.128,103,2.46,119,2.112,122,2.753,167,3.356,189,2.927,477,5.459,479,4.46,489,5.156,490,6.328,491,5.156,492,6.846,493,5.156,494,5.459,495,4.887,496,5.156,497,5.156]],["title/classes/OTPDto.html",[0,0.831,495,2.94]],["body/classes/OTPDto.html",[2,1.227,3,0.24,4,0.186,6,0.384,7,1.482,18,0.578,19,0.016,20,1.031,21,1.126,22,1.767,26,1.767,56,0.828,74,0.014,75,0.014,296,2.46,483,6.245,495,4.148,498,4.634,499,5.596,500,4.634,501,5.371]],["title/classes/OTPRequestDto.html",[0,0.831,479,2.683]],["body/classes/OTPRequestDto.html",[2,1.235,3,0.242,4,0.187,6,0.387,7,1.487,18,0.58,19,0.016,20,1.033,21,1.13,22,1.774,26,1.774,56,0.83,74,0.014,75,0.014,201,3.107,296,2.466,479,3.81,498,4.664,499,5.618,500,4.664,502,5.406]],["title/classes/RequestLatitudeLongitudeGeoDto.html",[0,0.831,413,2.477]],["body/classes/RequestLatitudeLongitudeGeoDto.html",[2,1.037,3,0.203,4,0.157,6,0.325,7,1.335,18,0.608,19,0.016,20,0.971,21,1.184,39,3.369,74,0.013,75,0.013,296,2.529,413,2.957,421,5.883,503,4.542,504,4.542,505,5.041,506,5.041,507,5.041,508,5.041,509,6.819,510,6.42,511,7.441,512,5.843,513,5.883,514,6.819,515,6.42,516,5.843]],["title/injectables/SanitizeFiterPipe.html",[117,1.638,517,3.284]],["body/injectables/SanitizeFiterPipe.html",[3,0.25,4,0.194,6,0.4,11,0.715,18,0.498,19,0.016,56,0.639,74,0.014,75,0.014,81,1.975,94,1.736,102,1.736,119,2.288,276,4.024,517,4.819,518,5.586,519,5.586,520,5.729,521,4.819,522,6.641,523,4.68,524,5.729,525,3.937]],["title/injectables/SanitizeUpdateRequestPipe.html",[117,1.638,526,3.284]],["body/injectables/SanitizeUpdateRequestPipe.html",[3,0.237,4,0.184,6,0.38,11,0.824,18,0.574,19,0.016,56,0.737,74,0.014,75,0.014,81,1.914,82,2.398,94,2.001,102,2.001,103,3.071,119,2.172,188,2.831,276,3.901,429,4.972,520,5.553,521,4.575,523,4.537,524,5.553,525,3.738,526,4.575,527,5.303,528,6.437,529,5.303,530,6.437]],["title/classes/SignInResponseWithEmailPasswordDto.html",[0,0.831,531,3.284]],["body/classes/SignInResponseWithEmailPasswordDto.html",[2,0.736,3,0.144,4,0.112,6,0.231,7,1.057,10,1.438,11,0.834,12,1.438,13,1.438,16,1.838,18,0.662,19,0.017,20,0.995,21,1.247,22,1.828,25,1.516,26,1.956,28,3.949,29,3.276,30,2.099,32,2.01,33,2.328,39,2.095,41,2.955,42,2.47,43,1.438,44,1.438,45,1.504,46,1.147,47,1.438,48,1.317,49,1.438,50,1.147,51,3.012,53,1.147,54,1.206,56,0.677,57,1.83,58,1.438,59,1.438,60,1.438,61,1.438,62,1.376,63,1.376,64,1.317,65,1.147,66,1.147,67,1.147,68,1.147,74,0.01,75,0.01,186,2.95,201,2.821,203,1.83,207,3.356,233,1.46,236,1.321,240,1.954,245,1.625,347,2.582,368,2.804,369,2.804,370,3.848,371,3.012,372,2.804,374,2.626,376,2.804,378,2.273,379,2.626,380,3.012,381,2.273,382,2.099,383,2.099,387,1.722,388,2.099,389,2.099,390,1.83,434,2.273,435,2.273,466,2.782,531,2.782,532,3.225,533,3.225,534,3.992,535,2.782,536,2.782,537,2.782]],["title/classes/SignInWithEmailPasswordDto.html",[0,0.831,199,2.477]],["body/classes/SignInWithEmailPasswordDto.html",[2,1.251,3,0.245,4,0.19,6,0.392,7,1.499,18,0.585,19,0.016,20,0.934,21,1.139,22,1.787,25,1.371,26,1.787,74,0.014,75,0.014,186,2.971,199,3.564,201,3.353,207,3.989,538,4.725,539,5.476,540,5.476]],["title/classes/UpdateAuthDto.html",[0,0.831,541,3.284]],["body/classes/UpdateAuthDto.html",[2,0.81,3,0.158,4,0.123,6,0.254,7,1.13,8,3.821,9,4.764,10,1.538,11,0.79,12,1.538,13,1.538,14,3.821,15,3.821,16,1.917,17,3.487,18,0.637,19,0.017,20,1.018,21,1.24,22,1.767,23,3.487,24,4.861,25,1.404,26,1.947,27,2.738,29,1.691,31,3.682,32,2.096,33,2.129,34,3.22,35,2.498,36,2.738,37,2.738,38,2.738,39,1.605,41,2.129,43,1.102,44,1.538,45,1.608,46,1.261,47,1.771,48,1.622,49,1.538,50,1.261,52,2.738,53,1.76,54,0.924,55,3.487,56,0.566,57,2.012,58,1.538,59,1.538,60,1.538,61,1.538,62,1.471,63,1.471,64,1.408,65,1.261,66,1.261,67,1.261,68,1.261,69,1.691,70,1.29,71,1.605,72,1.384,74,0.011,75,0.011,296,2.594,297,3.058,298,4.402,541,3.058,542,3.545]],["title/classes/UpdateCategoryDto.html",[0,0.831,278,2.683]],["body/classes/UpdateCategoryDto.html",[2,0.783,3,0.153,4,0.119,6,0.245,7,1.104,10,1.74,11,0.965,12,1.74,13,1.74,16,1.889,18,0.641,19,0.017,20,0.973,21,1.248,22,1.9,25,1.389,26,1.958,32,1.643,43,1.066,44,1.066,45,1.114,46,1.22,47,1.502,48,1.375,49,1.066,50,1.22,53,1.22,54,0.894,56,0.696,58,1.066,59,1.502,60,1.502,61,1.502,62,1.437,63,1.437,64,1.375,65,1.22,66,1.22,67,1.22,68,1.22,69,2.306,70,1.584,71,2.188,72,1.887,74,0.011,75,0.011,93,2.162,230,2.94,232,2.743,233,2.901,234,3.392,235,3.146,236,1.98,237,2.232,238,2.417,239,2.417,241,2.078,242,2.078,244,2.078,245,1.728,246,1.946,247,3.146,278,2.417,296,2.602,300,2.417,301,3.637,302,2.648,303,2.581,543,3.429]],["title/classes/UpdateInventoryDto.html",[0,0.831,454,2.683]],["body/classes/UpdateInventoryDto.html",[2,0.989,3,0.194,4,0.15,6,0.31,7,1.294,10,1.962,11,0.913,12,1.962,13,1.962,16,2.081,18,0.619,19,0.017,20,0.989,21,1.206,22,1.72,25,1.399,26,1.893,32,1.926,43,1.346,44,1.346,45,1.407,46,1.541,47,1.761,48,1.612,49,1.346,50,1.541,53,1.541,54,1.129,56,0.766,58,1.346,59,1.761,60,1.761,61,1.761,62,1.685,63,1.685,64,1.612,65,1.541,66,1.541,67,1.541,68,1.541,74,0.012,75,0.012,230,1.864,246,2.458,296,2.555,301,2.458,303,3.025,306,3.053,454,3.053,544,4.331]],["title/classes/UpdateUserDto.html",[0,0.831,545,2.683]],["body/classes/UpdateUserDto.html",[2,0.808,3,0.158,4,0.123,6,0.253,7,1.128,10,1.769,11,0.958,12,1.769,13,1.769,16,1.915,18,0.645,19,0.017,20,1.051,21,1.24,22,1.766,25,1.469,26,1.946,32,2.094,33,1.522,41,1.522,42,2.638,43,1.535,44,1.099,45,1.149,46,1.258,47,1.535,48,1.406,49,1.099,50,1.258,53,1.258,54,0.922,56,0.565,57,2.008,58,1.099,59,1.535,60,1.535,61,1.535,62,1.469,63,1.469,64,1.406,65,1.258,66,1.258,67,1.258,68,1.258,74,0.011,75,0.011,186,2.236,203,2.008,207,3.497,233,1.601,236,1.449,240,2.144,296,2.593,303,2.638,367,2.302,368,3.45,369,3.45,371,3.705,372,3.45,374,2.008,376,2.144,378,2.493,383,2.302,386,3.052,387,1.889,388,2.302,389,2.302,390,2.008,434,2.493,435,2.493,545,2.493,546,3.537]],["title/classes/User.html",[0,0.831,25,0.795]],["body/classes/User.html",[2,0.748,3,0.146,4,0.113,6,0.234,7,1.069,10,1.454,11,0.839,12,1.454,13,1.454,16,1.851,18,0.659,19,0.017,20,0.982,21,1.25,22,1.836,25,1.52,26,1.962,28,3.969,29,3.29,30,2.132,32,2.024,33,2.349,39,2.118,41,2.967,42,2.498,43,1.454,44,1.454,45,1.52,46,1.165,47,1.454,48,1.331,49,1.454,50,1.165,51,3.045,53,1.165,54,1.22,56,0.681,57,1.859,58,1.454,59,1.454,60,1.454,61,1.454,62,1.391,63,1.391,64,1.331,65,1.165,66,1.165,67,1.165,68,1.165,74,0.01,75,0.01,186,2.965,201,2.841,203,1.859,207,3.379,233,1.483,236,1.341,240,1.985,245,1.651,347,2.604,368,2.835,369,2.835,370,3.876,371,3.045,372,2.835,374,2.655,376,2.835,378,2.308,379,2.655,380,3.045,381,2.308,382,2.132,383,2.132,387,1.749,388,2.132,389,2.132,390,1.859,434,2.308,435,2.308,535,2.825,536,2.825,537,2.825,547,2.825]],["title/controllers/UserController.html",[76,2.032,548,2.94]],["body/controllers/UserController.html",[3,0.159,4,0.123,6,0.255,11,0.862,18,0.6,19,0.017,20,1.003,21,1.168,25,1.513,54,1.293,56,0.77,70,1.489,74,0.011,75,0.011,78,1.266,80,1.794,81,1.476,82,2.752,83,4.281,89,2.749,90,1.794,92,2.749,93,2.604,94,2.252,95,3.462,96,3.832,98,3.23,99,3.007,100,3.007,101,2.749,102,2.092,103,3.211,105,3.071,106,4.412,107,3.688,109,4.412,110,4.928,113,3.071,114,3.071,115,2.749,196,4.281,197,2.749,261,3.071,264,3.071,265,2.749,267,2.509,275,2.157,276,2.157,279,3.071,280,2.02,281,4.281,365,3.497,400,3.497,545,3.497,548,2.749,549,3.56,550,4.772,551,4.962,552,4.962,553,4.962,554,4.962,555,4.962,556,3.56,557,4.962,558,3.56,559,4.962,560,3.56,561,3.56,562,3.56,563,3.56,564,3.56,565,3.56]],["title/modules/UserModule.html",[131,1.237,166,2.307]],["body/modules/UserModule.html",[3,0.241,4,0.187,19,0.016,74,0.014,75,0.014,78,1.917,124,4.691,131,1.751,133,2.319,134,2.319,135,2.716,136,2.716,137,2.571,138,3.276,139,3.276,143,3.276,144,2.716,145,2.571,166,4.566,548,4.162,566,4.649,567,4.649,568,4.649,569,5.388]],["title/injectables/UserService.html",[117,1.638,124,2.307]],["body/injectables/UserService.html",[3,0.184,4,0.143,6,0.295,11,0.933,18,0.649,19,0.017,20,1.037,25,1.286,54,1.429,56,0.834,70,1.606,74,0.012,75,0.012,81,1.63,82,2.849,90,2.762,94,2.23,102,2.265,103,3.424,119,1.687,122,2.199,124,2.496,150,4.728,152,3.863,156,3.553,188,2.199,199,3.567,267,2.903,275,2.496,276,2.496,280,3.11,288,4.728,292,3.553,293,3.553,294,2.903,365,3.863,400,3.863,545,3.863,570,4.119,571,5.481,572,5.481,573,4.119,574,4.119,575,4.119,576,4.119,577,4.119]],["title/classes/VerificationJWTTokenDto.html",[0,0.831,178,2.683]],["body/classes/VerificationJWTTokenDto.html",[2,1.329,3,0.26,4,0.202,6,0.416,7,1.554,18,0.518,19,0.016,20,0.828,21,1.01,74,0.015,75,0.015,178,4.1,534,5.869,538,5.019,578,5.818]],["title/dependencies.html",[134,1.97,579,2.741]],["body/dependencies.html",[0,1.342,19,0.017,74,0.013,75,0.013,134,2.115,181,3.796,523,3.464,580,4.915,581,4.915,582,4.915,583,4.915,584,7.019,585,4.915,586,4.915,587,4.915,588,4.915,589,4.915,590,4.915,591,4.915,592,4.915,593,4.915,594,4.24,595,4.915,596,4.915,597,4.915,598,4.915,599,4.915,600,4.915,601,6.143,602,4.915,603,6.143,604,4.915,605,4.915,606,4.915,607,4.915,608,4.915,609,4.915,610,4.915,611,6.143,612,4.915,613,4.915,614,4.915,615,4.915,616,4.915,617,4.915]],["title/miscellaneous/enumerations.html",[618,1.926,619,3.95]],["body/miscellaneous/enumerations.html",[6,0.418,19,0.016,74,0.015,75,0.015,236,2.792,387,3.639,390,3.868,525,4.804,618,3.538,619,5.037,620,5.838,621,5.838]],["title/miscellaneous/functions.html",[618,1.926,622,3.95]],["body/miscellaneous/functions.html",[6,0.428,19,0.015,74,0.015,75,0.015,137,3.48,618,3.626,622,5.162,623,5.984,624,5.984]],["title/index.html",[6,0.227,625,2.741,626,2.741]],["body/index.html",[1,1.128,4,0.206,19,0.018,21,0.526,25,1.2,26,1.619,64,0.53,74,0.007,75,0.007,76,2.364,78,1.575,90,1.935,93,1.079,95,1.128,131,1.791,133,2.558,134,0.801,172,3.312,181,2.343,220,1.606,265,1.438,280,1.722,338,2.138,353,1.312,367,1.975,523,1.312,550,1.438,627,3.034,628,1.862,629,1.862,630,1.862,631,1.862,632,1.862,633,1.862,634,1.606,635,1.862,636,1.606,637,1.606,638,4.755,639,1.606,640,1.862,641,1.606,642,1.862,643,1.606,644,4.958,645,1.862,646,3.034,647,1.862,648,1.862,649,4.257,650,1.862,651,1.862,652,1.606,653,1.606,654,1.862,655,2.617,656,1.862,657,1.862,658,1.862,659,3.839,660,4.875,661,4.427,662,3.034,663,1.862,664,1.606,665,1.862,666,4.875,667,3.034,668,3.034,669,3.034,670,3.034,671,3.034,672,1.862,673,3.034,674,4.51,675,2.617,676,3.034,677,3.839,678,1.862,679,4.427,680,1.862,681,3.034,682,1.862,683,1.862,684,3.839,685,1.862,686,3.034,687,2.617,688,2.617,689,2.617,690,3.034,691,3.034,692,4.875,693,3.839,694,3.034,695,3.034,696,3.839,697,1.862,698,1.862,699,3.034,700,1.862,701,1.862,702,1.862,703,5.227,704,1.862,705,3.034,706,4.875,707,3.839,708,2.965,709,3.034,710,3.034,711,3.034,712,3.034,713,1.862,714,3.034,715,1.862,716,3.312,717,3.839,718,3.034,719,5.505,720,3.839,721,4.755,722,1.862,723,1.862,724,1.862,725,1.862,726,1.606,727,4.206,728,3.034,729,1.862,730,2.617,731,3.839,732,1.606,733,2.617,734,2.617,735,1.862,736,1.862,737,4.427,738,1.862,739,3.312,740,4.427,741,1.862,742,2.617,743,1.862,744,1.862,745,1.862,746,1.862,747,3.034,748,3.034,749,1.862,750,4.206,751,2.617,752,3.034,753,1.862,754,2.617,755,2.617,756,1.862,757,1.606,758,1.606,759,1.606,760,1.862,761,1.862,762,1.438,763,1.606,764,1.606,765,1.862,766,1.862,767,1.862,768,1.862,769,1.438,770,1.862,771,1.606,772,1.862,773,1.606,774,1.606,775,1.862,776,1.862,777,1.862,778,1.862,779,1.862,780,1.606,781,2.617,782,3.034,783,3.034,784,1.862,785,1.862,786,2.138,787,1.606,788,1.862]],["title/license.html",[625,2.741,626,2.741,786,2.24]],["body/license.html",[0,0.112,1,1.423,4,0.034,18,0.086,19,0.006,24,0.362,25,0.857,26,1.079,31,0.292,34,0.335,35,0.682,45,0.167,48,0.585,62,0.153,63,0.408,64,0.146,74,0.003,75,0.002,81,0.153,95,2.901,99,0.312,121,3.558,129,0.397,145,0.245,183,2.207,186,0.784,188,0.275,192,0.444,195,1.182,207,0.292,273,0.835,333,1.059,338,0.966,339,1.337,340,0.397,345,0.397,347,0.462,353,0.362,374,0.549,379,0.778,387,0.924,418,0.444,440,1.587,446,0.747,473,0.397,494,0.444,510,0.444,550,2.379,594,0.835,634,1.773,636,0.444,639,0.835,643,1.493,649,2.207,652,0.444,653,0.444,655,0.835,664,0.835,674,1.182,675,0.444,687,1.493,688,2.256,689,0.444,716,2.834,719,0.835,721,1.493,726,2.465,727,0.835,730,0.444,732,1.493,733,0.444,734,1.182,742,3.149,751,0.444,755,0.444,757,2.026,758,0.444,759,0.444,762,3.96,763,2.026,764,0.444,771,0.444,773,2.026,774,1.773,780,0.835,781,0.444,786,5.034,787,2.256,789,4.586,790,4.966,791,5.127,792,2.055,793,0.514,794,0.514,795,1.371,796,5.468,797,2.465,798,4.689,799,5.273,800,2.348,801,0.514,802,0.514,803,0.968,804,2.055,805,5.127,806,2.055,807,1.371,808,3.963,809,1.371,810,0.514,811,1.371,812,0.514,813,0.514,814,0.968,815,3.65,816,2.348,817,0.514,818,2.348,819,0.514,820,0.514,821,2.858,822,0.968,823,2.055,824,0.514,825,0.514,826,0.514,827,3.963,828,6.246,829,3.963,830,1.371,831,1.371,832,0.968,833,7.076,834,0.968,835,2.615,836,2.615,837,3.963,838,2.348,839,0.514,840,0.514,841,1.731,842,2.858,843,0.968,844,2.858,845,6.041,846,5.69,847,1.371,848,0.514,849,2.256,850,0.968,851,0.514,852,1.371,853,4.586,854,2.055,855,0.968,856,1.731,857,0.514,858,0.514,859,0.968,860,1.731,861,1.731,862,0.968,863,3.65,864,0.968,865,4.787,866,0.968,867,1.731,868,0.514,869,2.615,870,2.055,871,0.514,872,2.858,873,5.584,874,1.371,875,0.514,876,0.514,877,1.773,878,2.858,879,0.968,880,3.475,881,3.285,882,2.055,883,0.968,884,0.514,885,0.514,886,4.105,887,0.968,888,0.514,889,0.514,890,3.812,891,0.968,892,0.514,893,1.371,894,0.514,895,0.514,896,0.968,897,0.514,898,0.514,899,1.731,900,0.514,901,0.514,902,0.514,903,0.514,904,0.514,905,0.514,906,0.968,907,0.514,908,0.514,909,0.514,910,0.968,911,0.514,912,1.371,913,0.968,914,0.514,915,0.514,916,0.968,917,3.963,918,0.514,919,0.968,920,0.968,921,0.514,922,0.514,923,0.968,924,1.371,925,0.968,926,0.968,927,0.514,928,0.514,929,2.348,930,0.514,931,0.514,932,0.514,933,2.055,934,0.514,935,0.514,936,1.731,937,0.514,938,0.514,939,1.371,940,0.514,941,0.514,942,3.08,943,0.514,944,3.963,945,1.731,946,2.055,947,2.348,948,1.371,949,0.514,950,1.371,951,4.477,952,0.968,953,0.514,954,0.514,955,0.514,956,1.371,957,6.114,958,0.514,959,0.514,960,0.968,961,0.968,962,0.514,963,2.834,964,0.514,965,1.731,966,2.858,967,0.514,968,1.371,969,1.371,970,0.968,971,6.003,972,1.371,973,3.08,974,1.731,975,2.615,976,0.968,977,0.514,978,0.968,979,1.371,980,3.08,981,3.285,982,1.731,983,0.514,984,0.968,985,0.968,986,0.514,987,1.731,988,1.731,989,3.08,990,0.514,991,1.371,992,0.514,993,5.202,994,0.968,995,0.514,996,2.858,997,0.514,998,1.371,999,1.731,1000,2.858,1001,4.105,1002,1.731,1003,2.615,1004,0.968,1005,3.475,1006,2.348,1007,0.514,1008,0.514,1009,0.514,1010,0.514,1011,2.858,1012,0.514,1013,0.968,1014,3.812,1015,0.514,1016,0.514,1017,1.371,1018,0.514,1019,0.514,1020,1.371,1021,0.514,1022,0.514,1023,0.514,1024,3.475,1025,1.371,1026,1.371,1027,0.514,1028,0.514,1029,0.514,1030,0.514,1031,0.968,1032,1.371,1033,0.968,1034,3.285,1035,0.514,1036,0.968,1037,2.348,1038,0.514,1039,2.055,1040,1.371,1041,1.371,1042,2.348,1043,1.371,1044,1.371,1045,0.514,1046,0.514,1047,2.055,1048,2.055,1049,2.348,1050,0.514,1051,0.444,1052,0.514,1053,0.968,1054,0.514,1055,1.371,1056,0.514,1057,0.514,1058,0.514,1059,0.514,1060,0.514,1061,0.968,1062,0.514,1063,4.966,1064,2.858,1065,0.968,1066,0.514,1067,0.514,1068,0.968,1069,0.968,1070,0.514,1071,0.514,1072,0.968,1073,1.371,1074,2.055,1075,0.514,1076,0.968,1077,0.514,1078,2.348,1079,0.514,1080,1.731,1081,0.514,1082,3.285,1083,2.615,1084,1.731,1085,0.514,1086,2.055,1087,0.514,1088,0.968,1089,0.514,1090,0.514,1091,1.371,1092,1.182,1093,0.514,1094,0.514,1095,0.514,1096,1.371,1097,1.371,1098,2.348,1099,0.514,1100,0.514,1101,0.968,1102,0.968,1103,2.055,1104,0.968,1105,0.514,1106,3.812,1107,0.968,1108,0.514,1109,0.514,1110,0.514,1111,0.514,1112,0.514,1113,0.514,1114,1.371,1115,0.514,1116,0.514,1117,4.105,1118,0.514,1119,0.514,1120,0.514,1121,2.055,1122,2.055,1123,0.514,1124,0.514,1125,1.371,1126,0.514,1127,0.514,1128,1.731,1129,0.514,1130,0.968,1131,0.514,1132,0.514,1133,0.514,1134,0.514,1135,0.514,1136,0.514,1137,0.968,1138,0.968,1139,0.514,1140,1.371,1141,0.514,1142,0.514,1143,0.968,1144,0.514,1145,0.514,1146,0.514,1147,0.514,1148,0.968,1149,0.968,1150,0.968,1151,0.968,1152,3.08,1153,0.968,1154,2.348,1155,0.514,1156,0.514,1157,0.968,1158,1.371,1159,1.371,1160,1.731,1161,1.731,1162,1.371,1163,1.731,1164,1.182,1165,0.514,1166,2.055,1167,2.055,1168,1.182,1169,1.371,1170,0.514,1171,0.968,1172,0.968,1173,2.055,1174,0.968,1175,1.731,1176,1.731,1177,0.968,1178,1.371,1179,3.963,1180,2.055,1181,0.514,1182,0.514,1183,0.514,1184,1.371,1185,1.371,1186,0.968,1187,0.968,1188,0.514,1189,0.514,1190,0.514,1191,0.514,1192,0.968,1193,0.514,1194,0.514,1195,0.514,1196,1.371,1197,0.514,1198,0.514,1199,0.968,1200,1.371,1201,0.514,1202,0.968,1203,0.514,1204,1.371,1205,0.514,1206,0.514,1207,0.514,1208,0.968,1209,0.968,1210,2.348,1211,4.787,1212,1.371,1213,0.968,1214,0.968,1215,0.968,1216,0.968,1217,1.731,1218,0.968,1219,0.514,1220,0.514,1221,0.514,1222,0.514,1223,2.348,1224,0.968,1225,0.514,1226,0.514,1227,0.514,1228,0.514,1229,0.968,1230,0.514,1231,0.968,1232,0.514,1233,2.055,1234,2.858,1235,0.514,1236,3.475,1237,0.514,1238,0.514,1239,0.514,1240,0.514,1241,0.514,1242,0.968,1243,0.514,1244,0.514,1245,0.514,1246,0.968,1247,1.371,1248,0.968,1249,1.731,1250,1.731,1251,0.968,1252,0.514,1253,0.514,1254,0.968,1255,0.514,1256,0.514,1257,0.514,1258,0.968,1259,0.514,1260,0.514,1261,0.514,1262,0.968,1263,0.514,1264,0.968,1265,0.514,1266,0.514,1267,1.371,1268,0.514,1269,0.514,1270,0.514,1271,0.514,1272,0.514,1273,0.968,1274,0.514,1275,0.514,1276,0.514,1277,0.514,1278,0.514,1279,0.514,1280,1.371,1281,0.514,1282,0.514,1283,0.514,1284,0.514,1285,2.055,1286,0.514,1287,0.514,1288,0.514,1289,0.514,1290,0.514,1291,0.514,1292,0.514,1293,0.514,1294,0.514,1295,0.514,1296,0.968,1297,2.615,1298,1.371,1299,0.514,1300,1.731,1301,0.514,1302,0.514,1303,1.371,1304,0.514,1305,0.514,1306,1.371,1307,0.514,1308,0.968,1309,0.514,1310,0.514,1311,0.514,1312,0.514,1313,0.514,1314,0.514,1315,0.514,1316,0.514,1317,0.514,1318,0.968,1319,0.514,1320,0.514,1321,0.514,1322,0.968,1323,0.968,1324,0.514,1325,0.514,1326,1.371,1327,0.514,1328,1.371,1329,0.514,1330,0.968,1331,0.514,1332,0.968,1333,0.514,1334,1.371,1335,2.615,1336,0.514,1337,0.968,1338,0.968,1339,0.514,1340,0.835,1341,0.514,1342,0.514,1343,0.514,1344,0.514,1345,0.514,1346,0.835,1347,0.514,1348,0.968,1349,1.731,1350,0.514,1351,2.055,1352,0.514,1353,0.514,1354,0.514,1355,0.514,1356,0.514,1357,0.514,1358,0.968,1359,0.968,1360,0.968,1361,1.371,1362,0.514,1363,0.968,1364,0.968,1365,0.514,1366,1.371,1367,0.514,1368,0.968,1369,0.514,1370,0.968,1371,0.514,1372,1.371,1373,0.968,1374,0.514,1375,0.514,1376,0.968,1377,4.966,1378,0.968,1379,0.514,1380,2.055,1381,3.285,1382,1.371,1383,0.514,1384,0.514,1385,0.514,1386,1.731,1387,0.514,1388,0.514,1389,1.371,1390,0.514,1391,0.514,1392,0.514,1393,0.514,1394,1.731,1395,0.514,1396,0.514,1397,0.514,1398,0.514,1399,1.731,1400,0.968,1401,0.968,1402,0.514,1403,0.514,1404,1.371,1405,0.514,1406,0.968,1407,1.371,1408,0.514,1409,0.968,1410,0.514,1411,0.514,1412,0.514,1413,0.514,1414,0.968,1415,1.371,1416,0.514,1417,0.514,1418,0.968,1419,0.514,1420,0.968,1421,0.514,1422,0.514,1423,0.514,1424,0.514,1425,0.514,1426,1.371,1427,0.968,1428,0.514,1429,0.514,1430,1.731,1431,0.514,1432,1.371,1433,0.514,1434,0.514,1435,0.514,1436,0.968,1437,0.514,1438,0.514,1439,0.514,1440,1.371,1441,0.968,1442,0.968,1443,0.514,1444,2.615,1445,0.968,1446,1.371,1447,1.731,1448,0.514,1449,0.514,1450,0.514,1451,0.968,1452,0.514,1453,1.371,1454,0.514,1455,0.968,1456,0.514,1457,0.514,1458,0.514,1459,0.514,1460,0.514,1461,1.371,1462,0.514,1463,1.371,1464,0.968,1465,0.514,1466,0.968,1467,0.514,1468,0.514,1469,0.968,1470,0.968,1471,0.514,1472,0.514,1473,0.968,1474,0.514,1475,0.514,1476,0.514,1477,0.514,1478,0.514,1479,0.514,1480,0.514,1481,0.514,1482,0.514,1483,0.514,1484,1.731,1485,0.968,1486,1.371,1487,0.514,1488,0.514,1489,0.514,1490,0.514,1491,0.514,1492,0.968,1493,0.514,1494,0.514,1495,0.514,1496,0.514,1497,0.514,1498,0.514,1499,0.514,1500,0.514,1501,0.514,1502,0.514,1503,0.514,1504,0.514,1505,0.514,1506,0.514,1507,1.731,1508,0.514,1509,0.968,1510,0.514,1511,0.514,1512,0.514,1513,0.514,1514,0.514,1515,0.514,1516,0.514,1517,0.514,1518,0.514,1519,0.514,1520,1.371,1521,0.514,1522,0.514,1523,0.514,1524,0.514,1525,0.514,1526,0.968,1527,0.514,1528,0.514,1529,0.514,1530,0.514,1531,0.514,1532,0.968,1533,0.968,1534,2.055,1535,1.371,1536,0.968,1537,0.514,1538,0.514,1539,0.514,1540,0.514,1541,0.514,1542,1.371,1543,0.968,1544,0.514,1545,0.968,1546,0.968,1547,0.968,1548,0.514,1549,0.514,1550,0.514,1551,0.514,1552,0.514,1553,0.514,1554,0.968,1555,0.514,1556,0.514,1557,0.514,1558,0.968,1559,0.514,1560,0.514,1561,1.371,1562,0.514,1563,0.514,1564,0.514,1565,0.514,1566,0.514,1567,0.514,1568,0.514,1569,0.514,1570,0.514,1571,0.514,1572,0.514,1573,0.968,1574,0.514,1575,0.514,1576,0.514,1577,0.968,1578,0.514,1579,0.514,1580,0.514,1581,0.514,1582,0.514,1583,0.514,1584,0.514,1585,0.514,1586,0.514,1587,0.514,1588,0.514,1589,0.444,1590,0.514,1591,0.514,1592,0.514,1593,0.514,1594,0.514,1595,1.371,1596,0.968,1597,0.514,1598,0.514,1599,0.514,1600,0.514,1601,0.514,1602,0.444,1603,0.514,1604,0.514,1605,0.968,1606,1.371,1607,0.968,1608,0.444,1609,0.514,1610,0.514,1611,0.514,1612,0.514,1613,0.514,1614,0.514,1615,0.514,1616,0.968,1617,0.514,1618,0.514,1619,0.514,1620,0.514,1621,0.514,1622,0.514,1623,0.514,1624,0.514,1625,0.514,1626,0.514,1627,0.514,1628,0.514,1629,0.514,1630,0.514,1631,0.514,1632,0.514,1633,0.514,1634,0.514,1635,0.514,1636,0.514]],["title/modules.html",[133,2.236]],["body/modules.html",[19,0.014,74,0.014,75,0.014,132,3.485,133,2.304,157,3.773,161,3.485,162,3.485,163,3.485,164,3.485,165,3.485,166,3.244,1168,6.625,1637,7.68,1638,7.68,1639,7.68]],["title/overview.html",[769,4.014]],["body/overview.html",[2,0.938,19,0.017,74,0.012,75,0.012,78,1.461,119,1.683,124,4.345,131,1.335,132,4.446,133,1.768,134,1.768,135,2.071,136,2.071,137,1.96,138,2.071,139,2.071,140,3.545,141,3.545,142,4.336,143,2.758,144,2.071,145,1.96,157,5.469,158,3.545,159,3.545,160,3.545,161,4.667,162,4.446,163,4.446,164,4.446,165,4.446,166,4.345,167,4.27,214,3.545,215,3.545,217,4.004,283,3.545,284,3.545,285,4.336,424,3.545,425,3.545,426,4.336,456,3.545,457,3.545,458,4.336,566,3.545,567,3.545,568,3.545,769,3.173,1164,3.545,1640,4.109,1641,4.109,1642,3.545]],["title/properties.html",[7,1.046,579,2.741]],["body/properties.html",[7,1.347,19,0.017,74,0.015,75,0.015,93,2.098,762,4.557,786,4.158,1340,5.09,1643,5.9,1644,5.9,1645,5.09]],["title/miscellaneous/variables.html",[618,1.926,708,3.536]],["body/miscellaneous/variables.html",[5,2.186,6,0.181,19,0.017,20,0.884,23,2.727,26,0.69,31,2.665,33,3.039,34,1.649,74,0.008,75,0.008,93,0.901,100,2.345,121,1.786,183,1.957,201,2.701,206,3.338,231,2.186,347,2.24,358,1.957,413,1.649,416,3.338,417,2.186,436,2.186,440,1.957,473,1.957,505,3.338,506,3.338,507,2.186,508,2.186,513,3.338,515,2.186,525,4.977,547,2.186,618,1.535,637,2.186,638,2.186,641,4.05,644,2.186,649,2.989,708,1.957,739,3.338,750,2.186,754,3.338,797,3.338,849,4.05,877,4.884,963,2.186,1051,2.186,1092,2.186,1346,2.186,1589,6.093,1602,2.186,1608,2.186,1642,2.186,1645,2.186,1646,3.869,1647,2.533,1648,3.869,1649,2.533,1650,3.869,1651,3.869,1652,2.533,1653,3.869,1654,2.533,1655,3.869,1656,5.968,1657,3.869,1658,3.869,1659,3.869,1660,3.869,1661,2.533,1662,3.869,1663,3.869,1664,3.869,1665,2.533,1666,3.869,1667,2.533,1668,3.869,1669,2.533,1670,2.533,1671,2.533,1672,2.533,1673,2.533,1674,2.533,1675,2.533,1676,2.533,1677,2.533,1678,2.533,1679,2.533,1680,2.533,1681,2.533,1682,2.533,1683,6.904,1684,3.869,1685,2.533,1686,2.533,1687,2.533,1688,2.533,1689,2.533,1690,2.533,1691,2.533,1692,2.533,1693,2.533,1694,3.869,1695,2.533,1696,2.533,1697,3.869,1698,2.533,1699,2.533,1700,2.533,1701,2.533,1702,2.533,1703,2.533,1704,2.533,1705,2.533,1706,2.533,1707,2.533,1708,2.533,1709,3.869,1710,2.533,1711,2.533,1712,2.533,1713,2.533,1714,2.533,1715,4.695,1716,2.533,1717,3.869,1718,2.533,1719,2.533,1720,3.869,1721,2.533,1722,2.533,1723,3.869,1724,5.968,1725,2.533,1726,3.869,1727,5.255,1728,3.869,1729,3.869,1730,2.533,1731,2.533,1732,2.533,1733,2.533,1734,3.869,1735,2.533,1736,2.533,1737,2.533,1738,2.533,1739,2.533,1740,2.533,1741,2.533,1742,2.533,1743,2.533,1744,2.533,1745,2.533,1746,2.533,1747,2.533,1748,2.533]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"modules/AccessModule.html":{},"injectables/AccessService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/Geo.html":{},"controllers/GeosController.html":{},"modules/GeosModule.html":{},"injectables/GeosService.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"modules/InventoryModule.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/VerificationJWTTokenDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":358,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{},"miscellaneous/variables.html":{}}}],["0)'})@prop({required",{"_index":442,"title":{},"body":{"classes/Inventory.html":{}}}],["0.0.1",{"_index":1643,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["07",{"_index":37,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{}}}],["1",{"_index":440,"title":{},"body":{"classes/Inventory.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["1.10.3",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":379,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/User.html":{},"license.html":{}}}],["10.0.0",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":329,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["10000",{"_index":438,"title":{},"body":{"classes/Inventory.html":{}}}],["11",{"_index":1130,"title":{},"body":{"license.html":{}}}],["12",{"_index":1641,"title":{},"body":{"overview.html":{}}}],["120",{"_index":325,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["120'})@isnumber({allownan",{"_index":348,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["123456'})@isstring({message",{"_index":501,"title":{},"body":{"classes/OTPDto.html":{}}}],["1234567890'})@isphonenumber(undefined",{"_index":381,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/User.html":{}}}],["127.0.0.1'})@isstring({message",{"_index":46,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["13",{"_index":1523,"title":{},"body":{"license.html":{}}}],["15",{"_index":1337,"title":{},"body":{"license.html":{}}}],["16",{"_index":1338,"title":{},"body":{"license.html":{}}}],["180",{"_index":515,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{},"miscellaneous/variables.html":{}}}],["1996",{"_index":1136,"title":{},"body":{"license.html":{}}}],["2",{"_index":877,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1134,"title":{},"body":{"license.html":{}}}],["200",{"_index":107,"title":{},"body":{"controllers/AccessController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/GeosController.html":{},"controllers/InventoryController.html":{},"controllers/MessengerController.html":{},"controllers/UserController.html":{}}}],["2007",{"_index":795,"title":{},"body":{"license.html":{}}}],["201",{"_index":92,"title":{},"body":{"controllers/AccessController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["2023",{"_index":36,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{}}}],["25",{"_index":1642,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["28",{"_index":1503,"title":{},"body":{"license.html":{}}}],["29",{"_index":793,"title":{},"body":{"license.html":{}}}],["29t06:00:54.567z'})@isdatestring",{"_index":38,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{}}}],["3",{"_index":792,"title":{},"body":{"license.html":{}}}],["3.0",{"_index":788,"title":{},"body":{"index.html":{}}}],["3.1.1",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":34,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["3958.8",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1169,"title":{},"body":{"license.html":{}}}],["4.0.1",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":98,"title":{},"body":{"controllers/AccessController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/MessengerController.html":{},"controllers/UserController.html":{}}}],["404",{"_index":109,"title":{},"body":{"controllers/AccessController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["415829.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1'})@isstring({message",{"_index":385,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["5",{"_index":1205,"title":{},"body":{"license.html":{}}}],["5'})@isnumber({allownan",{"_index":351,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["6.9.9",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1390,"title":{},"body":{"license.html":{}}}],["6371",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64c4ab16336bcced427a125c'})@isstring({message",{"_index":71,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["6b",{"_index":1230,"title":{},"body":{"license.html":{}}}],["6d",{"_index":1256,"title":{},"body":{"license.html":{}}}],["7",{"_index":1164,"title":{},"body":{"license.html":{},"overview.html":{}}}],["7.1.2",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["7.6.8",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["76'})@isnumber({allownan",{"_index":359,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["8",{"_index":1640,"title":{},"body":{"overview.html":{}}}],["90",{"_index":511,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{}}}],["900000).tostring",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":392,"title":{},"body":{"classes/FilterCategroyDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetUserDto.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ability",{"_index":1305,"title":{},"body":{"license.html":{}}}],["above",{"_index":1372,"title":{},"body":{"license.html":{}}}],["absence",{"_index":1165,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1584,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":1615,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":909,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1400,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1399,"title":{},"body":{"license.html":{}}}],["access",{"_index":1,"title":{"classes/Access.html":{}},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"injectables/AccessService.html":{},"index.html":{},"license.html":{}}}],["access'})@apibadrequestresponse({status",{"_index":97,"title":{},"body":{"controllers/AccessController.html":{}}}],["access'})@apinotfoundresponse({status",{"_index":108,"title":{},"body":{"controllers/AccessController.html":{}}}],["access'})@apiresponse({status",{"_index":91,"title":{},"body":{"controllers/AccessController.html":{}}}],["access'})@httpcode(200",{"_index":116,"title":{},"body":{"controllers/AccessController.html":{}}}],["access_token",{"_index":534,"title":{},"body":{"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/VerificationJWTTokenDto.html":{}}}],["accesscontroller",{"_index":77,"title":{"controllers/AccessController.html":{}},"body":{"controllers/AccessController.html":{},"modules/AccessModule.html":{}}}],["accessible",{"_index":1472,"title":{},"body":{"license.html":{}}}],["accessmiddleware",{"_index":118,"title":{"injectables/AccessMiddleware.html":{}},"body":{"injectables/AccessMiddleware.html":{}}}],["accessmodel",{"_index":153,"title":{},"body":{"injectables/AccessService.html":{}}}],["accessmodule",{"_index":132,"title":{"modules/AccessModule.html":{}},"body":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["accessschema",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessservice",{"_index":142,"title":{"injectables/AccessService.html":{}},"body":{"modules/AccessModule.html":{},"injectables/AccessService.html":{},"overview.html":{}}}],["accompanied",{"_index":1212,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":1588,"title":{},"body":{"license.html":{}}}],["accord",{"_index":1163,"title":{},"body":{"license.html":{}}}],["according",{"_index":1579,"title":{},"body":{"license.html":{}}}],["achieve",{"_index":1594,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1094,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":1451,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1408,"title":{},"body":{"license.html":{}}}],["active",{"_index":49,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["activities",{"_index":991,"title":{},"body":{"license.html":{}}}],["activity",{"_index":1498,"title":{},"body":{"license.html":{}}}],["actual",{"_index":1477,"title":{},"body":{"license.html":{}}}],["actually",{"_index":1279,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":962,"title":{},"body":{"license.html":{}}}],["add",{"_index":687,"title":{},"body":{"index.html":{},"license.html":{}}}],["addbearerauth",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1162,"title":{},"body":{"license.html":{}}}],["added_by",{"_index":232,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/FilterCategroyDto.html":{},"classes/GetCategoryDto.html":{},"classes/Inventory.html":{},"classes/UpdateCategoryDto.html":{}}}],["adding",{"_index":237,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/FilterCategroyDto.html":{},"classes/GetCategoryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["additional",{"_index":1179,"title":{},"body":{"license.html":{}}}],["address",{"_index":45,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"license.html":{}}}],["address'})@isstring({message",{"_index":394,"title":{},"body":{"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{}}}],["addressed",{"_index":959,"title":{},"body":{"license.html":{}}}],["admin",{"_index":236,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["admin'})@isstring({message",{"_index":405,"title":{},"body":{"classes/FilterUserDto.html":{}}}],["admin@example.com'})@isemail",{"_index":373,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["adopted",{"_index":1133,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":1313,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1574,"title":{},"body":{"license.html":{}}}],["affects",{"_index":1314,"title":{},"body":{"license.html":{}}}],["affero",{"_index":1520,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":1431,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1089,"title":{},"body":{"license.html":{}}}],["again.'})@httpcode(200",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MessengerController.html":{},"controllers/UserController.html":{}}}],["again.'})@httpcode(201",{"_index":101,"title":{},"body":{"controllers/AccessController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["against",{"_index":1151,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":1196,"title":{},"body":{"license.html":{}}}],["agian",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["agree",{"_index":1515,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1560,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1463,"title":{},"body":{"license.html":{}}}],["aim",{"_index":905,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":1439,"title":{},"body":{"license.html":{}}}],["allow",{"_index":931,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":811,"title":{},"body":{"license.html":{}}}],["allowinfinity",{"_index":360,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["along",{"_index":1167,"title":{},"body":{"license.html":{}}}],["already",{"_index":1450,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":1226,"title":{},"body":{"license.html":{}}}],["although",{"_index":901,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":1402,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":882,"title":{},"body":{"license.html":{}}}],["anti",{"_index":1120,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":1176,"title":{},"body":{"license.html":{}}}],["anything",{"_index":974,"title":{},"body":{"license.html":{}}}],["api",{"_index":23,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{},"miscellaneous/variables.html":{}}}],["api_key",{"_index":8,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{}}}],["apikey",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty({description",{"_index":22,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apipropertyoptional({description",{"_index":32,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apiresponse({status",{"_index":270,"title":{},"body":{"controllers/CategoryController.html":{}}}],["app",{"_index":651,"title":{},"body":{"index.html":{}}}],["app.controller.ts",{"_index":669,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":670,"title":{},"body":{"index.html":{}}}],["app.service.ts",{"_index":671,"title":{},"body":{"index.html":{}}}],["applicable",{"_index":980,"title":{},"body":{"license.html":{}}}],["application",{"_index":703,"title":{},"body":{"index.html":{}}}],["application's",{"_index":729,"title":{},"body":{"index.html":{}}}],["applications",{"_index":636,"title":{},"body":{"index.html":{},"license.html":{}}}],["applied",{"_index":938,"title":{},"body":{"license.html":{}}}],["applies",{"_index":832,"title":{},"body":{"license.html":{}}}],["apply",{"_index":837,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":157,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appready",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appropriate",{"_index":726,"title":{},"body":{"index.html":{},"license.html":{}}}],["appropriately",{"_index":1156,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":1583,"title":{},"body":{"license.html":{}}}],["area",{"_index":911,"title":{},"body":{"license.html":{}}}],["argumentmetadata",{"_index":524,"title":{},"body":{"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{}}}],["arise",{"_index":918,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1564,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":1473,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":1486,"title":{},"body":{"license.html":{}}}],["array",{"_index":113,"title":{},"body":{"controllers/AccessController.html":{},"controllers/UserController.html":{}}}],["article",{"_index":1129,"title":{},"body":{"license.html":{}}}],["asking",{"_index":858,"title":{},"body":{"license.html":{}}}],["assert",{"_index":876,"title":{},"body":{"license.html":{}}}],["assets",{"_index":1421,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1070,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1553,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":1587,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":1360,"title":{},"body":{"license.html":{}}}],["assures",{"_index":940,"title":{},"body":{"license.html":{}}}],["async",{"_index":82,"title":{},"body":{"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"injectables/AccessService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/GeosController.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["atindex",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attach",{"_index":1596,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":1375,"title":{},"body":{"license.html":{}}}],["attributed",{"_index":894,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":1341,"title":{},"body":{"license.html":{}}}],["auth",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller.ts",{"_index":682,"title":{},"body":{"index.html":{}}}],["auth.guard.ts",{"_index":700,"title":{},"body":{"index.html":{}}}],["auth.module.ts",{"_index":686,"title":{},"body":{"index.html":{}}}],["auth.service.ts",{"_index":683,"title":{},"body":{"index.html":{}}}],["authcontroller",{"_index":170,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authentication",{"_index":750,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["authmodule",{"_index":161,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1340,"title":{},"body":{"license.html":{},"properties.html":{}}}],["authorization",{"_index":751,"title":{},"body":{"index.html":{},"license.html":{}}}],["authorized",{"_index":1331,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":1445,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":1490,"title":{},"body":{"license.html":{}}}],["authors",{"_index":836,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":217,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["automatic",{"_index":1412,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1080,"title":{},"body":{"license.html":{}}}],["available",{"_index":989,"title":{},"body":{"license.html":{}}}],["avoid",{"_index":935,"title":{},"body":{"license.html":{}}}],["away",{"_index":820,"title":{},"body":{"license.html":{}}}],["b",{"_index":1049,"title":{},"body":{"license.html":{}}}],["bad",{"_index":271,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/MessengerController.html":{}}}],["barcode",{"_index":307,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["base64'})@isbase64({message",{"_index":242,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/GetCategoryDto.html":{},"classes/Inventory.html":{},"classes/UpdateCategoryDto.html":{}}}],["based",{"_index":773,"title":{},"body":{"index.html":{},"license.html":{}}}],["basic",{"_index":1081,"title":{},"body":{"license.html":{}}}],["bearer",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behalf",{"_index":1108,"title":{},"body":{"license.html":{}}}],["being",{"_index":1254,"title":{},"body":{"license.html":{}}}],["believe",{"_index":1482,"title":{},"body":{"license.html":{}}}],["below",{"_index":1115,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":1476,"title":{},"body":{"license.html":{}}}],["best",{"_index":1593,"title":{},"body":{"license.html":{}}}],["between",{"_index":510,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{},"license.html":{}}}],["beyond",{"_index":1198,"title":{},"body":{"license.html":{}}}],["binary",{"_index":430,"title":{},"body":{"classes/GetCategoryDto.html":{}}}],["binary'})@isoptional",{"_index":302,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["binary'})@isoptional()@prop({required",{"_index":243,"title":{},"body":{"classes/Category.html":{},"classes/Inventory.html":{}}}],["body",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GeosController.html":{},"injectables/GeosService.html":{},"controllers/MessengerController.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"injectables/UserService.html":{},"license.html":{}}}],["boolean",{"_index":47,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["boolean'})@isoptional",{"_index":303,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{}}}],["boolean'})@isoptional()@prop({required",{"_index":437,"title":{},"body":{"classes/Inventory.html":{}}}],["bootstrap",{"_index":137,"title":{},"body":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/GeosModule.html":{},"modules/InventoryModule.html":{},"modules/MessengerModule.html":{},"modules/UserModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":887,"title":{},"body":{"license.html":{}}}],["box",{"_index":1622,"title":{},"body":{"license.html":{}}}],["brief",{"_index":715,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1639,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1637,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":241,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/GetCategoryDto.html":{},"classes/Inventory.html":{},"classes/UpdateCategoryDto.html":{}}}],["build",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":631,"title":{},"body":{"index.html":{}}}],["business",{"_index":730,"title":{},"body":{"index.html":{},"license.html":{}}}],["c",{"_index":797,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["calculate",{"_index":415,"title":{},"body":{"controllers/GeosController.html":{}}}],["calculatedistance",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["called",{"_index":969,"title":{},"body":{"license.html":{}}}],["carry",{"_index":1171,"title":{},"body":{"license.html":{}}}],["case",{"_index":1031,"title":{},"body":{"license.html":{}}}],["cases",{"_index":1273,"title":{},"body":{"license.html":{}}}],["catch",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categories",{"_index":266,"title":{},"body":{"controllers/CategoryController.html":{}}}],["categories'})@httpcode(200",{"_index":274,"title":{},"body":{"controllers/CategoryController.html":{}}}],["category",{"_index":230,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/FilterCategroyDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/Inventory.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{}}}],["category'})@apibadrequestresponse({status",{"_index":259,"title":{},"body":{"controllers/CategoryController.html":{}}}],["category'})@apiresponse({status",{"_index":258,"title":{},"body":{"controllers/CategoryController.html":{}}}],["category'})@httpcode(200",{"_index":282,"title":{},"body":{"controllers/CategoryController.html":{}}}],["category'})@isstring({message",{"_index":393,"title":{},"body":{"classes/FilterCategroyDto.html":{}}}],["category.dto.ts",{"_index":300,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/FilterCategroyDto.html":{},"classes/GetCategoryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["category_id",{"_index":308,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["categorycontroller",{"_index":248,"title":{"controllers/CategoryController.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{}}}],["categorymodel",{"_index":290,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categorymodule",{"_index":162,"title":{"modules/CategoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryschema",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categoryservice",{"_index":285,"title":{"injectables/CategoryService.html":{}},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"overview.html":{}}}],["cause",{"_index":1202,"title":{},"body":{"license.html":{}}}],["cease",{"_index":1379,"title":{},"body":{"license.html":{}}}],["certain",{"_index":861,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":1391,"title":{},"body":{"license.html":{}}}],["change",{"_index":823,"title":{},"body":{"license.html":{}}}],["changed",{"_index":892,"title":{},"body":{"license.html":{}}}],["changing",{"_index":810,"title":{},"body":{"license.html":{}}}],["characterized",{"_index":1302,"title":{},"body":{"license.html":{}}}],["characters",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["characters.length",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["characterslength",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charge",{"_index":842,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1536,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":1541,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":1113,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":1121,"title":{},"body":{"license.html":{}}}],["city",{"_index":61,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["civil",{"_index":1586,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1436,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1447,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/Geo.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerificationJWTTokenDto.html":{}},"body":{"dependencies.html":{},"license.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/Geo.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerificationJWTTokenDto.html":{},"overview.html":{}}}],["clear",{"_index":1239,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":884,"title":{},"body":{"license.html":{}}}],["closely",{"_index":1582,"title":{},"body":{"license.html":{}}}],["cluster_accessmodule",{"_index":140,"title":{},"body":{"modules/AccessModule.html":{},"overview.html":{}}}],["cluster_accessmodule_providers",{"_index":141,"title":{},"body":{"modules/AccessModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":283,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_providers",{"_index":284,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_geosmodule",{"_index":424,"title":{},"body":{"modules/GeosModule.html":{},"overview.html":{}}}],["cluster_geosmodule_providers",{"_index":425,"title":{},"body":{"modules/GeosModule.html":{},"overview.html":{}}}],["cluster_inventorymodule",{"_index":456,"title":{},"body":{"modules/InventoryModule.html":{},"overview.html":{}}}],["cluster_inventorymodule_providers",{"_index":457,"title":{},"body":{"modules/InventoryModule.html":{},"overview.html":{}}}],["cluster_messengermodule",{"_index":486,"title":{},"body":{"modules/MessengerModule.html":{}}}],["cluster_messengermodule_providers",{"_index":487,"title":{},"body":{"modules/MessengerModule.html":{}}}],["cluster_usermodule",{"_index":566,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":567,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":568,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":846,"title":{},"body":{"license.html":{}}}],["collect",{"_index":1517,"title":{},"body":{"license.html":{}}}],["combination",{"_index":1525,"title":{},"body":{"license.html":{}}}],["combine",{"_index":1522,"title":{},"body":{"license.html":{}}}],["combined",{"_index":1192,"title":{},"body":{"license.html":{}}}],["comes",{"_index":1177,"title":{},"body":{"license.html":{}}}],["comma",{"_index":60,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["commands",{"_index":1017,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1283,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":1464,"title":{},"body":{"license.html":{}}}],["common",{"_index":1277,"title":{},"body":{"license.html":{}}}],["communication",{"_index":1076,"title":{},"body":{"license.html":{}}}],["compilation",{"_index":1187,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":1197,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":1500,"title":{},"body":{"license.html":{}}}],["compilehtmltohandlebars",{"_index":490,"title":{},"body":{"injectables/MessengerService.html":{}}}],["compilehtmltohandlebars(filename",{"_index":493,"title":{},"body":{"injectables/MessengerService.html":{}}}],["compiler",{"_index":1060,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1417,"title":{},"body":{"license.html":{}}}],["comply",{"_index":1105,"title":{},"body":{"license.html":{}}}],["component",{"_index":1048,"title":{},"body":{"license.html":{}}}],["components",{"_index":692,"title":{},"body":{"index.html":{}}}],["computer",{"_index":984,"title":{},"body":{"license.html":{}}}],["computers",{"_index":934,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":1524,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":1530,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":1495,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":944,"title":{},"body":{"license.html":{}}}],["config",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":766,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1484,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":1404,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":1563,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1630,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1362,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1455,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(`application",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(`project",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(`swagger",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conspicuously",{"_index":1155,"title":{},"body":{"license.html":{}}}],["const",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constantly",{"_index":928,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":1093,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":122,"title":{},"body":{"injectables/AccessMiddleware.html":{},"injectables/AccessService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/MessengerService.html":{},"injectables/UserService.html":{}}}],["constructor(accessmodel",{"_index":151,"title":{},"body":{"injectables/AccessService.html":{}}}],["constructor(authservice",{"_index":468,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(categorymodel",{"_index":289,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(inventorymodel",{"_index":461,"title":{},"body":{"injectables/InventoryService.html":{}}}],["constructor(jwtservice",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(mailerservice",{"_index":491,"title":{},"body":{"injectables/MessengerService.html":{}}}],["constructor(usermodel",{"_index":573,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":123,"title":{},"body":{"injectables/AccessMiddleware.html":{}}}],["construed",{"_index":1505,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":387,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["consumer'})@isstring({message",{"_index":388,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["contact",{"_index":1608,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["contain",{"_index":1501,"title":{},"body":{"license.html":{}}}],["containing",{"_index":1343,"title":{},"body":{"license.html":{}}}],["contains",{"_index":719,"title":{},"body":{"index.html":{},"license.html":{}}}],["content",{"_index":494,"title":{},"body":{"injectables/MessengerService.html":{},"license.html":{}}}],["contents",{"_index":1460,"title":{},"body":{"license.html":{}}}],["context",{"_index":1054,"title":{},"body":{"license.html":{}}}],["continue",{"_index":1308,"title":{},"body":{"license.html":{}}}],["continued",{"_index":1292,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":1359,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":1511,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":824,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1444,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":1446,"title":{},"body":{"license.html":{}}}],["control",{"_index":763,"title":{},"body":{"index.html":{},"license.html":{}}}],["controlled",{"_index":1449,"title":{},"body":{"license.html":{}}}],["controller",{"_index":76,"title":{"controllers/AccessController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/GeosController.html":{},"controllers/InventoryController.html":{},"controllers/MessengerController.html":{},"controllers/UserController.html":{}},"body":{"index.html":{}}}],["controllers",{"_index":78,"title":{},"body":{"controllers/AccessController.html":{},"modules/AccessModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"controllers/GeosController.html":{},"modules/GeosModule.html":{},"controllers/InventoryController.html":{},"modules/InventoryModule.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["convenient",{"_index":1007,"title":{},"body":{"license.html":{}}}],["convey",{"_index":993,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":1488,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":1303,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":1001,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":1358,"title":{},"body":{"license.html":{}}}],["copies",{"_index":808,"title":{},"body":{"license.html":{}}}],["copy",{"_index":805,"title":{},"body":{"license.html":{}}}],["copying",{"_index":945,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":813,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":796,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":955,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":1110,"title":{},"body":{"license.html":{}}}],["correction",{"_index":1557,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":1063,"title":{},"body":{"license.html":{}}}],["cost",{"_index":1224,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":1437,"title":{},"body":{"license.html":{}}}],["countries",{"_index":990,"title":{},"body":{"license.html":{}}}],["country",{"_index":63,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"license.html":{}}}],["course",{"_index":1620,"title":{},"body":{"license.html":{}}}],["court",{"_index":1510,"title":{},"body":{"license.html":{}}}],["courts",{"_index":1581,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":1467,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":664,"title":{},"body":{"index.html":{},"license.html":{}}}],["covered",{"_index":971,"title":{},"body":{"license.html":{}}}],["create",{"_index":90,"title":{},"body":{"controllers/AccessController.html":{},"injectables/AccessService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["create(access",{"_index":154,"title":{},"body":{"injectables/AccessService.html":{}}}],["create(category",{"_index":291,"title":{},"body":{"injectables/CategoryService.html":{}}}],["create(createinventorydto",{"_index":447,"title":{},"body":{"controllers/InventoryController.html":{},"injectables/InventoryService.html":{}}}],["create(user",{"_index":575,"title":{},"body":{"injectables/UserService.html":{}}}],["createaccessdto",{"_index":88,"title":{"classes/CreateAccessDto.html":{}},"body":{"controllers/AccessController.html":{},"injectables/AccessService.html":{},"classes/CreateAccessDto.html":{}}}],["createcategory",{"_index":250,"title":{},"body":{"controllers/CategoryController.html":{}}}],["createcategory(category",{"_index":255,"title":{},"body":{"controllers/CategoryController.html":{}}}],["createcategorydto",{"_index":256,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{}}}],["created",{"_index":96,"title":{},"body":{"controllers/AccessController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["createinventorydto",{"_index":304,"title":{"classes/CreateInventoryDto.html":{}},"body":{"classes/CreateInventoryDto.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{}}}],["createuser",{"_index":83,"title":{},"body":{"controllers/AccessController.html":{},"controllers/UserController.html":{}}}],["createuser(access",{"_index":87,"title":{},"body":{"controllers/AccessController.html":{}}}],["createuser(user",{"_index":556,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":365,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["credentials'})@httpcode(200",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["criterion",{"_index":1022,"title":{},"body":{"license.html":{}}}],["cross",{"_index":1435,"title":{},"body":{"license.html":{}}}],["crud",{"_index":637,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cure",{"_index":1395,"title":{},"body":{"license.html":{}}}],["current",{"_index":58,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["customarily",{"_index":1215,"title":{},"body":{"license.html":{}}}],["customer",{"_index":1221,"title":{},"body":{"license.html":{}}}],["customize",{"_index":772,"title":{},"body":{"index.html":{}}}],["d",{"_index":1185,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1561,"title":{},"body":{"license.html":{}}}],["danger",{"_index":937,"title":{},"body":{"license.html":{}}}],["data",{"_index":674,"title":{},"body":{"index.html":{},"license.html":{}}}],["data.'})@apiresponse({status",{"_index":450,"title":{},"body":{"controllers/InventoryController.html":{}}}],["data.'})@httpcode(200",{"_index":451,"title":{},"body":{"controllers/InventoryController.html":{}}}],["date",{"_index":31,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{},"classes/UpdateAuthDto.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["days",{"_index":35,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{},"license.html":{}}}],["days'})@isoptional",{"_index":297,"title":{},"body":{"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{}}}],["days'})@isoptional()@prop({required",{"_index":40,"title":{},"body":{"classes/Access.html":{}}}],["december",{"_index":1135,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1538,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":136,"title":{},"body":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/GeosModule.html":{},"modules/InventoryModule.html":{},"modules/MessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declining",{"_index":1350,"title":{},"body":{"license.html":{}}}],["decode",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["decodejwttoken",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["decodejwttoken(body",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["decodejwttoken(undefined",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"controllers/AuthController.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"controllers/GeosController.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"controllers/MessengerController.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/VerificationJWTTokenDto.html":{},"index.html":{}}}],["deemed",{"_index":1123,"title":{},"body":{"license.html":{}}}],["default",{"_index":33,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["default'})@isoptional",{"_index":298,"title":{},"body":{"classes/CreateAccessDto.html":{},"classes/FilterUserDto.html":{},"classes/UpdateAuthDto.html":{}}}],["default'})@isoptional()@prop({required",{"_index":51,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/User.html":{}}}],["defective",{"_index":1552,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":1508,"title":{},"body":{"license.html":{}}}],["define",{"_index":756,"title":{},"body":{"index.html":{}}}],["defined",{"_index":1028,"title":{},"body":{"license.html":{}}}],["definition",{"_index":1069,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":949,"title":{},"body":{"license.html":{}}}],["degrees",{"_index":513,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{},"miscellaneous/variables.html":{}}}],["degrees'})@max(180",{"_index":516,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{}}}],["degrees'})@max(90",{"_index":512,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{}}}],["delete",{"_index":54,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id')@apioperation({summary",{"_index":261,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(200",{"_index":453,"title":{},"body":{"controllers/InventoryController.html":{}}}],["delete()@apioperation({summary",{"_index":264,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":292,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/UserService.html":{}}}],["deletecategory",{"_index":251,"title":{},"body":{"controllers/CategoryController.html":{}}}],["deletecategory(id",{"_index":260,"title":{},"body":{"controllers/CategoryController.html":{}}}],["deleted",{"_index":52,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{}}}],["deleted'})@apinotfoundresponse({status",{"_index":559,"title":{},"body":{"controllers/UserController.html":{}}}],["deleted'})@httpcode(200",{"_index":262,"title":{},"body":{"controllers/CategoryController.html":{}}}],["deletemultiplecategories",{"_index":252,"title":{},"body":{"controllers/CategoryController.html":{}}}],["deletemultiplecategories(ids",{"_index":263,"title":{},"body":{"controllers/CategoryController.html":{}}}],["deletemultiples",{"_index":288,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/UserService.html":{}}}],["deletemultiples(ids",{"_index":293,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/UserService.html":{}}}],["deletemultipleusers",{"_index":551,"title":{},"body":{"controllers/UserController.html":{}}}],["deletemultipleusers(ids",{"_index":558,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":552,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser(id",{"_index":560,"title":{},"body":{"controllers/UserController.html":{}}}],["denied",{"_index":1310,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":1465,"title":{},"body":{"license.html":{}}}],["deny",{"_index":898,"title":{},"body":{"license.html":{}}}],["denying",{"_index":857,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":134,"title":{"dependencies.html":{}},"body":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/GeosModule.html":{},"modules/InventoryModule.html":{},"modules/MessengerModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deprive",{"_index":1474,"title":{},"body":{"license.html":{}}}],["depth",{"_index":309,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["description",{"_index":93,"title":{},"body":{"controllers/AccessController.html":{},"controllers/AuthController.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"controllers/GeosController.html":{},"classes/GetCategoryDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"controllers/MessengerController.html":{},"classes/UpdateCategoryDto.html":{},"controllers/UserController.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["description...'})@isstring({message",{"_index":239,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/GetCategoryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["designated",{"_index":1232,"title":{},"body":{"license.html":{}}}],["designed",{"_index":818,"title":{},"body":{"license.html":{}}}],["detail",{"_index":1529,"title":{},"body":{"license.html":{}}}],["details",{"_index":1607,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":1618,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1271,"title":{},"body":{"license.html":{}}}],["develop",{"_index":1590,"title":{},"body":{"license.html":{}}}],["developers",{"_index":874,"title":{},"body":{"license.html":{}}}],["development",{"_index":652,"title":{},"body":{"index.html":{},"license.html":{}}}],["devices",{"_index":897,"title":{},"body":{"license.html":{}}}],["differ",{"_index":771,"title":{},"body":{"index.html":{},"license.html":{}}}],["different",{"_index":732,"title":{},"body":{"index.html":{},"license.html":{}}}],["differently",{"_index":1336,"title":{},"body":{"license.html":{}}}],["digit",{"_index":380,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/User.html":{}}}],["direction",{"_index":1109,"title":{},"body":{"license.html":{}}}],["directions",{"_index":1240,"title":{},"body":{"license.html":{}}}],["directly",{"_index":976,"title":{},"body":{"license.html":{}}}],["directories",{"_index":760,"title":{},"body":{"index.html":{}}}],["directory",{"_index":718,"title":{},"body":{"index.html":{}}}],["disclaim",{"_index":1146,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1542,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":1333,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":1492,"title":{},"body":{"license.html":{}}}],["display",{"_index":1186,"title":{},"body":{"license.html":{}}}],["displayed",{"_index":1342,"title":{},"body":{"license.html":{}}}],["displays",{"_index":1004,"title":{},"body":{"license.html":{}}}],["distance",{"_index":416,"title":{},"body":{"controllers/GeosController.html":{},"miscellaneous/variables.html":{}}}],["distinguishing",{"_index":1531,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":806,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1603,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":1496,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":946,"title":{},"body":{"license.html":{}}}],["dlat",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dlon",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dms",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["document",{"_index":809,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":641,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["documentbuilder",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":1319,"title":{},"body":{"license.html":{}}}],["doe'})@isstring({message",{"_index":434,"title":{},"body":{"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["domains",{"_index":920,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":1272,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":1414,"title":{},"body":{"license.html":{}}}],["drawer",{"_index":332,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["drawer'})@isboolean({message",{"_index":334,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["dto",{"_index":673,"title":{},"body":{"index.html":{}}}],["dtos",{"_index":741,"title":{},"body":{"index.html":{}}}],["durable",{"_index":1214,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":1270,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":345,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{},"license.html":{}}}],["e",{"_index":1248,"title":{},"body":{"license.html":{}}}],["e.g",{"_index":754,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":662,"title":{},"body":{"index.html":{}}}],["each",{"_index":716,"title":{},"body":{"index.html":{},"license.html":{}}}],["earlier",{"_index":970,"title":{},"body":{"license.html":{}}}],["earth",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effect",{"_index":1578,"title":{},"body":{"license.html":{}}}],["effected",{"_index":1144,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1124,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":780,"title":{},"body":{"index.html":{},"license.html":{}}}],["efficient",{"_index":632,"title":{},"body":{"index.html":{}}}],["efforts",{"_index":1429,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1609,"title":{},"body":{"license.html":{}}}],["email",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"controllers/MessengerController.html":{},"classes/OTPRequestDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["email.indexof",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email.substring(0",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["embodied",{"_index":1209,"title":{},"body":{"license.html":{}}}],["employer",{"_index":1623,"title":{},"body":{"license.html":{}}}],["enable",{"_index":1051,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":995,"title":{},"body":{"license.html":{}}}],["end",{"_index":755,"title":{},"body":{"index.html":{},"license.html":{}}}],["endpoints",{"_index":740,"title":{},"body":{"index.html":{}}}],["enforce",{"_index":1466,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":1150,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":1246,"title":{},"body":{"license.html":{}}}],["entered",{"_index":1502,"title":{},"body":{"license.html":{}}}],["entire",{"_index":1175,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":1519,"title":{},"body":{"license.html":{}}}],["entities",{"_index":677,"title":{},"body":{"index.html":{}}}],["entity",{"_index":1418,"title":{},"body":{"license.html":{}}}],["entry",{"_index":704,"title":{},"body":{"index.html":{}}}],["enum",{"_index":389,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["enumerations",{"_index":619,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":706,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":709,"title":{},"body":{"index.html":{}}}],["environment",{"_index":707,"title":{},"body":{"index.html":{}}}],["equivalent",{"_index":1096,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":895,"title":{},"body":{"license.html":{}}}],["error",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":648,"title":{},"body":{"index.html":{}}}],["essential",{"_index":1055,"title":{},"body":{"license.html":{}}}],["etc",{"_index":694,"title":{},"body":{"index.html":{}}}],["even",{"_index":1573,"title":{},"body":{"license.html":{}}}],["event",{"_index":1559,"title":{},"body":{"license.html":{}}}],["everyone",{"_index":803,"title":{},"body":{"license.html":{}}}],["exact",{"_index":967,"title":{},"body":{"license.html":{}}}],["example",{"_index":26,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["except",{"_index":982,"title":{},"body":{"license.html":{}}}],["exception.filter.ts",{"_index":697,"title":{},"body":{"index.html":{}}}],["exceptions",{"_index":1323,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":1260,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1506,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":1598,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1456,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":1102,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":1512,"title":{},"body":{"license.html":{}}}],["executable",{"_index":1041,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1290,"title":{},"body":{"license.html":{}}}],["executing",{"_index":983,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1430,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1145,"title":{},"body":{"license.html":{}}}],["expected",{"_index":758,"title":{},"body":{"index.html":{},"license.html":{}}}],["expects",{"_index":1281,"title":{},"body":{"license.html":{}}}],["expired",{"_index":55,"title":{},"body":{"classes/Access.html":{},"controllers/AuthController.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{}}}],["expired'})@apibadrequestresponse({status",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["expired'})@apiresponse({status",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiry",{"_index":9,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{}}}],["explains",{"_index":885,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":1088,"title":{},"body":{"license.html":{}}}],["exports",{"_index":139,"title":{},"body":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/GeosModule.html":{},"modules/InventoryModule.html":{},"modules/MessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":594,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["expressed",{"_index":1544,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":1374,"title":{},"body":{"license.html":{}}}],["extend",{"_index":923,"title":{},"body":{"license.html":{}}}],["extended",{"_index":1491,"title":{},"body":{"license.html":{}}}],["extends",{"_index":466,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{}}}],["extensions",{"_index":1191,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1006,"title":{},"body":{"license.html":{}}}],["extract",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":1356,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":1104,"title":{},"body":{"license.html":{}}}],["fails",{"_index":1387,"title":{},"body":{"license.html":{}}}],["failure",{"_index":1571,"title":{},"body":{"license.html":{}}}],["fair",{"_index":1095,"title":{},"body":{"license.html":{}}}],["false",{"_index":41,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["false'})@isboolean({message",{"_index":53,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["family",{"_index":1265,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":964,"title":{},"body":{"license.html":{}}}],["favor",{"_index":1275,"title":{},"body":{"license.html":{}}}],["feature",{"_index":1010,"title":{},"body":{"license.html":{}}}],["features",{"_index":735,"title":{},"body":{"index.html":{}}}],["fee",{"_index":867,"title":{},"body":{"license.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"modules/AccessModule.html":{},"injectables/AccessService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/Geo.html":{},"controllers/GeosController.html":{},"modules/GeosModule.html":{},"injectables/GeosService.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"modules/InventoryModule.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/VerificationJWTTokenDto.html":{},"index.html":{},"license.html":{}}}],["filename",{"_index":496,"title":{},"body":{"injectables/MessengerService.html":{}}}],["files",{"_index":721,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":275,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["filtercategroydto",{"_index":269,"title":{"classes/FilterCategroyDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/FilterCategroyDto.html":{}}}],["filterinventorydto",{"_index":397,"title":{"classes/FilterInventoryDto.html":{}},"body":{"classes/FilterInventoryDto.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{}}}],["filters",{"_index":695,"title":{},"body":{"index.html":{}}}],["filters.pipe.ts",{"_index":519,"title":{},"body":{"injectables/SanitizeFiterPipe.html":{}}}],["filteruserdto",{"_index":400,"title":{"classes/FilterUserDto.html":{}},"body":{"classes/FilterUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["finally",{"_index":926,"title":{},"body":{"license.html":{}}}],["find",{"_index":1242,"title":{},"body":{"license.html":{}}}],["findall",{"_index":148,"title":{},"body":{"injectables/AccessService.html":{}}}],["findallbyuser",{"_index":149,"title":{},"body":{"injectables/AccessService.html":{}}}],["findallbyuser(id",{"_index":155,"title":{},"body":{"injectables/AccessService.html":{}}}],["findbyid",{"_index":150,"title":{},"body":{"injectables/AccessService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":156,"title":{},"body":{"injectables/AccessService.html":{},"injectables/UserService.html":{}}}],["first",{"_index":374,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"license.html":{}}}],["first'})@isstring({message",{"_index":375,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["first_name",{"_index":368,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["firstlocationlatitude",{"_index":505,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{},"miscellaneous/variables.html":{}}}],["firstlocationlongitude",{"_index":506,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{},"miscellaneous/variables.html":{}}}],["fitness",{"_index":1547,"title":{},"body":{"license.html":{}}}],["fix",{"_index":647,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":1213,"title":{},"body":{"license.html":{}}}],["flow",{"_index":1077,"title":{},"body":{"license.html":{}}}],["folder",{"_index":717,"title":{},"body":{"index.html":{}}}],["follow",{"_index":948,"title":{},"body":{"license.html":{}}}],["followed",{"_index":342,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["following",{"_index":1461,"title":{},"body":{"license.html":{}}}],["forbid",{"_index":1143,"title":{},"body":{"license.html":{}}}],["force",{"_index":1099,"title":{},"body":{"license.html":{}}}],["form",{"_index":1024,"title":{},"body":{"license.html":{}}}],["format",{"_index":64,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"index.html":{},"license.html":{}}}],["format'})@isstring({message",{"_index":396,"title":{},"body":{"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{}}}],["forms",{"_index":1203,"title":{},"body":{"license.html":{}}}],["found",{"_index":1602,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["found'})@httpcode(200",{"_index":110,"title":{},"body":{"controllers/AccessController.html":{},"controllers/UserController.html":{}}}],["foundation",{"_index":800,"title":{},"body":{"license.html":{}}}],["framework",{"_index":630,"title":{},"body":{"index.html":{}}}],["free",{"_index":798,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":821,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":871,"title":{},"body":{"license.html":{}}}],["fulfilling",{"_index":1127,"title":{},"body":{"license.html":{}}}],["full",{"_index":1601,"title":{},"body":{"license.html":{}}}],["functioning",{"_index":1293,"title":{},"body":{"license.html":{}}}],["functions",{"_index":622,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":903,"title":{},"body":{"license.html":{}}}],["further",{"_index":1234,"title":{},"body":{"license.html":{}}}],["future",{"_index":925,"title":{},"body":{"license.html":{}}}],["g:doc",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["general",{"_index":790,"title":{},"body":{"license.html":{}}}],["generally",{"_index":1067,"title":{},"body":{"license.html":{}}}],["generate",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"license.html":{}}}],["generateapikey",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generated",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["generatedatetimeofmonthforward",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generatejwttoken",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["generatejwttoken(user",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["generateotp",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generates",{"_index":344,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["generatetoken",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["generatetoken(user",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["geo",{"_index":406,"title":{"classes/Geo.html":{}},"body":{"classes/Geo.html":{}}}],["geo.dto.ts",{"_index":504,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{}}}],["geodesic",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["geographiclib",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["geos",{"_index":410,"title":{},"body":{"controllers/GeosController.html":{}}}],["geoscontroller",{"_index":408,"title":{"controllers/GeosController.html":{}},"body":{"controllers/GeosController.html":{},"modules/GeosModule.html":{}}}],["geosmodule",{"_index":163,"title":{"modules/GeosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeosModule.html":{},"modules.html":{},"overview.html":{}}}],["geosservice",{"_index":426,"title":{"injectables/GeosService.html":{}},"body":{"modules/GeosModule.html":{},"injectables/GeosService.html":{},"overview.html":{}}}],["get(':id')@apioperation({summary",{"_index":105,"title":{},"body":{"controllers/AccessController.html":{},"controllers/UserController.html":{}}}],["get('user/:user_id')@apioperation({summary",{"_index":112,"title":{},"body":{"controllers/AccessController.html":{}}}],["get()@apioperation({summary",{"_index":115,"title":{},"body":{"controllers/AccessController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["getaccessbyid",{"_index":84,"title":{},"body":{"controllers/AccessController.html":{}}}],["getaccessbyid(id",{"_index":104,"title":{},"body":{"controllers/AccessController.html":{}}}],["getaccessbyuserid",{"_index":85,"title":{},"body":{"controllers/AccessController.html":{}}}],["getaccessbyuserid(user_id",{"_index":111,"title":{},"body":{"controllers/AccessController.html":{}}}],["getall",{"_index":782,"title":{},"body":{"index.html":{}}}],["getallaccess",{"_index":86,"title":{},"body":{"controllers/AccessController.html":{}}}],["getallusers",{"_index":553,"title":{},"body":{"controllers/UserController.html":{}}}],["getallusers(filter",{"_index":561,"title":{},"body":{"controllers/UserController.html":{}}}],["getbyid",{"_index":783,"title":{},"body":{"index.html":{}}}],["getbyuserid",{"_index":785,"title":{},"body":{"index.html":{}}}],["getcategories",{"_index":253,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["getcategories(filter",{"_index":268,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["getcategorydto",{"_index":429,"title":{"classes/GetCategoryDto.html":{}},"body":{"classes/GetCategoryDto.html":{},"injectables/SanitizeUpdateRequestPipe.html":{}}}],["getdistancebetweentwogeopoints",{"_index":411,"title":{},"body":{"controllers/GeosController.html":{},"injectables/GeosService.html":{}}}],["getdistancebetweentwogeopoints(body",{"_index":412,"title":{},"body":{"controllers/GeosController.html":{},"injectables/GeosService.html":{}}}],["getemailusername",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getinventory",{"_index":445,"title":{},"body":{"controllers/InventoryController.html":{},"injectables/InventoryService.html":{}}}],["getinventory(filter",{"_index":449,"title":{},"body":{"controllers/InventoryController.html":{},"injectables/InventoryService.html":{}}}],["getinventorydto",{"_index":431,"title":{"classes/GetInventoryDto.html":{}},"body":{"classes/GetInventoryDto.html":{}}}],["getting",{"_index":625,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuserbyemailpassword",{"_index":571,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyemailpassword(body",{"_index":576,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid",{"_index":554,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyid(id",{"_index":564,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserdto",{"_index":432,"title":{"classes/GetUserDto.html":{}},"body":{"classes/GetUserDto.html":{}}}],["getusers",{"_index":572,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers(filter",{"_index":577,"title":{},"body":{"injectables/UserService.html":{}}}],["gitignore",{"_index":710,"title":{},"body":{"index.html":{}}}],["give",{"_index":1166,"title":{},"body":{"license.html":{}}}],["given",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"license.html":{}}}],["gives",{"_index":1182,"title":{},"body":{"license.html":{}}}],["giving",{"_index":879,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":789,"title":{},"body":{"license.html":{}}}],["governed",{"_index":1326,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":787,"title":{},"body":{"index.html":{},"license.html":{}}}],["grams",{"_index":363,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["grams'})@isstring({message",{"_index":364,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["grant",{"_index":1351,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1083,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1407,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":866,"title":{},"body":{"license.html":{}}}],["greater",{"_index":357,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["greatest",{"_index":1591,"title":{},"body":{"license.html":{}}}],["guarantee",{"_index":826,"title":{},"body":{"license.html":{}}}],["guards",{"_index":699,"title":{},"body":{"index.html":{}}}],["gui",{"_index":1621,"title":{},"body":{"license.html":{}}}],["handle",{"_index":739,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["handlebars",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["handles",{"_index":722,"title":{},"body":{"index.html":{}}}],["handling",{"_index":749,"title":{},"body":{"index.html":{}}}],["hardware'})@isstring({message",{"_index":246,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{}}}],["having",{"_index":1101,"title":{},"body":{"license.html":{}}}],["height",{"_index":310,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["help",{"_index":776,"title":{},"body":{"index.html":{}}}],["here",{"_index":714,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":1452,"title":{},"body":{"license.html":{}}}],["holder",{"_index":1381,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1332,"title":{},"body":{"license.html":{}}}],["hope",{"_index":1604,"title":{},"body":{"license.html":{}}}],["hosts",{"_index":1243,"title":{},"body":{"license.html":{}}}],["household",{"_index":1266,"title":{},"body":{"license.html":{}}}],["http",{"_index":696,"title":{},"body":{"index.html":{}}}],["http://127.0.0.1:${port",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:${port",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:${port}/api",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000/api",{"_index":642,"title":{},"body":{"index.html":{}}}],["https://example.com/avatar.png'})@isstring({message",{"_index":435,"title":{},"body":{"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["https://exmaple.com/image.png'})@isstring({message",{"_index":244,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/GetCategoryDto.html":{},"classes/Inventory.html":{},"classes/UpdateCategoryDto.html":{}}}],["https://exmaple.com/qrcode_image.png'})@isstring({message",{"_index":355,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["https://fsf.org",{"_index":802,"title":{},"body":{"license.html":{}}}],["https://images.pexels.com/photos/415829/pexels",{"_index":384,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["https://sourabhsen201313.wixsite.com/sourabh",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.gnu.org/licenses",{"_index":1627,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":1635,"title":{},"body":{"license.html":{}}}],["hypothetical",{"_index":1619,"title":{},"body":{"license.html":{}}}],["id",{"_index":70,"title":{},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"injectables/AccessService.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id'})@apiresponse({status",{"_index":106,"title":{},"body":{"controllers/AccessController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["identifiable",{"_index":1480,"title":{},"body":{"license.html":{}}}],["ids",{"_index":267,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ignored",{"_index":761,"title":{},"body":{"index.html":{}}}],["image",{"_index":233,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["image_url",{"_index":234,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/GetCategoryDto.html":{},"classes/Inventory.html":{},"classes/UpdateCategoryDto.html":{}}}],["implement",{"_index":1052,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":1053,"title":{},"body":{"license.html":{}}}],["implementing",{"_index":753,"title":{},"body":{"index.html":{}}}],["implied",{"_index":1507,"title":{},"body":{"license.html":{}}}],["import",{"_index":1459,"title":{},"body":{"license.html":{}}}],["importing",{"_index":1443,"title":{},"body":{"license.html":{}}}],["imports",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["impose",{"_index":1361,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":1509,"title":{},"body":{"license.html":{}}}],["in_",{"_index":341,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["in_1706347991940'})@isstring({message",{"_index":346,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["inability",{"_index":1565,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":1568,"title":{},"body":{"license.html":{}}}],["inc",{"_index":801,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1562,"title":{},"body":{"license.html":{}}}],["include",{"_index":1042,"title":{},"body":{"license.html":{}}}],["included",{"_index":1044,"title":{},"body":{"license.html":{}}}],["includes",{"_index":988,"title":{},"body":{"license.html":{}}}],["including",{"_index":1064,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1201,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":723,"title":{},"body":{"index.html":{}}}],["incompatible",{"_index":904,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":1628,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":1269,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":1357,"title":{},"body":{"license.html":{}}}],["independent",{"_index":1189,"title":{},"body":{"license.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"injectables/AccessService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"controllers/GeosController.html":{},"injectables/GeosService.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/VerificationJWTTokenDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["india'})@isstring({message",{"_index":68,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["indicate",{"_index":1411,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":1371,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1199,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":913,"title":{},"body":{"license.html":{}}}],["indore",{"_index":65,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["industrial",{"_index":1284,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"modules/AccessModule.html":{},"injectables/AccessService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/Geo.html":{},"controllers/GeosController.html":{},"modules/GeosModule.html":{},"injectables/GeosService.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"modules/InventoryModule.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/VerificationJWTTokenDto.html":{}}}],["inform",{"_index":1252,"title":{},"body":{"license.html":{}}}],["information",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["infringe",{"_index":1409,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1440,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":979,"title":{},"body":{"license.html":{}}}],["ing",{"_index":778,"title":{},"body":{"index.html":{}}}],["initiate",{"_index":1433,"title":{},"body":{"license.html":{}}}],["injectable",{"_index":117,"title":{"injectables/AccessMiddleware.html":{},"injectables/AccessService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/GeosService.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MessengerService.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"injectables/UserService.html":{}},"body":{}}],["injectables",{"_index":119,"title":{},"body":{"injectables/AccessMiddleware.html":{},"injectables/AccessService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/GeosService.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MessengerService.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inqx_2314dey'})@isstring({message",{"_index":354,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["inside",{"_index":900,"title":{},"body":{"license.html":{}}}],["install",{"_index":899,"title":{},"body":{"license.html":{}}}],["installation",{"_index":643,"title":{},"body":{"index.html":{},"license.html":{}}}],["installed",{"_index":1306,"title":{},"body":{"license.html":{}}}],["installrunning",{"_index":645,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1633,"title":{},"body":{"license.html":{}}}],["intact",{"_index":1159,"title":{},"body":{"license.html":{}}}],["intended",{"_index":825,"title":{},"body":{"license.html":{}}}],["intention",{"_index":1147,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":998,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":1002,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":1216,"title":{},"body":{"license.html":{}}}],["interest",{"_index":1427,"title":{},"body":{"license.html":{}}}],["interface",{"_index":1003,"title":{},"body":{"license.html":{}}}],["interfaces",{"_index":1032,"title":{},"body":{"license.html":{}}}],["interfered",{"_index":1295,"title":{},"body":{"license.html":{}}}],["interpretation",{"_index":1576,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":1062,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":1075,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["invalidate",{"_index":1183,"title":{},"body":{"license.html":{}}}],["inventory",{"_index":323,"title":{"classes/Inventory.html":{}},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{}}}],["inventory'})@isstring({message",{"_index":399,"title":{},"body":{"classes/FilterInventoryDto.html":{}}}],["inventory...'})@isstring({message",{"_index":328,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["inventory.dto.ts",{"_index":306,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/FilterInventoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/UpdateInventoryDto.html":{}}}],["inventory_location",{"_index":311,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["inventorycontroller",{"_index":443,"title":{"controllers/InventoryController.html":{}},"body":{"controllers/InventoryController.html":{},"modules/InventoryModule.html":{}}}],["inventorymodel",{"_index":462,"title":{},"body":{"injectables/InventoryService.html":{}}}],["inventorymodule",{"_index":164,"title":{"modules/InventoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InventoryModule.html":{},"modules.html":{},"overview.html":{}}}],["inventoryschema",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inventoryservice",{"_index":458,"title":{"injectables/InventoryService.html":{}},"body":{"modules/InventoryModule.html":{},"injectables/InventoryService.html":{},"overview.html":{}}}],["ip",{"_index":44,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["ip_address",{"_index":10,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["irrevocable",{"_index":1085,"title":{},"body":{"license.html":{}}}],["is_active",{"_index":12,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["is_deleted",{"_index":13,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["is_expired",{"_index":14,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{}}}],["is_in_stock",{"_index":312,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["is_refrigeration_required",{"_index":313,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["isdefined()@isstring()@isnotempty()@min(undefined",{"_index":509,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{}}}],["isinstock",{"_index":335,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["iso",{"_index":343,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["isstring",{"_index":578,"title":{},"body":{"classes/VerificationJWTTokenDto.html":{}}}],["isstring({message",{"_index":27,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{}}}],["item",{"_index":340,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{},"license.html":{}}}],["item_id",{"_index":314,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["itself",{"_index":1311,"title":{},"body":{"license.html":{}}}],["jhg$@87&tywe'})@isstring({message",{"_index":378,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["john'})@isstring({message",{"_index":57,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["june",{"_index":794,"title":{},"body":{"license.html":{}}}],["jwt",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy.ts",{"_index":685,"title":{},"body":{"index.html":{}}}],["jwtservice",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":463,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{}}}],["keep",{"_index":1158,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":1056,"title":{},"body":{"license.html":{}}}],["key",{"_index":24,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{},"license.html":{}}}],["key_name",{"_index":15,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{}}}],["keyboard'})@isstring({message",{"_index":441,"title":{},"body":{"classes/Inventory.html":{}}}],["keys",{"_index":1289,"title":{},"body":{"license.html":{}}}],["kilometers",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":994,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":814,"title":{},"body":{"license.html":{}}}],["know",{"_index":850,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":1469,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":1478,"title":{},"body":{"license.html":{}}}],["language",{"_index":1036,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1193,"title":{},"body":{"license.html":{}}}],["last",{"_index":376,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["last'})@isstring({message",{"_index":377,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["last_name",{"_index":369,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["later",{"_index":1534,"title":{},"body":{"license.html":{}}}],["latitude",{"_index":421,"title":{},"body":{"controllers/GeosController.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{}}}],["law",{"_index":981,"title":{},"body":{"license.html":{}}}],["laws",{"_index":952,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1438,"title":{},"body":{"license.html":{}}}],["legal",{"_index":880,"title":{},"body":{"license.html":{}}}],["legend",{"_index":135,"title":{},"body":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/GeosModule.html":{},"modules/InventoryModule.html":{},"modules/MessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lesser",{"_index":1632,"title":{},"body":{"license.html":{}}}],["level",{"_index":350,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["lgpl.html",{"_index":1636,"title":{},"body":{"license.html":{}}}],["liability",{"_index":1335,"title":{},"body":{"license.html":{}}}],["liable",{"_index":978,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1040,"title":{},"body":{"license.html":{}}}],["library",{"_index":333,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{},"license.html":{}}}],["license",{"_index":786,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":956,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":958,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":960,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":816,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":1413,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":1349,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":1405,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1148,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1558,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1545,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":1334,"title":{},"body":{"license.html":{}}}],["line",{"_index":1599,"title":{},"body":{"license.html":{}}}],["link",{"_index":1521,"title":{},"body":{"license.html":{}}}],["linked",{"_index":1071,"title":{},"body":{"license.html":{}}}],["linking",{"_index":1631,"title":{},"body":{"license.html":{}}}],["lint",{"_index":646,"title":{},"body":{"index.html":{}}}],["lintrunning",{"_index":650,"title":{},"body":{"index.html":{}}}],["list",{"_index":273,"title":{},"body":{"controllers/CategoryController.html":{},"license.html":{}}}],["litigation",{"_index":1434,"title":{},"body":{"license.html":{}}}],["local",{"_index":1577,"title":{},"body":{"license.html":{}}}],["location",{"_index":16,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["loggermiddleware",{"_index":471,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"injectables/LoggerMiddleware.html":{}}}],["logic",{"_index":731,"title":{},"body":{"index.html":{}}}],["long",{"_index":1097,"title":{},"body":{"license.html":{}}}],["longitude",{"_index":514,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{}}}],["longitude'})@apiresponse({status",{"_index":422,"title":{},"body":{"controllers/GeosController.html":{}}}],["loss",{"_index":1566,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1569,"title":{},"body":{"license.html":{}}}],["machine",{"_index":1206,"title":{},"body":{"license.html":{}}}],["made",{"_index":1296,"title":{},"body":{"license.html":{}}}],["madhya",{"_index":66,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["mail",{"_index":1611,"title":{},"body":{"license.html":{}}}],["mailerservice",{"_index":492,"title":{},"body":{"injectables/MessengerService.html":{}}}],["main",{"_index":720,"title":{},"body":{"index.html":{}}}],["main.ts",{"_index":702,"title":{},"body":{"index.html":{}}}],["maintain",{"_index":1238,"title":{},"body":{"license.html":{}}}],["major",{"_index":1047,"title":{},"body":{"license.html":{}}}],["make",{"_index":829,"title":{},"body":{"license.html":{}}}],["makes",{"_index":1118,"title":{},"body":{"license.html":{}}}],["making",{"_index":966,"title":{},"body":{"license.html":{}}}],["managing",{"_index":736,"title":{},"body":{"index.html":{}}}],["manner",{"_index":1453,"title":{},"body":{"license.html":{}}}],["manufacturer",{"_index":902,"title":{},"body":{"license.html":{}}}],["march",{"_index":1504,"title":{},"body":{"license.html":{}}}],["marked",{"_index":891,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1355,"title":{},"body":{"license.html":{}}}],["masks",{"_index":954,"title":{},"body":{"license.html":{}}}],["matching",{"_index":75,"title":{},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"modules/AccessModule.html":{},"injectables/AccessService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/Geo.html":{},"controllers/GeosController.html":{},"modules/GeosModule.html":{},"injectables/GeosService.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"modules/InventoryModule.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/VerificationJWTTokenDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1106,"title":{},"body":{"license.html":{}}}],["materially",{"_index":1312,"title":{},"body":{"license.html":{}}}],["math.atan2(math.sqrt(a",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.cos(toradians(+firstlocationlatitude",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.cos(toradians(+secondlocationlatitude",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.floor(100000",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.pi",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.random",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.sin(dlat",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.sin(dlon",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.sqrt(1",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":361,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["maximum",{"_index":349,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["maximum_stock_level",{"_index":315,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["meaning",{"_index":1365,"title":{},"body":{"license.html":{}}}],["means",{"_index":951,"title":{},"body":{"license.html":{}}}],["measure",{"_index":1126,"title":{},"body":{"license.html":{}}}],["measures",{"_index":1140,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1154,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1170,"title":{},"body":{"license.html":{}}}],["meets",{"_index":1021,"title":{},"body":{"license.html":{}}}],["menu",{"_index":1019,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1546,"title":{},"body":{"license.html":{}}}],["mere",{"_index":997,"title":{},"body":{"license.html":{}}}],["merging",{"_index":1423,"title":{},"body":{"license.html":{}}}],["message",{"_index":39,"title":{},"body":{"classes/Access.html":{},"classes/CreateAccessDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/User.html":{}}}],["messenger",{"_index":476,"title":{},"body":{"controllers/MessengerController.html":{}}}],["messengercontroller",{"_index":474,"title":{"controllers/MessengerController.html":{}},"body":{"controllers/MessengerController.html":{},"modules/MessengerModule.html":{}}}],["messengermodule",{"_index":165,"title":{"modules/MessengerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MessengerModule.html":{},"modules.html":{},"overview.html":{}}}],["messengerservice",{"_index":167,"title":{"injectables/MessengerService.html":{}},"body":{"modules/AppModule.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"overview.html":{}}}],["met",{"_index":1087,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":523,"title":{},"body":{"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"dependencies.html":{},"index.html":{}}}],["methods",{"_index":81,"title":{},"body":{"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"injectables/AccessService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/GeosController.html":{},"injectables/GeosService.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["miles",{"_index":417,"title":{},"body":{"controllers/GeosController.html":{},"miscellaneous/variables.html":{}}}],["miles'})@httpcode(200",{"_index":423,"title":{},"body":{"controllers/GeosController.html":{}}}],["millimeters",{"_index":327,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["min",{"_index":439,"title":{},"body":{"classes/Inventory.html":{}}}],["minimum",{"_index":352,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["minimum_stock_level",{"_index":316,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["miscellaneous",{"_index":618,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":1344,"title":{},"body":{"license.html":{}}}],["mm",{"_index":324,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["mm'})@isstring({message",{"_index":326,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["mobile",{"_index":382,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/User.html":{}}}],["mode",{"_index":655,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":353,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{},"index.html":{},"license.html":{}}}],["model_number",{"_index":317,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["modification",{"_index":947,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1025,"title":{},"body":{"license.html":{}}}],["modified",{"_index":890,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":1174,"title":{},"body":{"license.html":{}}}],["modify",{"_index":863,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":985,"title":{},"body":{"license.html":{}}}],["module",{"_index":131,"title":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/GeosModule.html":{},"modules/InventoryModule.html":{},"modules/MessengerModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/GeosModule.html":{},"modules/InventoryModule.html":{},"modules/MessengerModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":133,"title":{"modules.html":{}},"body":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/GeosModule.html":{},"modules/InventoryModule.html":{},"modules/MessengerModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":784,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["mongoose.model",{"_index":152,"title":{},"body":{"injectables/AccessService.html":{},"injectables/CategoryService.html":{},"injectables/InventoryService.html":{},"injectables/UserService.html":{}}}],["mongoose.types.objectid",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.types.objectid(str",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":688,"title":{},"body":{"index.html":{},"license.html":{}}}],["moreover",{"_index":1392,"title":{},"body":{"license.html":{}}}],["multiple",{"_index":265,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["n",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":56,"title":{},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"injectables/AccessService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"controllers/GeosController.html":{},"injectables/GeosService.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["names",{"_index":1348,"title":{},"body":{"license.html":{}}}],["nature",{"_index":1190,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":1554,"title":{},"body":{"license.html":{}}}],["need",{"_index":854,"title":{},"body":{"license.html":{}}}],["needed",{"_index":338,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{},"index.html":{},"license.html":{}}}],["nest",{"_index":627,"title":{},"body":{"index.html":{}}}],["nest.js",{"_index":779,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["nestjs/config",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["network",{"_index":1000,"title":{},"body":{"license.html":{}}}],["new",{"_index":849,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":129,"title":{},"body":{"injectables/AccessMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"license.html":{}}}],["nextfunction",{"_index":130,"title":{},"body":{"injectables/AccessMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["node.js",{"_index":629,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":942,"title":{},"body":{"license.html":{}}}],["noncommercially",{"_index":1228,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1045,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1264,"title":{},"body":{"license.html":{}}}],["not'})@apibadrequestresponse({status",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["not'})@apiresponse({status",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["not'})@isboolean({message",{"_index":395,"title":{},"body":{"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{}}}],["nothing",{"_index":1406,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1011,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1005,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":1393,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1388,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1330,"title":{},"body":{"license.html":{}}}],["npm",{"_index":644,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":347,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"injectables/InventoryService.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/User.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number'})@isoptional",{"_index":404,"title":{},"body":{"classes/FilterUserDto.html":{}}}],["number'})@prop({required",{"_index":536,"title":{},"body":{"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/User.html":{}}}],["numbered",{"_index":1533,"title":{},"body":{"license.html":{}}}],["object",{"_index":95,"title":{},"body":{"controllers/AccessController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{},"index.html":{},"license.html":{}}}],["objectid",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectid.tostring",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectidtostring",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objects",{"_index":676,"title":{},"body":{"index.html":{}}}],["obligate",{"_index":1516,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":1245,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1128,"title":{},"body":{"license.html":{}}}],["occasionally",{"_index":1227,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":1403,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":910,"title":{},"body":{"license.html":{}}}],["offer",{"_index":878,"title":{},"body":{"license.html":{}}}],["offered",{"_index":1255,"title":{},"body":{"license.html":{}}}],["offering",{"_index":1231,"title":{},"body":{"license.html":{}}}],["official",{"_index":1027,"title":{},"body":{"license.html":{}}}],["one",{"_index":1037,"title":{},"body":{"license.html":{}}}],["operate",{"_index":1572,"title":{},"body":{"license.html":{}}}],["operated",{"_index":1235,"title":{},"body":{"license.html":{}}}],["operating",{"_index":1058,"title":{},"body":{"license.html":{}}}],["operation",{"_index":1149,"title":{},"body":{"license.html":{}}}],["operations",{"_index":738,"title":{},"body":{"index.html":{}}}],["option",{"_index":1328,"title":{},"body":{"license.html":{}}}],["optional",{"_index":11,"title":{},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"injectables/AccessService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"controllers/GeosController.html":{},"injectables/GeosService.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["options",{"_index":1018,"title":{},"body":{"license.html":{}}}],["order",{"_index":1401,"title":{},"body":{"license.html":{}}}],["organization",{"_index":1420,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":961,"title":{},"body":{"license.html":{}}}],["organizes",{"_index":728,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1345,"title":{},"body":{"license.html":{}}}],["original",{"_index":1346,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["others",{"_index":856,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1098,"title":{},"body":{"license.html":{}}}],["otp",{"_index":483,"title":{},"body":{"controllers/MessengerController.html":{},"classes/OTPDto.html":{}}}],["otp'})@apiresponse({status",{"_index":482,"title":{},"body":{"controllers/MessengerController.html":{}}}],["otpdto",{"_index":495,"title":{"classes/OTPDto.html":{}},"body":{"injectables/MessengerService.html":{},"classes/OTPDto.html":{}}}],["otprequestdto",{"_index":479,"title":{"classes/OTPRequestDto.html":{}},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"classes/OTPRequestDto.html":{}}}],["out",{"_index":145,"title":{},"body":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/GeosModule.html":{},"modules/InventoryModule.html":{},"modules/MessengerModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1091,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1111,"title":{},"body":{"license.html":{}}}],["overview",{"_index":769,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owned",{"_index":1448,"title":{},"body":{"license.html":{}}}],["package",{"_index":579,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":711,"title":{},"body":{"index.html":{}}}],["packaged",{"_index":1181,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":1046,"title":{},"body":{"license.html":{}}}],["paper",{"_index":1610,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":1378,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":1462,"title":{},"body":{"license.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"injectables/AccessService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/GeosController.html":{},"injectables/GeosService.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parent",{"_index":247,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/FilterCategroyDto.html":{},"classes/GetCategoryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["parent_category_id",{"_index":235,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/FilterCategroyDto.html":{},"classes/GetCategoryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["part",{"_index":963,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["partial",{"_index":522,"title":{},"body":{"injectables/SanitizeFiterPipe.html":{}}}],["particular",{"_index":1034,"title":{},"body":{"license.html":{}}}],["parties",{"_index":996,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1078,"title":{},"body":{"license.html":{}}}],["party",{"_index":1236,"title":{},"body":{"license.html":{}}}],["party's",{"_index":1425,"title":{},"body":{"license.html":{}}}],["pass",{"_index":868,"title":{},"body":{"license.html":{}}}],["passport",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["passportstrategy(strategy",{"_index":467,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"license.html":{}}}],["password'})@apibadrequestresponse({status",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["password'})@apinotfoundresponse({status",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["password'})@apiresponse({status",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["patent",{"_index":1377,"title":{},"body":{"license.html":{}}}],["patents",{"_index":929,"title":{},"body":{"license.html":{}}}],["pattern",{"_index":908,"title":{},"body":{"license.html":{}}}],["payload",{"_index":470,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":1497,"title":{},"body":{"license.html":{}}}],["peer",{"_index":1250,"title":{},"body":{"license.html":{}}}],["peers",{"_index":1253,"title":{},"body":{"license.html":{}}}],["performance",{"_index":1550,"title":{},"body":{"license.html":{}}}],["performing",{"_index":1068,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":1386,"title":{},"body":{"license.html":{}}}],["permission",{"_index":881,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1082,"title":{},"body":{"license.html":{}}}],["permissive",{"_index":1161,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1200,"title":{},"body":{"license.html":{}}}],["permits",{"_index":1367,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":804,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":1301,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1262,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":1514,"title":{},"body":{"license.html":{}}}],["phone",{"_index":370,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/User.html":{}}}],["photo",{"_index":383,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["photo_url",{"_index":371,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["physical",{"_index":1210,"title":{},"body":{"license.html":{}}}],["physically",{"_index":1225,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":848,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":693,"title":{},"body":{"index.html":{}}}],["place",{"_index":1233,"title":{},"body":{"license.html":{}}}],["please",{"_index":99,"title":{},"body":{"controllers/AccessController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/MessengerController.html":{},"controllers/UserController.html":{},"license.html":{}}}],["plus",{"_index":1428,"title":{},"body":{"license.html":{}}}],["point",{"_index":705,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":1600,"title":{},"body":{"license.html":{}}}],["points",{"_index":419,"title":{},"body":{"controllers/GeosController.html":{}}}],["port",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portion",{"_index":1258,"title":{},"body":{"license.html":{}}}],["positive",{"_index":356,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["possesses",{"_index":1222,"title":{},"body":{"license.html":{}}}],["possession",{"_index":1178,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1575,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1592,"title":{},"body":{"license.html":{}}}],["post('/create')@httpcode(201",{"_index":448,"title":{},"body":{"controllers/InventoryController.html":{}}}],["post('/decodejwttoken')@apioperation({summary",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/generatetoken')@apioperation({summary",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/getdistancebetweentwogeopoints')@apioperation({summary",{"_index":414,"title":{},"body":{"controllers/GeosController.html":{}}}],["post('/signinwithemailpassword')@apioperation({summary",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/verifyjwttoken')@apioperation({summary",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('create')@apioperation({summary",{"_index":257,"title":{},"body":{"controllers/CategoryController.html":{}}}],["post('sendotp')@apioperation({summary",{"_index":480,"title":{},"body":{"controllers/MessengerController.html":{}}}],["post()@apioperation({summary",{"_index":89,"title":{},"body":{"controllers/AccessController.html":{},"controllers/InventoryController.html":{},"controllers/UserController.html":{}}}],["power",{"_index":1142,"title":{},"body":{"license.html":{}}}],["practical",{"_index":817,"title":{},"body":{"license.html":{}}}],["practice",{"_index":639,"title":{},"body":{"index.html":{},"license.html":{}}}],["pradesh",{"_index":67,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["preamble",{"_index":812,"title":{},"body":{"license.html":{}}}],["precise",{"_index":943,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":914,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":1426,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1023,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":80,"title":{},"body":{"controllers/AccessController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"classes/CreateInventoryDto.html":{},"controllers/GeosController.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"controllers/MessengerController.html":{},"controllers/UserController.html":{}}}],["present",{"_index":1528,"title":{},"body":{"license.html":{}}}],["presents",{"_index":1016,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":1339,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":855,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":1294,"title":{},"body":{"license.html":{}}}],["previous",{"_index":896,"title":{},"body":{"license.html":{}}}],["price",{"_index":841,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":1499,"title":{},"body":{"license.html":{}}}],["prior",{"_index":1389,"title":{},"body":{"license.html":{}}}],["private",{"_index":986,"title":{},"body":{"license.html":{}}}],["problems",{"_index":893,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":1288,"title":{},"body":{"license.html":{}}}],["procuring",{"_index":1487,"title":{},"body":{"license.html":{}}}],["produce",{"_index":1061,"title":{},"body":{"license.html":{}}}],["product",{"_index":1211,"title":{},"body":{"license.html":{}}}],["production",{"_index":657,"title":{},"body":{"index.html":{}}}],["products",{"_index":912,"title":{},"body":{"license.html":{}}}],["program",{"_index":828,"title":{},"body":{"license.html":{}}}],["program's",{"_index":1153,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":1624,"title":{},"body":{"license.html":{}}}],["programming",{"_index":1035,"title":{},"body":{"license.html":{}}}],["programs",{"_index":838,"title":{},"body":{"license.html":{}}}],["progressive",{"_index":628,"title":{},"body":{"index.html":{}}}],["prohibit",{"_index":916,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":1138,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":1494,"title":{},"body":{"license.html":{}}}],["project",{"_index":638,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":1020,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":1008,"title":{},"body":{"license.html":{}}}],["promise",{"_index":103,"title":{},"body":{"controllers/AccessController.html":{},"injectables/AccessService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/MessengerService.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["propagate",{"_index":973,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":1410,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":987,"title":{},"body":{"license.html":{}}}],["properties",{"_index":7,"title":{"properties.html":{}},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerificationJWTTokenDto.html":{},"properties.html":{}}}],["property",{"_index":1263,"title":{},"body":{"license.html":{}}}],["proprietary",{"_index":939,"title":{},"body":{"license.html":{}}}],["protect",{"_index":852,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":906,"title":{},"body":{"license.html":{}}}],["protection",{"_index":883,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":1317,"title":{},"body":{"license.html":{}}}],["prove",{"_index":1551,"title":{},"body":{"license.html":{}}}],["provide",{"_index":1103,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1014,"title":{},"body":{"license.html":{}}}],["providers",{"_index":138,"title":{},"body":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/GeosModule.html":{},"modules/InventoryModule.html":{},"modules/MessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providing",{"_index":768,"title":{},"body":{"index.html":{}}}],["provision",{"_index":924,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":1383,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":1537,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":1539,"title":{},"body":{"license.html":{}}}],["public",{"_index":791,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":1347,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1318,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1157,"title":{},"body":{"license.html":{}}}],["published",{"_index":1535,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":933,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1267,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":1483,"title":{},"body":{"license.html":{}}}],["put(':id')@httpcode(200",{"_index":455,"title":{},"body":{"controllers/InventoryController.html":{}}}],["put()@apioperation({summary",{"_index":279,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["qrcode",{"_index":318,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["qrcode_url",{"_index":319,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["qualify",{"_index":1398,"title":{},"body":{"license.html":{}}}],["quality",{"_index":1549,"title":{},"body":{"license.html":{}}}],["quanity",{"_index":362,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["quantity",{"_index":320,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["quite",{"_index":770,"title":{},"body":{"index.html":{}}}],["r",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radius",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["re",{"_index":690,"title":{},"body":{"index.html":{}}}],["read",{"_index":1634,"title":{},"body":{"license.html":{}}}],["readable",{"_index":1207,"title":{},"body":{"license.html":{}}}],["readily",{"_index":1471,"title":{},"body":{"license.html":{}}}],["reading",{"_index":1321,"title":{},"body":{"license.html":{}}}],["readme.md",{"_index":767,"title":{},"body":{"index.html":{}}}],["readme.mddescription",{"_index":713,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":296,"title":{},"body":{"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{}}}],["ready",{"_index":922,"title":{},"body":{"license.html":{}}}],["ready.ts",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["real",{"_index":330,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["reason",{"_index":1481,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1223,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":1396,"title":{},"body":{"license.html":{}}}],["receive",{"_index":844,"title":{},"body":{"license.html":{}}}],["received",{"_index":872,"title":{},"body":{"license.html":{}}}],["receiver",{"_index":499,"title":{},"body":{"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{}}}],["receives",{"_index":1415,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":1489,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":1300,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":1479,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":869,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":1029,"title":{},"body":{"license.html":{}}}],["record",{"_index":530,"title":{},"body":{"injectables/SanitizeUpdateRequestPipe.html":{}}}],["redistribute",{"_index":1595,"title":{},"body":{"license.html":{}}}],["ref",{"_index":73,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/Inventory.html":{}}}],["referring",{"_index":840,"title":{},"body":{"license.html":{}}}],["refers",{"_index":950,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["refrain",{"_index":1518,"title":{},"body":{"license.html":{}}}],["refrigeration",{"_index":337,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["regard",{"_index":1327,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":1180,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":1079,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":1382,"title":{},"body":{"license.html":{}}}],["related",{"_index":737,"title":{},"body":{"index.html":{}}}],["relationship",{"_index":1112,"title":{},"body":{"license.html":{}}}],["released",{"_index":834,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":1172,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":1368,"title":{},"body":{"license.html":{}}}],["relying",{"_index":1470,"title":{},"body":{"license.html":{}}}],["remain",{"_index":1244,"title":{},"body":{"license.html":{}}}],["remains",{"_index":831,"title":{},"body":{"license.html":{}}}],["removal",{"_index":1329,"title":{},"body":{"license.html":{}}}],["remove",{"_index":446,"title":{},"body":{"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"license.html":{}}}],["remove(id",{"_index":452,"title":{},"body":{"controllers/InventoryController.html":{},"injectables/InventoryService.html":{}}}],["render",{"_index":941,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":1567,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1556,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1286,"title":{},"body":{"license.html":{}}}],["representing",{"_index":746,"title":{},"body":{"index.html":{}}}],["request",{"_index":126,"title":{},"body":{"injectables/AccessMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{}}}],["request'})@apiresponse({status",{"_index":272,"title":{},"body":{"controllers/CategoryController.html":{}}}],["request'})@httpcode(200",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["requestlatitudelongitudegeodto",{"_index":413,"title":{"classes/RequestLatitudeLongitudeGeoDto.html":{}},"body":{"controllers/GeosController.html":{},"injectables/GeosService.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":724,"title":{},"body":{"index.html":{}}}],["require",{"_index":1074,"title":{},"body":{"license.html":{}}}],["required",{"_index":339,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{},"license.html":{}}}],["requirement",{"_index":1173,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":774,"title":{},"body":{"index.html":{},"license.html":{}}}],["requires",{"_index":889,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":965,"title":{},"body":{"license.html":{}}}],["res",{"_index":127,"title":{},"body":{"injectables/AccessMiddleware.html":{}}}],["reset",{"_index":144,"title":{},"body":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/GeosModule.html":{},"modules/InventoryModule.html":{},"modules/MessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolved",{"_index":1274,"title":{},"body":{"license.html":{}}}],["respect",{"_index":864,"title":{},"body":{"license.html":{}}}],["response",{"_index":128,"title":{},"body":{"injectables/AccessMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["response.dto.ts",{"_index":533,"title":{},"body":{"classes/SignInResponseWithEmailPasswordDto.html":{}}}],["responsibilities",{"_index":862,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":733,"title":{},"body":{"index.html":{},"license.html":{}}}],["restrict",{"_index":932,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":1139,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":1366,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":1363,"title":{},"body":{"license.html":{}}}],["result",{"_index":1540,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":968,"title":{},"body":{"license.html":{}}}],["results",{"_index":74,"title":{},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"modules/AccessModule.html":{},"injectables/AccessService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/Geo.html":{},"controllers/GeosController.html":{},"modules/GeosModule.html":{},"injectables/GeosService.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"modules/InventoryModule.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{},"modules/MessengerModule.html":{},"injectables/MessengerService.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/VerificationJWTTokenDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":1304,"title":{},"body":{"license.html":{}}}],["return",{"_index":1589,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":94,"title":{},"body":{"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"injectables/AccessService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/GeosController.html":{},"injectables/GeosService.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reviewing",{"_index":1580,"title":{},"body":{"license.html":{}}}],["revised",{"_index":1526,"title":{},"body":{"license.html":{}}}],["right",{"_index":1298,"title":{},"body":{"license.html":{}}}],["rights",{"_index":853,"title":{},"body":{"license.html":{}}}],["risk",{"_index":1548,"title":{},"body":{"license.html":{}}}],["roles.decorator.ts",{"_index":701,"title":{},"body":{"index.html":{}}}],["rom",{"_index":1307,"title":{},"body":{"license.html":{}}}],["root",{"_index":667,"title":{},"body":{"index.html":{}}}],["routes",{"_index":725,"title":{},"body":{"index.html":{}}}],["royalty",{"_index":1432,"title":{},"body":{"license.html":{}}}],["rules",{"_index":1316,"title":{},"body":{"license.html":{}}}],["run",{"_index":649,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":1092,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["runs",{"_index":1059,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["safest",{"_index":1597,"title":{},"body":{"license.html":{}}}],["sake",{"_index":888,"title":{},"body":{"license.html":{}}}],["sale",{"_index":1442,"title":{},"body":{"license.html":{}}}],["same",{"_index":870,"title":{},"body":{"license.html":{}}}],["sample",{"_index":238,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/GetCategoryDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["sanitizefiterpipe",{"_index":517,"title":{"injectables/SanitizeFiterPipe.html":{}},"body":{"injectables/SanitizeFiterPipe.html":{}}}],["sanitizeupdaterequestpipe",{"_index":526,"title":{"injectables/SanitizeUpdateRequestPipe.html":{}},"body":{"injectables/SanitizeUpdateRequestPipe.html":{}}}],["satisfy",{"_index":1247,"title":{},"body":{"license.html":{}}}],["saying",{"_index":1241,"title":{},"body":{"license.html":{}}}],["scalable",{"_index":633,"title":{},"body":{"index.html":{}}}],["schemafactory.createforclass(access",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(category",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(inventory",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":1625,"title":{},"body":{"license.html":{}}}],["scope",{"_index":1493,"title":{},"body":{"license.html":{}}}],["scripts",{"_index":764,"title":{},"body":{"index.html":{},"license.html":{}}}],["secondarily",{"_index":977,"title":{},"body":{"license.html":{}}}],["secondlocationlatitude",{"_index":507,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{},"miscellaneous/variables.html":{}}}],["secondlocationlongitude",{"_index":508,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":1117,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1204,"title":{},"body":{"license.html":{}}}],["see",{"_index":1606,"title":{},"body":{"license.html":{}}}],["sell",{"_index":1458,"title":{},"body":{"license.html":{}}}],["selling",{"_index":1441,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":953,"title":{},"body":{"license.html":{}}}],["sen.shishubh@gmail.com'})@isstring({message",{"_index":502,"title":{},"body":{"classes/OTPRequestDto.html":{}}}],["send",{"_index":481,"title":{},"body":{"controllers/MessengerController.html":{}}}],["sendotp",{"_index":477,"title":{},"body":{"controllers/MessengerController.html":{},"injectables/MessengerService.html":{}}}],["sendotp(body",{"_index":478,"title":{},"body":{"controllers/MessengerController.html":{}}}],["sendotp(undefined",{"_index":497,"title":{},"body":{"injectables/MessengerService.html":{}}}],["sent",{"_index":484,"title":{},"body":{"controllers/MessengerController.html":{}}}],["separable",{"_index":1257,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1188,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1184,"title":{},"body":{"license.html":{}}}],["seperated",{"_index":59,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["server",{"_index":634,"title":{},"body":{"index.html":{},"license.html":{}}}],["serves",{"_index":1050,"title":{},"body":{"license.html":{}}}],["service",{"_index":727,"title":{},"body":{"index.html":{},"license.html":{}}}],["services",{"_index":679,"title":{},"body":{"index.html":{}}}],["servicing",{"_index":1555,"title":{},"body":{"license.html":{}}}],["set",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setcontact",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setdescription('the",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('crud",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":777,"title":{},"body":{"index.html":{}}}],["setversion('1.0",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1122,"title":{},"body":{"license.html":{}}}],["share",{"_index":822,"title":{},"body":{"license.html":{}}}],["shared",{"_index":689,"title":{},"body":{"index.html":{},"license.html":{}}}],["shishubh'})@isstring({message",{"_index":500,"title":{},"body":{"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{}}}],["short",{"_index":1613,"title":{},"body":{"license.html":{}}}],["show",{"_index":757,"title":{},"body":{"index.html":{},"license.html":{}}}],["side",{"_index":635,"title":{},"body":{"index.html":{}}}],["sign",{"_index":1626,"title":{},"body":{"license.html":{}}}],["significant",{"_index":1287,"title":{},"body":{"license.html":{}}}],["signin",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(body",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["signinresponsewithemailpassworddto",{"_index":531,"title":{"classes/SignInResponseWithEmailPasswordDto.html":{}},"body":{"classes/SignInResponseWithEmailPasswordDto.html":{}}}],["signinwithemailpassword",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemailpassword(body",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemailpassworddto",{"_index":199,"title":{"classes/SignInWithEmailPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInWithEmailPasswordDto.html":{},"injectables/UserService.html":{}}}],["similar",{"_index":1137,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":1513,"title":{},"body":{"license.html":{}}}],["single",{"_index":1485,"title":{},"body":{"license.html":{}}}],["software",{"_index":799,"title":{},"body":{"license.html":{}}}],["sold",{"_index":1268,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1100,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1114,"title":{},"body":{"license.html":{}}}],["some@example.com'})@isemail",{"_index":535,"title":{},"body":{"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/User.html":{}}}],["some@example.com'})@isstring",{"_index":539,"title":{},"body":{"classes/SignInWithEmailPasswordDto.html":{}}}],["some@example.com'})@isstring({message",{"_index":433,"title":{},"body":{"classes/GetUserDto.html":{}}}],["sourabh",{"_index":1645,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["sourabhsen201313@gmail.com",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":845,"title":{},"body":{"license.html":{}}}],["spare",{"_index":1220,"title":{},"body":{"license.html":{}}}],["speak",{"_index":839,"title":{},"body":{"license.html":{}}}],["special",{"_index":936,"title":{},"body":{"license.html":{}}}],["specific",{"_index":734,"title":{},"body":{"index.html":{},"license.html":{}}}],["specifically",{"_index":1073,"title":{},"body":{"license.html":{}}}],["specified",{"_index":1033,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":1532,"title":{},"body":{"license.html":{}}}],["specify",{"_index":759,"title":{},"body":{"index.html":{},"license.html":{}}}],["spirit",{"_index":1527,"title":{},"body":{"license.html":{}}}],["src",{"_index":668,"title":{},"body":{"index.html":{}}}],["src/.../access.entity.ts",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../category.entities.ts",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../degree.helpers.ts",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../distance.helpers.ts",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inventory.entity.ts",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.ts",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.enum.ts",{"_index":620,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/app",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/config/jwt/jwt",{"_index":464,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/swagger.ts",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/middleware/access/access.middleware.ts",{"_index":120,"title":{},"body":{"injectables/AccessMiddleware.html":{}}}],["src/middleware/logger/logger.middleware.ts",{"_index":472,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/modules/access/access.controller.ts",{"_index":79,"title":{},"body":{"controllers/AccessController.html":{}}}],["src/modules/access/access.module.ts",{"_index":146,"title":{},"body":{"modules/AccessModule.html":{}}}],["src/modules/access/access.service.ts",{"_index":147,"title":{},"body":{"injectables/AccessService.html":{}}}],["src/modules/access/dto/access.create.dto.ts",{"_index":295,"title":{},"body":{"classes/CreateAccessDto.html":{}}}],["src/modules/access/dto/access.update.dto.ts",{"_index":542,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["src/modules/access/entities/access.entity.ts",{"_index":5,"title":{},"body":{"classes/Access.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/signin",{"_index":532,"title":{},"body":{"classes/SignInResponseWithEmailPasswordDto.html":{}}}],["src/modules/auth/dto/signin.dto.ts",{"_index":538,"title":{},"body":{"classes/SignInWithEmailPasswordDto.html":{},"classes/VerificationJWTTokenDto.html":{}}}],["src/modules/category/category.controller.ts",{"_index":249,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/modules/category/category.module.ts",{"_index":286,"title":{},"body":{"modules/CategoryModule.html":{}}}],["src/modules/category/category.service.ts",{"_index":287,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/modules/category/dto/create",{"_index":299,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["src/modules/category/dto/get",{"_index":391,"title":{},"body":{"classes/FilterCategroyDto.html":{},"classes/GetCategoryDto.html":{}}}],["src/modules/category/dto/update",{"_index":543,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["src/modules/category/entities/category.entities.ts",{"_index":231,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["src/modules/category/pipes/sanitize_update_request.pipe.ts",{"_index":527,"title":{},"body":{"injectables/SanitizeUpdateRequestPipe.html":{}}}],["src/modules/geos/dto/request",{"_index":503,"title":{},"body":{"classes/RequestLatitudeLongitudeGeoDto.html":{}}}],["src/modules/geos/entities/geo.entity.ts",{"_index":407,"title":{},"body":{"classes/Geo.html":{}}}],["src/modules/geos/geos.controller.ts",{"_index":409,"title":{},"body":{"controllers/GeosController.html":{}}}],["src/modules/geos/geos.module.ts",{"_index":427,"title":{},"body":{"modules/GeosModule.html":{}}}],["src/modules/geos/geos.service.ts",{"_index":428,"title":{},"body":{"injectables/GeosService.html":{}}}],["src/modules/geos/helpers/degree.helpers.ts",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/modules/geos/helpers/distance.helpers.ts",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/modules/inventory/dto/create",{"_index":305,"title":{},"body":{"classes/CreateInventoryDto.html":{}}}],["src/modules/inventory/dto/get",{"_index":398,"title":{},"body":{"classes/FilterInventoryDto.html":{},"classes/GetInventoryDto.html":{}}}],["src/modules/inventory/dto/update",{"_index":544,"title":{},"body":{"classes/UpdateInventoryDto.html":{}}}],["src/modules/inventory/entities/inventory.entity.ts",{"_index":436,"title":{},"body":{"classes/Inventory.html":{},"miscellaneous/variables.html":{}}}],["src/modules/inventory/inventory.controller.ts",{"_index":444,"title":{},"body":{"controllers/InventoryController.html":{}}}],["src/modules/inventory/inventory.module.ts",{"_index":459,"title":{},"body":{"modules/InventoryModule.html":{}}}],["src/modules/inventory/inventory.service.ts",{"_index":460,"title":{},"body":{"injectables/InventoryService.html":{}}}],["src/modules/messenger/dto/otp.dto.ts",{"_index":498,"title":{},"body":{"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{}}}],["src/modules/messenger/messenger.controller.ts",{"_index":475,"title":{},"body":{"controllers/MessengerController.html":{}}}],["src/modules/messenger/messenger.module.ts",{"_index":488,"title":{},"body":{"modules/MessengerModule.html":{}}}],["src/modules/messenger/messenger.service.ts",{"_index":489,"title":{},"body":{"injectables/MessengerService.html":{}}}],["src/modules/user/dto/create",{"_index":366,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/user/dto/get",{"_index":401,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{}}}],["src/modules/user/dto/update",{"_index":546,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/modules/user/entities/user.entity.ts",{"_index":547,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/enums/user.enum.ts",{"_index":621,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/user/user.controller.ts",{"_index":549,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":569,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":570,"title":{},"body":{"injectables/UserService.html":{}}}],["src/pipes/sanitizers/get",{"_index":518,"title":{},"body":{"injectables/SanitizeFiterPipe.html":{}}}],["src/utils/access/index.ts",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/utils/datetime/index.ts",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/utils/function/index.ts",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["srvtiv51eg1maux'})@isstring",{"_index":540,"title":{},"body":{"classes/SignInWithEmailPasswordDto.html":{}}}],["stand",{"_index":921,"title":{},"body":{"license.html":{}}}],["standard",{"_index":1026,"title":{},"body":{"license.html":{}}}],["standards",{"_index":1030,"title":{},"body":{"license.html":{}}}],["start",{"_index":653,"title":{},"body":{"index.html":{},"license.html":{}}}],["start:dev",{"_index":656,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":658,"title":{},"body":{"index.html":{}}}],["started",{"_index":626,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":775,"title":{},"body":{"index.html":{}}}],["starts",{"_index":1614,"title":{},"body":{"license.html":{}}}],["state",{"_index":62,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"license.html":{}}}],["stated",{"_index":1086,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1370,"title":{},"body":{"license.html":{}}}],["states",{"_index":930,"title":{},"body":{"license.html":{}}}],["stating",{"_index":1160,"title":{},"body":{"license.html":{}}}],["status",{"_index":1278,"title":{},"body":{"license.html":{}}}],["steps",{"_index":875,"title":{},"body":{"license.html":{}}}],["stock",{"_index":336,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["storage",{"_index":1195,"title":{},"body":{"license.html":{}}}],["str",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategies",{"_index":684,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":752,"title":{},"body":{"index.html":{}}}],["strategy.ts",{"_index":465,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"injectables/AccessService.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"injectables/GeosService.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"injectables/MessengerService.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/VerificationJWTTokenDto.html":{},"miscellaneous/variables.html":{}}}],["string'})@isoptional",{"_index":301,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{}}}],["string'})@isoptional()@prop({required",{"_index":240,"title":{},"body":{"classes/Category.html":{},"classes/CreateUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["string'})@prop({required",{"_index":28,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/User.html":{}}}],["string/hexa",{"_index":72,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["stringtoobjectid",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["structure",{"_index":666,"title":{},"body":{"index.html":{}}}],["subdividing",{"_index":1422,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1416,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":1454,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":1116,"title":{},"body":{"license.html":{}}}],["subprograms",{"_index":1072,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":1629,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":1229,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1282,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":919,"title":{},"body":{"license.html":{}}}],["successfully'})@apibadrequestresponse({status",{"_index":485,"title":{},"body":{"controllers/MessengerController.html":{}}}],["such",{"_index":865,"title":{},"body":{"license.html":{}}}],["sue",{"_index":1468,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":1291,"title":{},"body":{"license.html":{}}}],["supplement",{"_index":1322,"title":{},"body":{"license.html":{}}}],["support",{"_index":1168,"title":{},"body":{"license.html":{},"modules.html":{}}}],["supports",{"_index":1237,"title":{},"body":{"license.html":{}}}],["sure",{"_index":830,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":859,"title":{},"body":{"license.html":{}}}],["survive",{"_index":1369,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":1570,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1638,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":640,"title":{},"body":{"index.html":{}}}],["swaggerloader",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":1039,"title":{},"body":{"license.html":{}}}],["systematic",{"_index":907,"title":{},"body":{"license.html":{}}}],["take",{"_index":819,"title":{},"body":{"license.html":{}}}],["tangible",{"_index":1261,"title":{},"body":{"license.html":{}}}],["technological",{"_index":1125,"title":{},"body":{"license.html":{}}}],["tells",{"_index":1012,"title":{},"body":{"license.html":{}}}],["term",{"_index":1084,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":1612,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":1376,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":1397,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":1385,"title":{},"body":{"license.html":{}}}],["termination",{"_index":1373,"title":{},"body":{"license.html":{}}}],["terms",{"_index":873,"title":{},"body":{"license.html":{}}}],["test",{"_index":661,"title":{},"body":{"index.html":{}}}],["test:covfolder",{"_index":665,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":663,"title":{},"body":{"index.html":{}}}],["tests",{"_index":660,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":860,"title":{},"body":{"license.html":{}}}],["things",{"_index":851,"title":{},"body":{"license.html":{}}}],["third",{"_index":1152,"title":{},"body":{"license.html":{}}}],["those",{"_index":917,"title":{},"body":{"license.html":{}}}],["though",{"_index":1325,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":927,"title":{},"body":{"license.html":{}}}],["three",{"_index":1218,"title":{},"body":{"license.html":{}}}],["through",{"_index":999,"title":{},"body":{"license.html":{}}}],["throw",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thus",{"_index":1107,"title":{},"body":{"license.html":{}}}],["ties",{"_index":747,"title":{},"body":{"index.html":{}}}],["time",{"_index":1394,"title":{},"body":{"license.html":{}}}],["todaydate",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todaydate.setdate(todaydate.getdate",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["together",{"_index":748,"title":{},"body":{"index.html":{}}}],["token",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["token'})@apiresponse({status",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["tools",{"_index":1066,"title":{},"body":{"license.html":{}}}],["toradians",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toradians(+secondlocationlatitude",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toradians(+secondlocationlongitude",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trade",{"_index":1353,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1352,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1354,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":1297,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":675,"title":{},"body":{"index.html":{},"license.html":{}}}],["transferred",{"_index":1299,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":1419,"title":{},"body":{"license.html":{}}}],["transform",{"_index":520,"title":{},"body":{"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{}}}],["transform(value",{"_index":521,"title":{},"body":{"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{}}}],["transformation",{"_index":744,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["transmission",{"_index":1251,"title":{},"body":{"license.html":{}}}],["treated",{"_index":1324,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1132,"title":{},"body":{"license.html":{}}}],["true",{"_index":29,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/User.html":{}}}],["true'})@isboolean({message",{"_index":50,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["try",{"_index":100,"title":{},"body":{"controllers/AccessController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/MessengerController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.json",{"_index":712,"title":{},"body":{"index.html":{}}}],["two",{"_index":418,"title":{},"body":{"controllers/GeosController.html":{},"license.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"injectables/AccessMiddleware.html":{},"injectables/AccessService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"controllers/GeosController.html":{},"injectables/GeosService.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{},"classes/OTPDto.html":{},"classes/OTPRequestDto.html":{},"classes/RequestLatitudeLongitudeGeoDto.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/VerificationJWTTokenDto.html":{},"license.html":{}}}],["typeorm",{"_index":745,"title":{},"body":{"index.html":{}}}],["types.objectid",{"_index":69,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/FilterCategroyDto.html":{},"classes/GetCategoryDto.html":{},"classes/Inventory.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{}}}],["typescript",{"_index":765,"title":{},"body":{"index.html":{}}}],["typical",{"_index":1276,"title":{},"body":{"license.html":{}}}],["unacceptable",{"_index":915,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":42,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["under",{"_index":957,"title":{},"body":{"license.html":{}}}],["unique",{"_index":30,"title":{},"body":{"classes/Access.html":{},"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/User.html":{}}}],["unit",{"_index":659,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GeosController.html":{},"injectables/InventoryService.html":{},"injectables/JwtStrategy.html":{},"controllers/MessengerController.html":{},"injectables/MessengerService.html":{}}}],["unless",{"_index":1285,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":1644,"title":{},"body":{"properties.html":{}}}],["unlimited",{"_index":1090,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":972,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":1119,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":1320,"title":{},"body":{"license.html":{}}}],["until",{"_index":1384,"title":{},"body":{"license.html":{}}}],["update",{"_index":280,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["update(id",{"_index":294,"title":{},"body":{"injectables/CategoryService.html":{},"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"injectables/UserService.html":{}}}],["updateauthdto",{"_index":541,"title":{"classes/UpdateAuthDto.html":{}},"body":{"classes/UpdateAuthDto.html":{}}}],["updatecategory",{"_index":254,"title":{},"body":{"controllers/CategoryController.html":{}}}],["updatecategory(id",{"_index":277,"title":{},"body":{"controllers/CategoryController.html":{}}}],["updatecategorydto",{"_index":278,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/UpdateCategoryDto.html":{}}}],["updated",{"_index":281,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["updateinventorydto",{"_index":454,"title":{"classes/UpdateInventoryDto.html":{}},"body":{"controllers/InventoryController.html":{},"injectables/InventoryService.html":{},"classes/UpdateInventoryDto.html":{}}}],["updates",{"_index":1309,"title":{},"body":{"license.html":{}}}],["updateuser",{"_index":555,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(id",{"_index":565,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuserdto",{"_index":545,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["url",{"_index":245,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/User.html":{}}}],["url'})@isoptional",{"_index":386,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["url'})@isoptional()@prop({required",{"_index":537,"title":{},"body":{"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/User.html":{}}}],["usable",{"_index":691,"title":{},"body":{"index.html":{}}}],["use",{"_index":121,"title":{},"body":{"injectables/AccessMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["use(request",{"_index":125,"title":{},"body":{"injectables/AccessMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["used",{"_index":742,"title":{},"body":{"index.html":{},"license.html":{}}}],["useful",{"_index":1605,"title":{},"body":{"license.html":{}}}],["user",{"_index":25,"title":{"classes/User.html":{}},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{},"license.html":{}}}],["user's",{"_index":43,"title":{},"body":{"classes/Access.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["user'})@apibadrequestresponse({status",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["user'})@apinotfoundresponse({status",{"_index":114,"title":{},"body":{"controllers/AccessController.html":{},"controllers/UserController.html":{}}}],["user'})@apiresponse({status",{"_index":557,"title":{},"body":{"controllers/UserController.html":{}}}],["user'})@isphonenumber(undefined",{"_index":403,"title":{},"body":{"classes/FilterUserDto.html":{}}}],["user'})@isstring({message",{"_index":402,"title":{},"body":{"classes/FilterUserDto.html":{}}}],["user.controller.ts",{"_index":672,"title":{},"body":{"index.html":{}}}],["user.dto.ts",{"_index":367,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{}}}],["user.entity.ts",{"_index":678,"title":{},"body":{"index.html":{}}}],["user.module.ts",{"_index":681,"title":{},"body":{"index.html":{}}}],["user.service.ts",{"_index":680,"title":{},"body":{"index.html":{}}}],["user_id",{"_index":17,"title":{},"body":{"classes/Access.html":{},"controllers/AccessController.html":{},"classes/CreateAccessDto.html":{},"classes/UpdateAuthDto.html":{}}}],["user_type",{"_index":372,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["usercontroller",{"_index":548,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["usermodel",{"_index":574,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":166,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users",{"_index":550,"title":{},"body":{"controllers/UserController.html":{},"index.html":{},"license.html":{}}}],["users'})@apiresponse({status",{"_index":562,"title":{},"body":{"controllers/UserController.html":{}}}],["users'})@httpcode(200",{"_index":563,"title":{},"body":{"controllers/UserController.html":{}}}],["userschema",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userservice",{"_index":124,"title":{"injectables/UserService.html":{}},"body":{"injectables/AccessMiddleware.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["usertypeenum",{"_index":390,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["uses",{"_index":1280,"title":{},"body":{"license.html":{}}}],["using",{"_index":1249,"title":{},"body":{"license.html":{}}}],["valid",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/SignInWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"license.html":{}}}],["validate",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/GetUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["validate(payload",{"_index":469,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateupdaterequest",{"_index":528,"title":{},"body":{"injectables/SanitizeUpdateRequestPipe.html":{}}}],["validateupdaterequest(body",{"_index":529,"title":{},"body":{"injectables/SanitizeUpdateRequestPipe.html":{}}}],["validateuserbyid",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuserbyid(id",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":743,"title":{},"body":{"index.html":{}}}],["validation.pipe.ts",{"_index":698,"title":{},"body":{"index.html":{}}}],["validator",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":525,"title":{},"body":{"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":708,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":807,"title":{},"body":{"license.html":{}}}],["verificationjwttokendto",{"_index":178,"title":{"classes/VerificationJWTTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/VerificationJWTTokenDto.html":{}}}],["verifyjwttoken",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["verifyjwttoken(body",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyjwttoken(undefined",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":762,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":827,"title":{},"body":{"license.html":{}}}],["via",{"_index":420,"title":{},"body":{"controllers/GeosController.html":{}}}],["view",{"_index":1015,"title":{},"body":{"license.html":{}}}],["violates",{"_index":1315,"title":{},"body":{"license.html":{}}}],["violation",{"_index":1380,"title":{},"body":{"license.html":{}}}],["visible",{"_index":1009,"title":{},"body":{"license.html":{}}}],["void",{"_index":473,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":1194,"title":{},"body":{"license.html":{}}}],["w",{"_index":1616,"title":{},"body":{"license.html":{}}}],["waive",{"_index":1141,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":1585,"title":{},"body":{"license.html":{}}}],["want",{"_index":847,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":1013,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":886,"title":{},"body":{"license.html":{}}}],["watch",{"_index":654,"title":{},"body":{"index.html":{}}}],["way",{"_index":835,"title":{},"body":{"license.html":{}}}],["ways",{"_index":1208,"title":{},"body":{"license.html":{}}}],["weight",{"_index":321,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["welcome",{"_index":1617,"title":{},"body":{"license.html":{}}}],["well",{"_index":992,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":1424,"title":{},"body":{"license.html":{}}}],["whether",{"_index":48,"title":{},"body":{"classes/Access.html":{},"controllers/AuthController.html":{},"classes/Category.html":{},"classes/CreateAccessDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateInventoryDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterCategroyDto.html":{},"classes/FilterInventoryDto.html":{},"classes/FilterUserDto.html":{},"classes/GetCategoryDto.html":{},"classes/GetInventoryDto.html":{},"classes/GetUserDto.html":{},"classes/Inventory.html":{},"classes/SignInResponseWithEmailPasswordDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateInventoryDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"license.html":{}}}],["whole",{"_index":1043,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1259,"title":{},"body":{"license.html":{}}}],["widely",{"_index":1038,"title":{},"body":{"license.html":{}}}],["width",{"_index":322,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["window",{"_index":1057,"title":{},"body":{"license.html":{}}}],["wipo",{"_index":1131,"title":{},"body":{"license.html":{}}}],["wish",{"_index":843,"title":{},"body":{"license.html":{}}}],["within",{"_index":1364,"title":{},"body":{"license.html":{}}}],["without",{"_index":975,"title":{},"body":{"license.html":{}}}],["work",{"_index":833,"title":{},"body":{"license.html":{}}}],["work's",{"_index":1065,"title":{},"body":{"license.html":{}}}],["working",{"_index":781,"title":{},"body":{"index.html":{},"license.html":{}}}],["works",{"_index":815,"title":{},"body":{"license.html":{}}}],["world",{"_index":331,"title":{},"body":{"classes/CreateInventoryDto.html":{},"classes/Inventory.html":{}}}],["worldwide",{"_index":1457,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1543,"title":{},"body":{"license.html":{}}}],["written",{"_index":1217,"title":{},"body":{"license.html":{}}}],["years",{"_index":1219,"title":{},"body":{"license.html":{}}}],["yes",{"_index":276,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/SanitizeFiterPipe.html":{},"injectables/SanitizeUpdateRequestPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["yourself",{"_index":1475,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":143,"title":{},"body":{"modules/AccessModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/GeosModule.html":{},"modules/InventoryModule.html":{},"modules/MessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Access.html":{"url":"classes/Access.html","title":"class - Access","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Access\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/access/entities/access.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                api_key\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                expiry\n                            \n                            \n                                    \n                                    \n                                    \n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                is_expired\n                            \n                            \n                                    \n                                    \n                                    \n                                key_name\n                            \n                            \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        api_key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Api key of user', example: ''})@IsString({message: 'Api key must be a string'})@Prop({required: true, unique: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        expiry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Expiry date must be a default date + 30 days', example: '2023-07-29T06:00:54.567Z'})@IsDateString({}, {message: 'Expiry date must be a default date + 30 days'})@IsOptional()@Prop({required: false, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'IP address must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether key is active or not', example: 'true'})@IsBoolean({message: 'Active must be true by default'})@IsOptional()@Prop({required: false, default: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether key is deleted or not', example: 'false'})@IsBoolean({message: 'Delete must be false by default'})@IsOptional()@Prop({required: false, default: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        is_expired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether key is expired or not', example: 'false'})@IsBoolean({message: 'Expired must be false by default'})@IsOptional()@Prop({required: false, default: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        key_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Key name of user', example: 'John'})@IsString({message: 'Key name must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'Current location of user seperated by Comma in City, State, Country format must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the user', example: '64c4ab16336bcced427a125c'})@IsString({message: 'User Id must be a string/hexa string'})@Prop({required: true, ref: undefined})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccessController.html":{"url":"controllers/AccessController.html","title":"controller - AccessController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccessController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/access/access.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                access\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getaccessById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getaccessByUserId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAllAccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(access: CreateAccessDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create an access'})@ApiResponse({status: 201, description: 'Returns an object of created access'})@ApiBadRequestResponse({status: 400, description: 'Access not created. Please try again.'})@HttpCode(201)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                access\n                                            \n                                                            CreateAccessDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getaccessById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getaccessById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get access by Id'})@ApiResponse({status: 200, description: 'Returns an object of access'})@ApiNotFoundResponse({status: 404, description: 'Access Not Found'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getaccessByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getaccessByUserId(user_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user/:user_id')@ApiOperation({summary: 'Get all access by user Id'})@ApiResponse({status: 200, description: 'Returns an array of access of user'})@ApiNotFoundResponse({status: 404, description: 'Access Not Found'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getAllAccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllAccess()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all access'})@ApiResponse({status: 200, description: 'Returns an array of access'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessMiddleware.html":{"url":"injectables/AccessMiddleware.html","title":"injectable - AccessMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessMiddleware\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/access/access.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(request: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccessModule.html":{"url":"modules/AccessModule.html","title":"module - AccessModule","body":"\n                   \n\n\n\n\n    Modules\n    AccessModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccessModule\n\n\n\ncluster_AccessModule_providers\n\n\n\n\nAccessService\n\nAccessService\n\n\n\nAccessModule\n\nAccessModule\n\nAccessModule -->\n\nAccessService->AccessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/access/access.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccessService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccessController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessService.html":{"url":"injectables/AccessService.html","title":"injectable - AccessService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/access/access.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllByUser\n                            \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessModel: mongoose.Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessModel\n                                                  \n                                                        \n                                                                        mongoose.Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(access: CreateAccessDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                access\n                                            \n                                                            CreateAccessDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByUser(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccessModule\n\nAccessModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccessModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nGeosModule\n\nGeosModule\n\nAppModule -->\n\nGeosModule->AppModule\n\n\n\n\n\nInventoryModule\n\nInventoryModule\n\nAppModule -->\n\nInventoryModule->AppModule\n\n\n\n\n\nMessengerModule\n\nMessengerModule\n\nAppModule -->\n\nMessengerModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nMessengerService\n\nMessengerService\n\nAppModule -->\n\nMessengerService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MessengerService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccessModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CategoryModule\n                        \n                        \n                            GeosModule\n                        \n                        \n                            InventoryModule\n                        \n                        \n                            MessengerModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                decodeJWTToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                generateToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                signin\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                verifyJWTToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        decodeJWTToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decodeJWTToken(body: VerificationJWTTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/decodeJWTToken')@ApiOperation({summary: 'Decode and get JWT token information if token is not expired'})@ApiResponse({status: 200, description: 'Decode and get JWT token information if token is not expired'})@ApiBadRequestResponse({status: 400, description: 'Please try with valid request'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            VerificationJWTTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateToken(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/generateToken')@ApiOperation({summary: 'Generate an user token'})@ApiResponse({status: 200, description: 'Returns an object with generated token of given user'})@ApiBadRequestResponse({status: 400, description: 'Token not generated. Please try again.'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        signin\n                        \n                    \n                \n            \n            \n                \n                        \n                    signin(body: SignInWithEmailPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signInWithEmailPassword')@ApiOperation({summary: 'SignIn with email & password'})@ApiResponse({status: 200, description: 'Returns user object with generated token where validate email & password'})@ApiBadRequestResponse({status: 400, description: 'Please try with valid email & password'})@ApiNotFoundResponse({status: 404, description: 'Invalid email or password, Please try agian with valid credentials'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SignInWithEmailPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        verifyJWTToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyJWTToken(body: VerificationJWTTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/verifyJWTToken')@ApiOperation({summary: 'Validate whether JWT token is expired or not'})@ApiResponse({status: 200, description: 'Validate whether JWT token is expired or not'})@ApiBadRequestResponse({status: 400, description: 'Please try with valid request'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            VerificationJWTTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                decodeJWTToken\n                            \n                            \n                                    Async\n                                generateJwtToken\n                            \n                            \n                                    Async\n                                signInWithEmailPassword\n                            \n                            \n                                    Async\n                                validateUserById\n                            \n                            \n                                    Async\n                                verifyJWTToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userService: UserService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        decodeJWTToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decodeJWTToken(undefined: VerificationJWTTokenDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            VerificationJWTTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateJwtToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateJwtToken(user: User)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signInWithEmailPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    signInWithEmailPassword(body: SignInWithEmailPasswordDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SignInWithEmailPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUserById(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyJWTToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyJWTToken(undefined: VerificationJWTTokenDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            VerificationJWTTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/entities/category.entities.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                added_by\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                image_url\n                            \n                            \n                                    \n                                    \n                                    \n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                parent_category_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        added_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the admin user who adding the category', example: '64c4ab16336bcced427a125c'})@IsString({message: 'Admin user id must be a string/hexa string'})@Prop({required: true, ref: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description of the category', example: 'Sample description...'})@IsString({message: 'Description must be a string'})@IsOptional()@Prop({required: false, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Buffer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Image of the category', example: 'base64'})@IsBase64({message: 'Image in binary'})@IsOptional()@Prop({required: false, type: 'buffer'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'image_url of the category', example: 'https://exmaple.com/image.png'})@IsString({message: 'Image url must be a string'})@IsOptional()@Prop({required: false, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'IP address must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether category is active or not', example: 'true'})@IsBoolean({message: 'Active must be true by default'})@IsOptional()@Prop({required: false, default: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether category is delete or not', example: 'false'})@IsBoolean({message: 'Delete must be false by default'})@IsOptional()@Prop({required: false, default: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'Current location of user seperated by Comma in City, State, Country format must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the category', example: 'Hardware'})@IsString({message: 'Name must be a string'})@Prop({required: true, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        parent_category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the parent category', example: '64c4ab16336bcced427a125c'})@IsString({message: 'Parent category id must be a string/hexa string'})@Prop({required: false, ref: undefined})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoryController.html":{"url":"controllers/CategoryController.html","title":"controller - CategoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoryController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/category.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                category\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createCategory\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteCategory\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteMultipleCategories\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getCategories\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCategory(category: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@ApiOperation({summary: 'Create the category'})@ApiResponse({status: 201, description: 'Returns an object of created category'})@ApiBadRequestResponse({status: 400, description: 'Category not created. Please try again.'})@HttpCode(201)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteCategory(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete the category'})@ApiResponse({status: 200, description: 'Category has been deleted'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        deleteMultipleCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMultipleCategories(ids: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiOperation({summary: 'Delete multiple categories by id'})@ApiResponse({status: 200, description: 'Categories has been deleted'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCategories(filter?: FilterCategroyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all categories '})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 200, description: 'Returns a list of categories'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            FilterCategroyDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        updateCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCategory(id: string, category: UpdateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Update the category'})@ApiResponse({status: 200, description: 'Returns an object of updated category'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                category\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/category/category.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteMultiples\n                            \n                            \n                                    Async\n                                getCategories\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryModel: mongoose.Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryModel\n                                                  \n                                                        \n                                                                        mongoose.Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(category: CreateCategoryDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteMultiples\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMultiples(ids: string[])\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCategories(filter?: FilterCategroyDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            FilterCategroyDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, category: UpdateCategoryDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                category\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccessDto.html":{"url":"classes/CreateAccessDto.html","title":"class - CreateAccessDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccessDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/access/dto/access.create.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                api_key\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                expiry\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                is_expired\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                key_name\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                location\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        api_key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Api key of user', example: ''})@IsString({message: 'Api key must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        expiry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Expiry date must be a default date + 30 days', example: '2023-07-29T06:00:54.567Z'})@IsDateString({}, {message: 'Expiry date must be a default date + 30 days'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'IP address must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether key is active or not', example: 'true'})@IsBoolean({message: 'Active must be true by default'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether key is deleted or not', example: 'false'})@IsBoolean({message: 'Delete must be false by default'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        is_expired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether key is expired or not', example: 'false'})@IsBoolean({message: 'Expired must be false by default'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        key_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Key name of user', example: 'John'})@IsString({message: 'Key name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'Current location of user seperated by Comma in City, State, Country format must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the user', example: '64c4ab16336bcced427a125c'})@IsString({message: 'User Id must be a string/hexa string'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                added_by\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                image\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                image_url\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                location\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                parent_category_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        added_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the admin user who adding the category', example: '64c4ab16336bcced427a125c'})@IsString({message: 'Admin user id must be a string/hexa string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description of the category', example: 'Sample description...'})@IsString({message: 'Description must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Buffer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Image of the category', example: 'base64'})@IsBase64({message: 'Image in binary'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'image_url of the category', example: 'https://exmaple.com/image.png'})@IsString({message: 'Image url must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'ip_address must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is active or not', example: 'true'})@IsBoolean({message: 'is_active must be a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is delete or not', example: 'false'})@IsBoolean({message: 'is_deleted must be  a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'location of user seperated by Comma in City, State, Country format must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the category', example: 'Hardware'})@IsString({message: 'Name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        parent_category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the parent category', example: '64c4ab16336bcced427a125c'})@IsString({message: 'Parent category id must be a string/hexa string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInventoryDto.html":{"url":"classes/CreateInventoryDto.html","title":"class - CreateInventoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInventoryDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/inventory/dto/create-inventory.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                added_by\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                barcode\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                category_id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                depth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                height\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                image\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                image_url\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                inventory_location\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_in_stock\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_refrigeration_required\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                item_id\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                maximum_stock_level\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                minimum_stock_level\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                model_number\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                qrcode\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                qrcode_url\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                weight\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        added_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the admin user', example: '64c4ab16336bcced427a125c'})@IsString({message: 'Admin user id must be a string/hexa string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        barcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'image_url of the inventory', example: 'https://exmaple.com/image.png'})@IsString({message: 'Barcode must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the category', example: '64c4ab16336bcced427a125c'})@IsString({message: 'Category id must be a string/hexa string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        depth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'depth of the inventory in (mm)', example: '120 mm'})@IsString({message: 'Depth (in millimeters) must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description of the inventory', example: 'about inventory...'})@IsString({message: 'Description must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'height of the inventory in (mm)', example: '100 mm'})@IsString({message: 'Height (in millimeters) must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Buffer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Image of the inventory', example: 'base64'})@IsBase64({message: 'Image in binary'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'image_url of the inventory', example: 'https://exmaple.com/image.png'})@IsString({message: 'Image url must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        inventory_location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Location of the inventory in the real world, like drawer, library', example: 'drawer'})@IsBoolean({message: 'Inventory location must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'ip_address must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is active or not', example: 'true'})@IsBoolean({message: 'is_active must be a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is delete or not', example: 'false'})@IsBoolean({message: 'is_deleted must be  a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_in_stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether inventory isInStock or not', example: 'true'})@IsBoolean({message: 'Is inventory is in  stock must be a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_refrigeration_required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Is refrigeration is needed for the inventory, false by default', example: 'false'})@IsBoolean({message: 'Is refrigeration required must be a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        item_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique item id of item with the prefix of `IN_` followed by ISO Date string that generates dynamically', example: 'IN_1706347991940'})@IsString({message: 'Item id must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'location of user seperated by Comma in City, State, Country format must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        maximum_stock_level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'maximum_stock_level the inventory in number', example: '120'})@IsNumber({allowNaN: false}, {message: 'Maximum stock level must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        minimum_stock_level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'minimum_stock_level the inventory in number', example: '5'})@IsNumber({allowNaN: false}, {message: 'Minimum stock level must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        model_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Model number of the inventory', example: 'INQX_2314DEY'})@IsString({message: 'Model number must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the category', example: 'Hardware'})@IsString({message: 'Name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        qrcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Buffer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'qrcode of the inventory', example: 'base64'})@IsBase64({message: 'QRCode in binary'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        qrcode_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'qrcode_url of the inventory', example: 'https://exmaple.com/qrcode_image.png'})@IsString({message: 'QRCode url must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid positive quantity of the inventory that should be greater than 0 (> 0)', example: '76'})@IsNumber({allowNaN: false, allowInfinity: true, maxDecimalPlaces: 0}, {message: 'Quanity must be a valid positive number that should be greater than 0 (> 0)'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'weight of the inventory in (grams)', example: '120 grams'})@IsString({message: 'Weight (in grams) must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'width of the inventory in (mm)', example: '120 mm'})@IsString({message: 'Width (in millimeters) must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                first_name\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                last_name\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                location\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                photo_url\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                user_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid email of user', example: 'admin@example.com'})@IsEmail({}, {message: 'email must be a valid string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First name of user', example: 'First'})@IsString({message: 'first_name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'ip_address must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is active or not', example: 'true'})@IsBoolean({message: 'is_active must be a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is delete or not', example: 'false'})@IsBoolean({message: 'is_deleted must be  a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last name of user', example: 'Last'})@IsString({message: 'last_name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'location of user seperated by Comma in City, State, Country format must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid password of user', example: 'Jhg$@87&Tywe'})@IsString({message: 'password must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid 10 digit phone number of user', example: '1234567890'})@IsPhoneNumber(undefined, {message: 'phone must be a valid 10 digit mobile number'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        photo_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User's photo', example: 'https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1'})@IsString({message: 'photo_url must be valid image URL'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        user_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Type of user like: Consumer | Admin', example: 'Consumer'})@IsString({message: 'user_type must be a string'})@IsOptional()@Prop({required: false, enum: UserTypeEnum, default: undefined, validate: undefined})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterCategroyDto.html":{"url":"classes/FilterCategroyDto.html","title":"class - FilterCategroyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterCategroyDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/get-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                added_by\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                parent_category_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the category'})@IsString({message: 'id must be a string/hexa string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        added_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the admin user who adding the category'})@IsString({message: 'Admin user id must be a string/hexa string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address'})@IsString({message: 'ip_address must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is active or not'})@IsBoolean({message: 'is_active must be a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is delete or not'})@IsBoolean({message: 'is_deleted must be  a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format'})@IsString({message: 'location of user seperated by Comma in City, State, Country format must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the category'})@IsString({message: 'Name must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        parent_category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the parent category'})@IsString({message: 'Parent category id must be a string/hexa string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterInventoryDto.html":{"url":"classes/FilterInventoryDto.html","title":"class - FilterInventoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterInventoryDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/inventory/dto/get-inventory.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the inventory'})@IsString({message: 'id must be a string/hexa string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address'})@IsString({message: 'ip_address must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is active or not'})@IsBoolean({message: 'is_active must be a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is delete or not'})@IsBoolean({message: 'is_deleted must be  a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format'})@IsString({message: 'location of user seperated by Comma in City, State, Country format must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the inventory'})@IsString({message: 'Name must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterUserDto.html":{"url":"classes/FilterUserDto.html","title":"class - FilterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterUserDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/get-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                first_name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                last_name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                user_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the user'})@IsString({message: 'id must be a string/hexa string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid email of user'})@IsString({message: 'Email must be a valid string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First name of user'})@IsString({message: 'First name must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address'})@IsString({message: 'IP address must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether user is active or not'})@IsBoolean({message: 'Active must be true by default'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether user is delete or not'})@IsBoolean({message: 'Delete must be false by default'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last name of user'})@IsString({message: 'Last name must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format'})@IsString({message: 'Current location of user seperated by Comma in City, State, Country format must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid 10 digit phone number of user'})@IsPhoneNumber(undefined, {message: 'Phone must be a valid 10 digit mobile number'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        user_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type of user like: Consumer | Admin'})@IsString({message: 'user type must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Geo.html":{"url":"classes/Geo.html","title":"class - Geo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Geo\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/geos/entities/geo.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeosController.html":{"url":"controllers/GeosController.html","title":"controller - GeosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeosController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/geos/geos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                geos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getDistanceBetweenTwoGeoPoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getDistanceBetweenTwoGeoPoints\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDistanceBetweenTwoGeoPoints(body: RequestLatitudeLongitudeGeoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/getDistanceBetweenTwoGeoPoints')@ApiOperation({summary: 'Calculate distance in miles of two points via latitude & longitude'})@ApiResponse({status: 200, description: 'Distance in miles'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            RequestLatitudeLongitudeGeoDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeosModule.html":{"url":"modules/GeosModule.html","title":"module - GeosModule","body":"\n                   \n\n\n\n\n    Modules\n    GeosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeosModule\n\n\n\ncluster_GeosModule_providers\n\n\n\n\nGeosService\n\nGeosService\n\n\n\nGeosModule\n\nGeosModule\n\nGeosModule -->\n\nGeosService->GeosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/geos/geos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeosController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeosService.html":{"url":"injectables/GeosService.html","title":"injectable - GeosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeosService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/geos/geos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDistanceBetweenTwoGeoPoints\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDistanceBetweenTwoGeoPoints\n                        \n                    \n                \n            \n            \n                \ngetDistanceBetweenTwoGeoPoints(body: RequestLatitudeLongitudeGeoDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            RequestLatitudeLongitudeGeoDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetCategoryDto.html":{"url":"classes/GetCategoryDto.html","title":"class - GetCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetCategoryDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/get-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                added_by\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                image\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                image_url\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                parent_category_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the category', example: '64c4ab16336bcced427a125c'})@IsString({message: 'id must be a string/hexa string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        added_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the admin user who adding the category', example: '64c4ab16336bcced427a125c'})@IsString({message: 'Admin user id must be a string/hexa string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description of the category', example: 'Sample description...'})@IsString({message: 'Description must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Buffer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Image of the category', example: 'base64'})@IsBase64({message: 'Image in binary'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'image_url of the category', example: 'https://exmaple.com/image.png'})@IsString({message: 'Image url must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'ip_address must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is active or not', example: 'true'})@IsBoolean({message: 'is_active must be a boolean'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is delete or not', example: 'false'})@IsBoolean({message: 'is_deleted must be  a boolean'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'location of user seperated by Comma in City, State, Country format must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the category', example: 'Hardware'})@IsString({message: 'Name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        parent_category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the parent category', example: '64c4ab16336bcced427a125c'})@IsString({message: 'Parent category id must be a string/hexa string'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetInventoryDto.html":{"url":"classes/GetInventoryDto.html","title":"class - GetInventoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetInventoryDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/inventory/dto/get-inventory.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the category', example: '64c4ab16336bcced427a125c'})@IsString({message: 'id must be a string/hexa string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'ip_address must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is active or not', example: 'true'})@IsBoolean({message: 'is_active must be a boolean'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is delete or not', example: 'false'})@IsBoolean({message: 'is_deleted must be  a boolean'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'location of user seperated by Comma in City, State, Country format must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the category', example: 'Hardware'})@IsString({message: 'Name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserDto.html":{"url":"classes/GetUserDto.html","title":"class - GetUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/get-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                first_name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                last_name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                photo_url\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                user_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the user', example: '64c4ab16336bcced427a125c'})@IsString({message: 'id must be a string/hexa string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid email of user', example: 'some@example.com'})@IsString({message: 'Email must be a valid string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First name of user', example: 'John'})@IsString({message: 'First name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'IP address must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether user is active or not', example: 'true'})@IsBoolean({message: 'Active must be true by default'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether user is delete or not', example: 'false'})@IsBoolean({message: 'Delete must be false by default'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last name of user', example: 'Doe'})@IsString({message: 'Last name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'Current location of user seperated by Comma in City, State, Country format must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid 10 digit phone number of user', example: '1234567890'})@IsPhoneNumber(undefined, {message: 'Phone must be a valid 10 digit mobile number'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        photo_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's photo', example: 'https://example.com/avatar.png'})@IsString({message: 'URL must be valid image URL'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        user_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type of user like: Consumer | Admin', example: 'Consumer'})@IsString({message: 'user type must be a string'})@Prop({required: false, enum: UserTypeEnum, default: undefined, validate: undefined})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Inventory.html":{"url":"classes/Inventory.html","title":"class - Inventory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Inventory\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/inventory/entities/inventory.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                added_by\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                barcode\n                            \n                            \n                                    \n                                    \n                                    \n                                category_id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                depth\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                image_url\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                inventory_location\n                            \n                            \n                                    \n                                    \n                                    \n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                is_in_stock\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                is_refrigeration_required\n                            \n                            \n                                    \n                                    \n                                    \n                                item_id\n                            \n                            \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                maximum_stock_level\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                minimum_stock_level\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                model_number\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                qrcode\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                qrcode_url\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                weight\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        added_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the admin user', example: '64c4ab16336bcced427a125c'})@IsString({message: 'Admin user id must be a string/hexa string'})@Prop({required: true, ref: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        barcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'image_url of the inventory', example: 'https://exmaple.com/image.png'})@IsString({message: 'Barcode must be a string'})@IsOptional()@Prop({required: false, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the category', example: '64c4ab16336bcced427a125c'})@IsString({message: 'Category id must be a string/hexa string'})@Prop({required: true, ref: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        depth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'depth of the inventory in (mm)', example: '120 mm'})@IsString({message: 'Depth (in millimeters) must be a string'})@IsOptional()@Prop({required: false, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description of the inventory', example: 'about inventory...'})@IsString({message: 'Description must be a string'})@IsOptional()@Prop({required: false, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'height of the inventory in (mm)', example: '100 mm'})@IsString({message: 'Height (in millimeters) must be a string'})@IsOptional()@Prop({required: false, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Buffer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Image of the inventory', example: 'base64'})@IsBase64({message: 'Image in binary'})@IsOptional()@Prop({required: false, type: 'buffer'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'image_url of the inventory', example: 'https://exmaple.com/image.png'})@IsString({message: 'Image url must be a string'})@IsOptional()@Prop({required: false, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        inventory_location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Location of the inventory in the real world, like drawer, library', example: 'drawer'})@IsBoolean({message: 'Inventory location must be a string'})@IsOptional()@Prop({required: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'IP address must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether inventory is active or not', example: 'true'})@IsBoolean({message: 'Active must be true by default'})@IsOptional()@Prop({required: false, default: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether inventory is delete or not', example: 'false'})@IsBoolean({message: 'Delete must be false by default'})@IsOptional()@Prop({required: false, default: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        is_in_stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Whether inventory isInStock or not', example: 'true'})@IsBoolean({message: 'Is inventory is in  stock must be a boolean'})@IsOptional()@Prop({required: false, default: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        is_refrigeration_required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Is refrigeration is needed for the inventory, false by default', example: 'false'})@IsBoolean({message: 'Is refrigeration required must be a boolean'})@IsOptional()@Prop({required: false, default: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        item_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique item id of item with the prefix of `IN_` followed by ISO Date string that generates dynamically', example: 'IN_1706347991940'})@IsString({message: 'Item id must be a string'})@Prop({required: true, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'Current location of user seperated by Comma in City, State, Country format must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        maximum_stock_level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'maximum_stock_level the inventory in number', example: '120'})@IsNumber({allowNaN: false}, {message: 'Maximum stock level must be a string'})@IsOptional()@Prop({required: false, type: 'number', default: 10000, min: 10})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        minimum_stock_level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'minimum_stock_level the inventory in number', example: '5'})@IsNumber({allowNaN: false}, {message: 'Minimum stock level must be a string'})@IsOptional()@Prop({required: false, type: 'number', default: 1, min: 1})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        model_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Model number of the inventory', example: 'INQX_2314DEY'})@IsString({message: 'Model number must be a string'})@IsOptional()@Prop({required: false, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the inventory', example: 'Keyboard'})@IsString({message: 'Name must be a string'})@Prop({required: true, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        qrcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Buffer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'qrcode of the inventory', example: 'base64'})@IsBase64({message: 'QRCode in binary'})@IsOptional()@Prop({required: false, type: 'buffer'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        qrcode_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'qrcode_url of the inventory', example: 'https://exmaple.com/qrcode_image.png'})@IsString({message: 'QRCode url must be a string'})@IsOptional()@Prop({required: false, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid positive quantity of the inventory that should be greater than 0 (> 0)', example: '76'})@IsNumber({allowNaN: false, allowInfinity: true, maxDecimalPlaces: 0}, {message: 'Quanity must be a valid positive number that should be greater than 0 (> 0)'})@Prop({required: true, type: 'number'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'weight of the inventory in (grams)', example: '120 grams'})@IsString({message: 'Weight (in grams) must be a string'})@IsOptional()@Prop({required: false, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'width of the inventory in (mm)', example: '120 mm'})@IsString({message: 'Width (in millimeters) must be a string'})@IsOptional()@Prop({required: false, type: 'string'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InventoryController.html":{"url":"controllers/InventoryController.html","title":"controller - InventoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InventoryController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/inventory/inventory.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                inventory\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                getinventory\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createInventoryDto: CreateInventoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@HttpCode(201)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createInventoryDto\n                                            \n                                                            CreateInventoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        getinventory\n                        \n                    \n                \n            \n            \n                \n                        \n                    getinventory(filter: FilterInventoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Get inventory data.'})@ApiResponse({status: 200, description: 'Get inventory data.'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            FilterInventoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateInventoryDto: UpdateInventoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateInventoryDto\n                                            \n                                                            UpdateInventoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InventoryModule.html":{"url":"modules/InventoryModule.html","title":"module - InventoryModule","body":"\n                   \n\n\n\n\n    Modules\n    InventoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InventoryModule\n\n\n\ncluster_InventoryModule_providers\n\n\n\n\nInventoryService\n\nInventoryService\n\n\n\nInventoryModule\n\nInventoryModule\n\nInventoryModule -->\n\nInventoryService->InventoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/inventory/inventory.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InventoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InventoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InventoryService.html":{"url":"injectables/InventoryService.html","title":"injectable - InventoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InventoryService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/inventory/inventory.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                getInventory\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(inventoryModel: mongoose.Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inventoryModel\n                                                  \n                                                        \n                                                                        mongoose.Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createInventoryDto: CreateInventoryDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createInventoryDto\n                                            \n                                                            CreateInventoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInventory\n                        \n                    \n                \n            \n            \n                \ngetInventory(filter: FilterInventoryDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            FilterInventoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateInventoryDto: UpdateInventoryDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateInventoryDto\n                                            \n                                                            UpdateInventoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/jwt/jwt-strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/logger/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MessengerController.html":{"url":"controllers/MessengerController.html","title":"controller - MessengerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MessengerController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/messenger/messenger.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                messenger\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                sendOTP\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        sendOTP\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendOTP(body: OTPRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sendOtp')@ApiOperation({summary: 'Will send email with OTP'})@ApiResponse({status: 200, description: 'OTP sent successfully'})@ApiBadRequestResponse({status: 400, description: 'Bad request body. Please try again.'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            OTPRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessengerModule.html":{"url":"modules/MessengerModule.html","title":"module - MessengerModule","body":"\n                   \n\n\n\n\n    Modules\n    MessengerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessengerModule\n\n\n\ncluster_MessengerModule_providers\n\n\n\n\nMessengerService\n\nMessengerService\n\n\n\nMessengerModule\n\nMessengerModule\n\nMessengerModule -->\n\nMessengerService->MessengerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/messenger/messenger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MessengerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MessengerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessengerService.html":{"url":"injectables/MessengerService.html","title":"injectable - MessengerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessengerService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/messenger/messenger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compileHTMLToHandlebars\n                            \n                            \n                                    Async\n                                sendOTP\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compileHTMLToHandlebars\n                        \n                    \n                \n            \n            \n                \n                        \n                    compileHTMLToHandlebars(filename: string, content: OTPDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                content\n                                            \n                                                            OTPDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendOTP\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendOTP(undefined: OTPRequestDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            OTPRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OTPDto.html":{"url":"classes/OTPDto.html","title":"class - OTPDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OTPDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/messenger/dto/otp.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                OTP\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of receiver', example: 'Shishubh'})@IsString({message: 'Name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        OTP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'OTP for receiver', example: '123456'})@IsString({message: 'OTP must be a string'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OTPRequestDto.html":{"url":"classes/OTPRequestDto.html","title":"class - OTPRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OTPRequestDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/messenger/dto/otp.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of receiver', example: 'Shishubh'})@IsString({message: 'Name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Email of receiver', example: 'sen.shishubh@gmail.com'})@IsString({message: 'Email must be a string'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestLatitudeLongitudeGeoDto.html":{"url":"classes/RequestLatitudeLongitudeGeoDto.html","title":"class - RequestLatitudeLongitudeGeoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestLatitudeLongitudeGeoDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/geos/dto/request-geo.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                firstLocationLatitude\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                firstLocationLongitude\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                secondLocationLatitude\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                secondLocationLongitude\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                        firstLocationLatitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@IsNotEmpty()@Min(undefined, {message: 'Latitude must be between -90 and 90 degrees'})@Max(90, {message: 'Latitude must be between -90 and 90 degrees'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                        firstLocationLongitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@IsNotEmpty()@Min(undefined, {message: 'Longitude must be between -180 and 180 degrees'})@Max(180, {message: 'Longitude must be between -180 and 180 degrees'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                        secondLocationLatitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@IsNotEmpty()@Min(undefined, {message: 'Latitude must be between -90 and 90 degrees'})@Max(90, {message: 'Latitude must be between -90 and 90 degrees'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                        secondLocationLongitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@IsNotEmpty()@Min(undefined, {message: 'Longitude must be between -180 and 180 degrees'})@Max(180, {message: 'Longitude must be between -180 and 180 degrees'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SanitizeFiterPipe.html":{"url":"injectables/SanitizeFiterPipe.html","title":"injectable - SanitizeFiterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SanitizeFiterPipe\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/sanitizers/get-filters.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value?: Partial, metadata?: ArgumentMetadata)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SanitizeUpdateRequestPipe.html":{"url":"injectables/SanitizeUpdateRequestPipe.html","title":"injectable - SanitizeUpdateRequestPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SanitizeUpdateRequestPipe\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/pipes/sanitize_update_request.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                            \n                                    Async\n                                validateUpdateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value?: GetCategoryDto, metadata?: ArgumentMetadata)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            GetCategoryDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUpdateRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUpdateRequest(body: Record)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInResponseWithEmailPasswordDto.html":{"url":"classes/SignInResponseWithEmailPasswordDto.html","title":"class - SignInResponseWithEmailPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInResponseWithEmailPasswordDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/signin-response.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            User\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                first_name\n                            \n                            \n                                    \n                                    \n                                    \n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    \n                                last_name\n                            \n                            \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                photo_url\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                user_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid email of user', example: 'some@example.com'})@IsEmail({}, {message: 'Email must be a valid string'})@Prop({required: true, unique: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First name of user', example: 'John'})@IsString({message: 'First name must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'IP address must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is active or not', example: 'true'})@IsBoolean({message: 'Active must be true by default'})@IsOptional()@Prop({required: false, default: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is delete or not', example: 'false'})@IsBoolean({message: 'Delete must be false by default'})@IsOptional()@Prop({required: false, default: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last name of user', example: 'Doe'})@IsString({message: 'Last name must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'Current location of user seperated by Comma in City, State, Country format must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid password of user', example: 'Jhg$@87&Tywe'})@IsString({message: 'Password must be a string'})@Prop({required: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid 10 digit phone number of user', example: '1234567890'})@IsPhoneNumber(undefined, {message: 'Phone must be a valid 10 digit mobile number'})@Prop({required: false, type: 'number'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        photo_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User's photo', example: 'https://example.com/avatar.png'})@IsString({message: 'URL must be valid image URL'})@IsOptional()@Prop({required: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        user_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Type of user like: Consumer | Admin', example: 'Consumer'})@IsString({message: 'user type must be a string'})@IsOptional()@Prop({required: false, enum: UserTypeEnum, default: undefined, validate: undefined})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInWithEmailPasswordDto.html":{"url":"classes/SignInWithEmailPasswordDto.html","title":"class - SignInWithEmailPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInWithEmailPasswordDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/signin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid user email', example: 'some@example.com'})@IsString()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid user password', example: 'sRVTIV51Eg1mauX'})@IsString()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthDto.html":{"url":"classes/UpdateAuthDto.html","title":"class - UpdateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/access/dto/access.update.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                api_key\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                expiry\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                is_expired\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                key_name\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                location\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        api_key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Api key of user', example: ''})@IsString({message: 'Api key must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        expiry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Expiry date must be a default date + 30 days', example: '2023-07-29T06:00:54.567Z'})@IsDateString({}, {message: 'Expiry date must be a default date + 30 days'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'IP address must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether key is active or not', example: 'true'})@IsBoolean({message: 'Active must be true by default'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether key is deleted or not', example: 'false'})@IsBoolean({message: 'Delete must be false by default'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        is_expired\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether key is expired or not', example: 'false'})@IsBoolean({message: 'Expired must be false by default'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        key_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Key name of user', example: 'John'})@IsString({message: 'Key name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'Current location of user seperated by Comma in City, State, Country format must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the user', example: '64c4ab16336bcced427a125c'})@IsString({message: 'User Id must be a string/hexa string'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/category/dto/update-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                added_by\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                image\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                image_url\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                parent_category_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        added_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the admin user who adding the category', example: '64c4ab16336bcced427a125c'})@IsString({message: 'Admin user id must be a string/hexa string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description of the category', example: 'Sample description...'})@IsString({message: 'Description must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Buffer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Image of the category', example: 'base64'})@IsBase64({message: 'Image in binary'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'image_url of the category', example: 'https://exmaple.com/image.png'})@IsString({message: 'Image url must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'ip_address must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is active or not', example: 'true'})@IsBoolean({message: 'is_active must be a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is delete or not', example: 'false'})@IsBoolean({message: 'is_deleted must be  a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'location of user seperated by Comma in City, State, Country format must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the category', example: 'Hardware'})@IsString({message: 'Name must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        parent_category_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Id of the parent category', example: '64c4ab16336bcced427a125c'})@IsString({message: 'Parent category id must be a string/hexa string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInventoryDto.html":{"url":"classes/UpdateInventoryDto.html","title":"class - UpdateInventoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInventoryDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/inventory/dto/update-inventory.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'ip_address must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is active or not', example: 'true'})@IsBoolean({message: 'is_active must be a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is delete or not', example: 'false'})@IsBoolean({message: 'is_deleted must be  a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'location of user seperated by Comma in City, State, Country format must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the category', example: 'Hardware'})@IsString({message: 'Name must be a string'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                first_name\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                last_name\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                location\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                photo_url\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                user_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First name of user', example: 'John'})@IsString({message: 'first_name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'ip_address must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is active or not', example: 'true'})@IsBoolean({message: 'is_active must be a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is delete or not', example: 'false'})@IsBoolean({message: 'is_deleted must be  a boolean'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last name of user', example: 'Doe'})@IsString({message: 'last_name must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'location of user seperated by Comma in City, State, Country format must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid password of user', example: 'Jhg$@87&Tywe'})@IsString({message: 'password must be a string'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        photo_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User's photo', example: 'https://example.com/avatar.png'})@IsString({message: 'photo_url must be valid image URL'})@IsOptional()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        user_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Type of user like: Consumer | Admin', example: 'Consumer'})@IsString({message: 'user_type must be a string'})@IsOptional()@Prop({required: false, enum: UserTypeEnum, default: undefined, validate: undefined})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                first_name\n                            \n                            \n                                    \n                                    \n                                    \n                                ip_address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                is_active\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                is_deleted\n                            \n                            \n                                    \n                                    \n                                    \n                                last_name\n                            \n                            \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                photo_url\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                user_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid email of user', example: 'some@example.com'})@IsEmail({}, {message: 'Email must be a valid string'})@Prop({required: true, unique: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First name of user', example: 'John'})@IsString({message: 'First name must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        ip_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User's IP address', example: '127.0.0.1'})@IsString({message: 'IP address must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        is_active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is active or not', example: 'true'})@IsBoolean({message: 'Active must be true by default'})@IsOptional()@Prop({required: false, default: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        is_deleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether user is delete or not', example: 'false'})@IsBoolean({message: 'Delete must be false by default'})@IsOptional()@Prop({required: false, default: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last name of user', example: 'Doe'})@IsString({message: 'Last name must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Current location of user seperated by Comma in City, State, Country format', example: 'Indore, Madhya Pradesh, India'})@IsString({message: 'Current location of user seperated by Comma in City, State, Country format must be a string'})@Prop({required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid password of user', example: 'Jhg$@87&Tywe'})@IsString({message: 'Password must be a string'})@Prop({required: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Valid 10 digit phone number of user', example: '1234567890'})@IsPhoneNumber(undefined, {message: 'Phone must be a valid 10 digit mobile number'})@Prop({required: false, type: 'number'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        photo_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User's photo', example: 'https://example.com/avatar.png'})@IsString({message: 'URL must be valid image URL'})@IsOptional()@Prop({required: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        user_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Type of user like: Consumer | Admin', example: 'Consumer'})@IsString({message: 'user type must be a string'})@IsOptional()@Prop({required: false, enum: UserTypeEnum, default: undefined, validate: undefined})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteMultipleUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUserById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(user: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create an user'})@ApiResponse({status: 201, description: 'Returns an object of created user'})@ApiBadRequestResponse({status: 400, description: 'User not created. Please try again.'})@HttpCode(201)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteMultipleUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMultipleUsers(ids: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiOperation({summary: 'Delete multiple users by id'})@ApiResponse({status: 200, description: 'Users has been deleted'})@ApiNotFoundResponse({status: 404, description: 'Users Not Found'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete user by id'})@ApiResponse({status: 200, description: 'User has been deleted'})@ApiNotFoundResponse({status: 404, description: 'User Not Found'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers(filter?: FilterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all users'})@ApiResponse({status: 200, description: 'Returns an array of users'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            FilterUserDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get user by Id'})@ApiResponse({status: 200, description: 'Returns an object of user'})@ApiNotFoundResponse({status: 404, description: 'User Not Found'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, user: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOperation({summary: 'Update an user'})@ApiResponse({status: 200, description: 'Returns an object of updated user'})@ApiBadRequestResponse({status: 400, description: 'User not updated. Please try again.'})@HttpCode(200)\n                \n            \n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteMultiples\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getUserByEmailPassword\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: mongoose.Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        mongoose.Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: CreateUserDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteMultiples\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMultiples(ids: string[])\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserByEmailPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserByEmailPassword(body: SignInWithEmailPasswordDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SignInWithEmailPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(filter?: FilterUserDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            FilterUserDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, user: UpdateUserDto)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerificationJWTTokenDto.html":{"url":"classes/VerificationJWTTokenDto.html","title":"class - VerificationJWTTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerificationJWTTokenDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/signin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.10.3\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/mongoose : ^10.0.1\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            geographiclib-dms : ^2.0.0\n        \n            geographiclib-geodesic : ^2.0.0\n        \n            handlebars : ^4.7.8\n        \n            mongoose : ^7.6.8\n        \n            nodemailer : ^6.9.9\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserTypeEnum   (src/.../user.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/user/enums/user.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserTypeEnum\n                    \n                \n                        \n                            \n                                 Consumer\n                            \n                        \n                        \n                            \n                                Value : Consumer\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : Admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\nNest is a progressive Node.js framework for building efficient and scalable server-side applications.\n\nDescription\nThis is the Nest CRUD Project for practice.\nSwagger Documentation: http://localhost:3000/api\nInstallation\nExample :$ npm installRunning the lint and fix all lint errors\nExample :$ npm run lintRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covFolder Structure\nExample :project-root/\n├── 📂 src/\n│ ├── 📄 app.controller.ts\n│ ├── 📄 app.module.ts\n│ ├── 📄 app.service.ts\n│ │\n│ ├── 📂 modules/\n│ │ ├── 📂 user/\n│ │ │ ├── 📂 controllers/\n│ │ │ │ ├── 📄 user.controller.ts\n│ │ │ │\n│ │ │ ├── 📂 dto/ (Data Transfer Objects)\n│ │ │ │ ├── 📄 create-user.dto.ts\n│ │ │ │ ├── 📄 update-user.dto.ts\n│ │ │ │\n│ │ │ ├── 📂 entities/\n│ │ │ │ ├── 📄 user.entity.ts\n│ │ │ │\n│ │ │ ├── 📂 services/\n│ │ │ │ ├── 📄 user.service.ts\n│ │ │ │\n│ │ │ ├── 📄 user.module.ts\n│ │ │\n│ │ ├── 📂 auth/\n│ │ │ ├── 📂 controllers/\n│ │ │ │ ├── 📄 auth.controller.ts\n│ │ │ │\n│ │ │ ├── 📂 services/\n│ │ │ │ ├── 📄 auth.service.ts\n│ │ │ │\n│ │ │ ├── 📂 strategies/\n│ │ │ │ ├── 📄 jwt.strategy.ts\n│ │ │ │\n│ │ │ ├── 📄 auth.module.ts\n│ │ │\n│ │ ├── 📂 other-modules/ (Add more modules as needed)\n│ │\n│ ├── 📂 shared/ (Re-usable components, pipes, etc.)\n│ │ ├── 📂 filters/\n│ │ │ ├── 📄 http-exception.filter.ts\n│ │ │\n│ │ ├── 📂 pipes/\n│ │ │ ├── 📄 validation.pipe.ts\n│ │ │\n│ │ ├── 📂 guards/\n│ │ │ ├── 📄 jwt-auth.guard.ts\n│ │ │\n│ │ ├── 📂 decorators/\n│ │ │ ├── 📄 roles.decorator.ts\n│ │\n│ ├── 📄 main.ts (Application entry point)\n│\n├── 📂 test/ (Unit and E2E tests)\n│\n├── 📄 .env (Environment variables)\n├── 📄 .env.example (Example .env file)\n├── 📄 .gitignore\n├── 📄 package.json\n├── 📄 tsconfig.json\n└── 📄 README.mdDescription\nHere is a brief description of each folder and file in the project structure:\n\nsrc/: This directory contains the main application files.\napp.controller.ts: The main controller that handles incoming HTTP requests and routes them to the appropriate service.\napp.module.ts: The root module that organizes all other modules and components of the application.\napp.service.ts: The main service that contains the application's business logic.\nmodules/: This directory organizes the application into different modules, each responsible for specific features.\nuser/: An example module for managing user-related operations.\ncontrollers/: Contains controller files that handle user-related HTTP endpoints.\ndto/: Contains Data Transfer Objects (DTOs) used for data validation and data transformation.\nentities/: Contains the TypeORM entities representing the user data model.\nservices/: Contains service files that handle user-related business logic.\nuser.module.ts: The module file that ties together all the components of the user module.\n\n\nauth/: An example module for handling authentication and authorization.\ncontrollers/: Contains controller files that handle authentication-related endpoints.\nservices/: Contains service files responsible for authentication and authorization logic.\nstrategies/: Contains strategy files for implementing authentication strategies (e.g., JWT strategy).\nauth.module.ts: The module file that ties together all the components of the authentication module.\n\n\nother-modules/: You can add more modules here as needed, each with its own controller, service, etc.\nshared/: Contains re-usable components, filters, pipes, guards, and decorators that can be used across multiple modules.\ntest/: Contains unit tests and end-to-end tests for your application.\n.env: The environment file where you can define environment variables for your application.\n.env.example: An example .env file to show the format and expected variables.\n.gitignore: The file to specify which files and directories should be ignored by version control (e.g., .env).\npackage.json: Contains project metadata, dependencies, and scripts.\ntsconfig.json: TypeScript configuration file.\nREADME.md: This file, providing an overview of the project and its folder structure.\n\nFolder structure might be quite differ as we customize this structure based on our specific project requirements. This is just a starting point to help setup-ing Nest.js project effectively.\nWorking Endpoints\nUsers - GetAll, GetById, Create, Update\nAuth - generateJWTToken with mongo user data object\nAccess - GetAll, GetById, getByUserId, Create\nNot Working Endpoints\nLicense\nGPL-3.0 license\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccessModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InventoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessengerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccessModule\n\n\n\ncluster_AccessModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_GeosModule\n\n\n\ncluster_GeosModule_providers\n\n\n\ncluster_InventoryModule\n\n\n\ncluster_InventoryModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAccessService\n\nAccessService\n\n\n\nAccessModule\n\nAccessModule\n\nAccessModule -->\n\nAccessService->AccessModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccessModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nGeosModule\n\nGeosModule\n\nAppModule -->\n\nGeosModule->AppModule\n\n\n\n\n\nInventoryModule\n\nInventoryModule\n\nAppModule -->\n\nInventoryModule->AppModule\n\n\n\n\n\nMessengerModule\n\nMessengerModule\n\nAppModule -->\n\nMessengerModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nMessengerService\n\nMessengerService\n\nMessengerModule -->\n\nMessengerService->MessengerModule\n\n\n\nAppModule -->\n\nMessengerService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nGeosService\n\nGeosService\n\nGeosModule -->\n\nGeosService->GeosModule\n\n\n\n\n\nInventoryService\n\nInventoryService\n\nInventoryModule -->\n\nInventoryService->InventoryModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    25 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : sourabh\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccessSchema   (src/.../access.entity.ts)\n                        \n                        \n                            appReady   (src/.../app-ready.ts)\n                        \n                        \n                            calculateDistance   (src/.../distance.helpers.ts)\n                        \n                        \n                            CategorySchema   (src/.../category.entities.ts)\n                        \n                        \n                            generateApiKey   (src/.../index.ts)\n                        \n                        \n                            generateDatetimeOfMonthForward   (src/.../index.ts)\n                        \n                        \n                            generateOTP   (src/.../index.ts)\n                        \n                        \n                            getEmailUsername   (src/.../index.ts)\n                        \n                        \n                            InventorySchema   (src/.../inventory.entity.ts)\n                        \n                        \n                            objectIdToString   (src/.../index.ts)\n                        \n                        \n                            stringToObjectId   (src/.../index.ts)\n                        \n                        \n                            SwaggerLoader   (src/.../swagger.ts)\n                        \n                        \n                            toRadians   (src/.../degree.helpers.ts)\n                        \n                        \n                            UserSchema   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/access/entities/access.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AccessSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Access)\n                    \n                \n\n\n        \n    \n\n    src/config/app-ready.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (PORT: number | string): void => {\n  console.log(\n    `\\n🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌🙌`,\n  );\n  console.log(`Project Documentation http://127.0.0.1:${PORT} | Run 'npm run g:doc' for the project documentation`);\n  console.log(`Swagger Documentation http://localhost:${PORT}/api`);\n  console.log(`Application Running http://localhost:${PORT}`);\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/geos/helpers/distance.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        calculateDistance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ({\n  firstLocationLatitude,\n  firstLocationLongitude,\n  secondLocationLatitude,\n  secondLocationLongitude,\n}: RequestLatitudeLongitudeGeoDto) => {\n  const R = 3958.8; // Earth radius in miles (you can use 6371 for kilometers)\n\n  const dLat = toRadians(+secondLocationLatitude - +firstLocationLatitude);\n  const dLon = toRadians(+secondLocationLongitude - +firstLocationLongitude);\n\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(toRadians(+firstLocationLatitude)) *\n      Math.cos(toRadians(+secondLocationLatitude)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n  const distance = R * c;\n\n  return distance;\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/category/entities/category.entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Category)\n                    \n                \n\n\n        \n    \n\n    src/utils/access/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateApiKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (length = 25): string => {\n  const characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  let apiKey = '';\n\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n    src/utils/datetime/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateDatetimeOfMonthForward\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): Date => {\n  const todayDate: Date = new Date();\n  todayDate.setDate(todayDate.getDate() + 30);\n  return todayDate;\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/function/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateOTP\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): string => {\n  return Math.floor(100000 + Math.random() * 900000).toString();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEmailUsername\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (email: string): string => {\n  const atIndex = email.indexOf('@');\n  if (atIndex === -1) {\n    // If \"@\" symbol is not found in the email, return the original email\n    return email;\n  }\n\n  // Extract the part of the email before the \"@\" symbol\n  const username = email.substring(0, atIndex);\n  return username;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        objectIdToString\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  objectId: mongoose.Types.ObjectId,\n): string | null => {\n  try {\n    return objectId.toString();\n  } catch (error) {\n    // Handle invalid input, e.g., return null or throw an error\n    return null;\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToObjectId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  str: string,\n): mongoose.Types.ObjectId | null => {\n  try {\n    return new mongoose.Types.ObjectId(str);\n  } catch (error) {\n    // Handle invalid input, e.g., return null or throw an error\n    return null;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/inventory/entities/inventory.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InventorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Inventory)\n                    \n                \n\n\n        \n    \n\n    src/config/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SwaggerLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const config = new DocumentBuilder()\n    .setTitle('CRUD example')\n    .setDescription('The CRUD API description')\n    .setVersion('1.0')\n    .setContact(\n      'Sourabh',\n      'https://sourabhsen201313.wixsite.com/sourabh',\n      'sourabhsen201313@gmail.com',\n    ) // Set contact information\n    .addBearerAuth() // Enable Bearer authentication for your API\n    .build();\n  return config;\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/geos/helpers/degree.helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toRadians\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (degrees: number): number => {\n  return degrees * (Math.PI / 180);\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/user/entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
